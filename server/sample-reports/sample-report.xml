<?xml version="1.0"?>
<OWASPZAPReport programName="OWASP ZAP" version="2.12.0" generated="Mon, 10 Jul 2023 07:43:26">

	<site name="http://public-firing-range.appspot.com" host="public-firing-range.appspot.com"
		port="80" ssl="false">
		<alerts>

			<alertitem>
				<pluginid>10021</pluginid>
				<alertRef>10021</alertRef>
				<alert>X-Content-Type-Options Header Missing</alert>
				<name>X-Content-Type-Options Header Missing</name>
				<riskcode>1</riskcode>
				<confidence>2</confidence>
				<riskdesc>Low (Medium)</riskdesc>
				<confidencedesc>Medium</confidencedesc>
				<desc>&lt;p&gt;The Anti-MIME-Sniffing header X-Content-Type-Options was not set to
					&apos;nosniff&apos;. This allows older versions of Internet Explorer and Chrome
					to perform MIME-sniffing on the response body, potentially causing the response
					body to be interpreted and displayed as a content type other than the declared
					content type. Current (early 2014) and legacy versions of Firefox will use the
					declared content type (if one is set), rather than performing
					MIME-sniffing.&lt;/p&gt;</desc>
				<instances>

					<instance>
						<uri>http://public-firing-range.appspot.com/mixedcontent/script.js</uri>
						<method>GET</method>
						<param>X-Content-Type-Options</param>
						<attack></attack>
						<evidence></evidence>
						<otherinfo>This issue still applies to error type pages (401, 403, 500,
							etc.) as those pages are often still affected by injection issues, in
							which case there is still concern for browsers sniffing pages away from
							their actual content type.
							At &quot;High&quot; threshold this scan rule will not alert on client or
							server error responses.</otherinfo>
					</instance>

				</instances>
				<count>1</count>
				<solution>&lt;p&gt;Ensure that the application/web server sets the Content-Type
					header appropriately, and that it sets the X-Content-Type-Options header to
					&apos;nosniff&apos; for all web pages.&lt;/p&gt;&lt;p&gt;If possible, ensure
					that the end user uses a standards-compliant and modern web browser that does
					not perform MIME-sniffing at all, or that can be directed by the web
					application/web server to not perform MIME-sniffing.&lt;/p&gt;</solution>
				<otherinfo>&lt;p&gt;This issue still applies to error type pages (401, 403, 500,
					etc.) as those pages are often still affected by injection issues, in which case
					there is still concern for browsers sniffing pages away from their actual
					content type.&lt;/p&gt;&lt;p&gt;At &quot;High&quot; threshold this scan rule
					will not alert on client or server error responses.&lt;/p&gt;</otherinfo>
				<reference>
					&lt;p&gt;http://msdn.microsoft.com/en-us/library/ie/gg622941%28v=vs.85%29.aspx&lt;/p&gt;&lt;p&gt;https://owasp.org/www-community/Security_Headers&lt;/p&gt;</reference>
				<cweid>693</cweid>
				<wascid>15</wascid>
				<sourceid>266</sourceid>
			</alertitem>

		</alerts>
	</site>


	<site name="https://public-firing-range.appspot.com" host="public-firing-range.appspot.com"
		port="443" ssl="true">
		<alerts>

			<alertitem>
				<pluginid>10028</pluginid>
				<alertRef>10028</alertRef>
				<alert>Open Redirect</alert>
				<name>Open Redirect</name>
				<riskcode>3</riskcode>
				<confidence>2</confidence>
				<riskdesc>High (Medium)</riskdesc>
				<confidencedesc>Medium</confidencedesc>
				<desc>&lt;p&gt;Open redirects are one of the OWASP 2010 Top Ten vulnerabilities.
					This check looks at user-supplied input in query string parameters and POST data
					to identify where open redirects might be possible. Open redirects occur when an
					application allows user-supplied input (e.g. http://nottrusted.com) to control
					an offsite redirect. This is generally a pretty accurate way to find where 301
					or 302 redirects could be exploited by spammers or phishing
					attacks.&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;For example an attacker could
					supply a user with the following link:
					http://example.com/example.php?url=http://malicious.example.com.&lt;/p&gt;</desc>
				<instances>

					<instance>
						<uri>
							https://public-firing-range.appspot.com/urldom/redirect?url=http://example.com</uri>
						<method>GET</method>
						<param>url</param>
						<attack></attack>
						<evidence></evidence>
						<otherinfo>The 301 or 302 response to a request for the following URL
							appeared to contain user input in the location header:
							https://public-firing-range.appspot.com/urldom/redirect?url=http://example.com
							The user input found was:

							url=http://example.com

							The context was:

							http://example.com</otherinfo>
					</instance>

				</instances>
				<count>1</count>
				<solution>&lt;p&gt;To avoid the open redirect vulnerability, parameters of the
					application script/program must be validated before sending 302 HTTP code
					(redirect) to the client browser. Implement safe redirect functionality that
					only redirects to relative URI&apos;s, or a list of trusted domains&lt;/p&gt;</solution>
				<otherinfo>&lt;p&gt;The 301 or 302 response to a request for the following URL
					appeared to contain user input in the location
					header:&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;https://public-firing-range.appspot.com/urldom/redirect?url=http://example.com&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;The
					user input found
					was:&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;url=http://example.com&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;The
					context was:&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;http://example.com&lt;/p&gt;</otherinfo>
				<reference>
					&lt;p&gt;https://cheatsheetseries.owasp.org/cheatsheets/Unvalidated_Redirects_and_Forwards_Cheat_Sheet.html&lt;/p&gt;&lt;p&gt;https://cwe.mitre.org/data/definitions/601.html&lt;/p&gt;</reference>
				<cweid>601</cweid>
				<wascid>38</wascid>
				<sourceid>607</sourceid>
			</alertitem>


			<alertitem>
				<pluginid>10202</pluginid>
				<alertRef>10202</alertRef>
				<alert>Absence of Anti-CSRF Tokens</alert>
				<name>Absence of Anti-CSRF Tokens</name>
				<riskcode>2</riskcode>
				<confidence>1</confidence>
				<riskdesc>Medium (Low)</riskdesc>
				<confidencedesc>Low</confidencedesc>
				<desc>&lt;p&gt;No Anti-CSRF tokens were found in a HTML submission
					form.&lt;/p&gt;&lt;p&gt;A cross-site request forgery is an attack that involves
					forcing a victim to send an HTTP request to a target destination without their
					knowledge or intent in order to perform an action as the victim. The underlying
					cause is application functionality using predictable URL/form actions in a
					repeatable way. The nature of the attack is that CSRF exploits the trust that a
					web site has for a user. By contrast, cross-site scripting (XSS) exploits the
					trust that a user has for a web site. Like XSS, CSRF attacks are not necessarily
					cross-site, but they can be. Cross-site request forgery is also known as CSRF,
					XSRF, one-click attack, session riding, confused deputy, and sea
					surf.&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;CSRF attacks are effective in a
					number of situations, including:&lt;/p&gt;&lt;p&gt; * The victim has an active
					session on the target site.&lt;/p&gt;&lt;p&gt; * The victim is authenticated via
					HTTP auth on the target site.&lt;/p&gt;&lt;p&gt; * The victim is on the same
					local network as the target site.&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;CSRF has
					primarily been used to perform an action against a target site using the
					victim&apos;s privileges, but recent techniques have been discovered to disclose
					information by gaining access to the response. The risk of information
					disclosure is dramatically increased when the target site is vulnerable to XSS,
					because XSS can be used as a platform for CSRF, allowing the attack to operate
					within the bounds of the same-origin policy.&lt;/p&gt;</desc>
				<instances>

					<instance>
						<uri>
							https://public-firing-range.appspot.com/angular/angular_body_raw_post/1.6.0</uri>
						<method>GET</method>
						<param></param>
						<attack></attack>
						<evidence>&lt;form action=&quot;&quot; method=&quot;post&quot;&gt;</evidence>
						<otherinfo>No known Anti-CSRF token [anticsrf, CSRFToken,
							__RequestVerificationToken, csrfmiddlewaretoken, authenticity_token,
							OWASP_CSRFTOKEN, anoncsrf, csrf_token, _csrf, _csrfSecret, __csrf_magic,
							CSRF, _token, _csrf_token] was found in the following HTML form: [Form
							1: &quot;q&quot; ].</otherinfo>
					</instance>


					<instance>
						<uri>https://public-firing-range.appspot.com/reflected/parameter/form</uri>
						<method>GET</method>
						<param></param>
						<attack></attack>
						<evidence>&lt;form method=&quot;POST&quot;&gt;</evidence>
						<otherinfo>No known Anti-CSRF token [anticsrf, CSRFToken,
							__RequestVerificationToken, csrfmiddlewaretoken, authenticity_token,
							OWASP_CSRFTOKEN, anoncsrf, csrf_token, _csrf, _csrfSecret, __csrf_magic,
							CSRF, _token, _csrf_token] was found in the following HTML form: [Form
							1: &quot;q&quot; ].</otherinfo>
					</instance>


					<instance>
						<uri>
							https://public-firing-range.appspot.com/angular/angular_body_raw_post/1.6.0</uri>
						<method>POST</method>
						<param></param>
						<attack></attack>
						<evidence>&lt;form action=&quot;&quot; method=&quot;post&quot;&gt;</evidence>
						<otherinfo>No known Anti-CSRF token [anticsrf, CSRFToken,
							__RequestVerificationToken, csrfmiddlewaretoken, authenticity_token,
							OWASP_CSRFTOKEN, anoncsrf, csrf_token, _csrf, _csrfSecret, __csrf_magic,
							CSRF, _token, _csrf_token] was found in the following HTML form: [Form
							1: &quot;q&quot; ].</otherinfo>
					</instance>


					<instance>
						<uri>https://public-firing-range.appspot.com/reflected/parameter/form</uri>
						<method>POST</method>
						<param></param>
						<attack></attack>
						<evidence>&lt;form method=&quot;POST&quot;&gt;</evidence>
						<otherinfo>No known Anti-CSRF token [anticsrf, CSRFToken,
							__RequestVerificationToken, csrfmiddlewaretoken, authenticity_token,
							OWASP_CSRFTOKEN, anoncsrf, csrf_token, _csrf, _csrfSecret, __csrf_magic,
							CSRF, _token, _csrf_token] was found in the following HTML form: [Form
							1: &quot;q&quot; ].</otherinfo>
					</instance>

				</instances>
				<count>4</count>
				<solution>&lt;p&gt;Phase: Architecture and Design&lt;/p&gt;&lt;p&gt;Use a vetted
					library or framework that does not allow this weakness to occur or provides
					constructs that make this weakness easier to avoid.&lt;/p&gt;&lt;p&gt;For
					example, use anti-CSRF packages such as the OWASP
					CSRFGuard.&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;Phase:
					Implementation&lt;/p&gt;&lt;p&gt;Ensure that your application is free of
					cross-site scripting issues, because most CSRF defenses can be bypassed using
					attacker-controlled script.&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;Phase:
					Architecture and Design&lt;/p&gt;&lt;p&gt;Generate a unique nonce for each form,
					place the nonce into the form, and verify the nonce upon receipt of the form. Be
					sure that the nonce is not predictable (CWE-330).&lt;/p&gt;&lt;p&gt;Note that
					this can be bypassed using XSS.&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;Identify
					especially dangerous operations. When the user performs a dangerous operation,
					send a separate confirmation request to ensure that the user intended to perform
					that operation.&lt;/p&gt;&lt;p&gt;Note that this can be bypassed using
					XSS.&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;Use the ESAPI Session Management
					control.&lt;/p&gt;&lt;p&gt;This control includes a component for
					CSRF.&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;Do not use the GET method for any
					request that triggers a state
					change.&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;Phase:
					Implementation&lt;/p&gt;&lt;p&gt;Check the HTTP Referer header to see if the
					request originated from an expected page. This could break legitimate
					functionality, because users or proxies may have disabled sending the Referer
					for privacy reasons.&lt;/p&gt;</solution>
				<otherinfo>&lt;p&gt;No known Anti-CSRF token [anticsrf, CSRFToken,
					__RequestVerificationToken, csrfmiddlewaretoken, authenticity_token,
					OWASP_CSRFTOKEN, anoncsrf, csrf_token, _csrf, _csrfSecret, __csrf_magic, CSRF,
					_token, _csrf_token] was found in the following HTML form: [Form 1:
					&quot;q&quot; ].&lt;/p&gt;</otherinfo>
				<reference>
					&lt;p&gt;http://projects.webappsec.org/Cross-Site-Request-Forgery&lt;/p&gt;&lt;p&gt;http://cwe.mitre.org/data/definitions/352.html&lt;/p&gt;</reference>
				<cweid>352</cweid>
				<wascid>9</wascid>
				<sourceid>433</sourceid>
			</alertitem>


			<alertitem>
				<pluginid>10055</pluginid>
				<alertRef>10055-4</alertRef>
				<alert>CSP: Wildcard Directive</alert>
				<name>CSP: Wildcard Directive</name>
				<riskcode>2</riskcode>
				<confidence>3</confidence>
				<riskdesc>Medium (High)</riskdesc>
				<confidencedesc>High</confidencedesc>
				<desc>&lt;p&gt;Content Security Policy (CSP) is an added layer of security that
					helps to detect and mitigate certain types of attacks. Including (but not
					limited to) Cross Site Scripting (XSS), and data injection attacks. These
					attacks are used for everything from data theft to site defacement or
					distribution of malware. CSP provides a set of standard HTTP headers that allow
					website owners to declare approved sources of content that browsers should be
					allowed to load on that page &#x2014; covered types are JavaScript, CSS, HTML
					frames, fonts, images and embeddable objects such as Java applets, ActiveX,
					audio and video files.&lt;/p&gt;</desc>
				<instances>

					<instance>
						<uri>
							https://public-firing-range.appspot.com/invalidframingconfig/frameancestorsnonenoxfodeny</uri>
						<method>GET</method>
						<param>Content-Security-Policy</param>
						<attack></attack>
						<evidence>frame-ancestors &apos;none&apos;</evidence>
						<otherinfo>The following directives either allow wildcard sources (or
							ancestors), are not defined, or are overly broadly defined:
							script-src, style-src, img-src, connect-src, frame-src, font-src,
							media-src, object-src, manifest-src, worker-src, prefetch-src,
							form-action

							The directive(s): form-action are among the directives that do not
							fallback to default-src, missing/excluding them is the same as allowing
							anything.</otherinfo>
					</instance>


					<instance>
						<uri>
							https://public-firing-range.appspot.com/invalidframingconfig/frameancestorsnoxfoallowfrom</uri>
						<method>GET</method>
						<param>Content-Security-Policy</param>
						<attack></attack>
						<evidence>frame-ancestors https://example.com</evidence>
						<otherinfo>The following directives either allow wildcard sources (or
							ancestors), are not defined, or are overly broadly defined:
							script-src, style-src, img-src, connect-src, frame-src, font-src,
							media-src, object-src, manifest-src, worker-src, prefetch-src,
							form-action

							The directive(s): form-action are among the directives that do not
							fallback to default-src, missing/excluding them is the same as allowing
							anything.</otherinfo>
					</instance>


					<instance>
						<uri>
							https://public-firing-range.appspot.com/invalidframingconfig/frameancestorsselfnoxfosameorigin</uri>
						<method>GET</method>
						<param>Content-Security-Policy</param>
						<attack></attack>
						<evidence>frame-ancestors &apos;self&apos;</evidence>
						<otherinfo>The following directives either allow wildcard sources (or
							ancestors), are not defined, or are overly broadly defined:
							script-src, style-src, img-src, connect-src, frame-src, font-src,
							media-src, object-src, manifest-src, worker-src, prefetch-src,
							form-action

							The directive(s): form-action are among the directives that do not
							fallback to default-src, missing/excluding them is the same as allowing
							anything.</otherinfo>
					</instance>


					<instance>
						<uri>
							https://public-firing-range.appspot.com/invalidframingconfig/xfoallowfromnocoverdomain</uri>
						<method>GET</method>
						<param>Content-Security-Policy</param>
						<attack></attack>
						<evidence>frame-ancestors https://google.com</evidence>
						<otherinfo>The following directives either allow wildcard sources (or
							ancestors), are not defined, or are overly broadly defined:
							script-src, style-src, img-src, connect-src, frame-src, font-src,
							media-src, object-src, manifest-src, worker-src, prefetch-src,
							form-action

							The directive(s): form-action are among the directives that do not
							fallback to default-src, missing/excluding them is the same as allowing
							anything.</otherinfo>
					</instance>


					<instance>
						<uri>
							https://public-firing-range.appspot.com/invalidframingconfig/xfodenynoframeancestorsnone</uri>
						<method>GET</method>
						<param>Content-Security-Policy</param>
						<attack></attack>
						<evidence>frame-ancestors &apos;self&apos;</evidence>
						<otherinfo>The following directives either allow wildcard sources (or
							ancestors), are not defined, or are overly broadly defined:
							script-src, style-src, img-src, connect-src, frame-src, font-src,
							media-src, object-src, manifest-src, worker-src, prefetch-src,
							form-action

							The directive(s): form-action are among the directives that do not
							fallback to default-src, missing/excluding them is the same as allowing
							anything.</otherinfo>
					</instance>


					<instance>
						<uri>
							https://public-firing-range.appspot.com/invalidframingconfig/xfosameoriginnoframeancestorsself</uri>
						<method>GET</method>
						<param>Content-Security-Policy</param>
						<attack></attack>
						<evidence>frame-ancestors https://google.com</evidence>
						<otherinfo>The following directives either allow wildcard sources (or
							ancestors), are not defined, or are overly broadly defined:
							script-src, style-src, img-src, connect-src, frame-src, font-src,
							media-src, object-src, manifest-src, worker-src, prefetch-src,
							form-action

							The directive(s): form-action are among the directives that do not
							fallback to default-src, missing/excluding them is the same as allowing
							anything.</otherinfo>
					</instance>

				</instances>
				<count>6</count>
				<solution>&lt;p&gt;Ensure that your web server, application server, load balancer,
					etc. is properly configured to set the Content-Security-Policy header.&lt;/p&gt;</solution>
				<otherinfo>&lt;p&gt;The following directives either allow wildcard sources (or
					ancestors), are not defined, or are overly broadly defined:
					&lt;/p&gt;&lt;p&gt;script-src, style-src, img-src, connect-src, frame-src,
					font-src, media-src, object-src, manifest-src, worker-src, prefetch-src,
					form-action&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;The directive(s): form-action
					are among the directives that do not fallback to default-src, missing/excluding
					them is the same as allowing anything.&lt;/p&gt;</otherinfo>
				<reference>
					&lt;p&gt;http://www.w3.org/TR/CSP2/&lt;/p&gt;&lt;p&gt;http://www.w3.org/TR/CSP/&lt;/p&gt;&lt;p&gt;http://caniuse.com/#search=content+security+policy&lt;/p&gt;&lt;p&gt;http://content-security-policy.com/&lt;/p&gt;&lt;p&gt;https://github.com/shapesecurity/salvation&lt;/p&gt;&lt;p&gt;https://developers.google.com/web/fundamentals/security/csp#policy_applies_to_a_wide_variety_of_resources&lt;/p&gt;</reference>
				<cweid>693</cweid>
				<wascid>15</wascid>
				<sourceid>717</sourceid>
			</alertitem>


			<alertitem>
				<pluginid>10055</pluginid>
				<alertRef>10055-5</alertRef>
				<alert>CSP: script-src unsafe-inline</alert>
				<name>CSP: script-src unsafe-inline</name>
				<riskcode>2</riskcode>
				<confidence>3</confidence>
				<riskdesc>Medium (High)</riskdesc>
				<confidencedesc>High</confidencedesc>
				<desc>&lt;p&gt;Content Security Policy (CSP) is an added layer of security that
					helps to detect and mitigate certain types of attacks. Including (but not
					limited to) Cross Site Scripting (XSS), and data injection attacks. These
					attacks are used for everything from data theft to site defacement or
					distribution of malware. CSP provides a set of standard HTTP headers that allow
					website owners to declare approved sources of content that browsers should be
					allowed to load on that page &#x2014; covered types are JavaScript, CSS, HTML
					frames, fonts, images and embeddable objects such as Java applets, ActiveX,
					audio and video files.&lt;/p&gt;</desc>
				<instances>

					<instance>
						<uri>
							https://public-firing-range.appspot.com/invalidframingconfig/frameancestorsnonenoxfodeny</uri>
						<method>GET</method>
						<param>Content-Security-Policy</param>
						<attack></attack>
						<evidence>frame-ancestors &apos;none&apos;</evidence>
						<otherinfo>script-src includes unsafe-inline.</otherinfo>
					</instance>


					<instance>
						<uri>
							https://public-firing-range.appspot.com/invalidframingconfig/frameancestorsnoxfoallowfrom</uri>
						<method>GET</method>
						<param>Content-Security-Policy</param>
						<attack></attack>
						<evidence>frame-ancestors https://example.com</evidence>
						<otherinfo>script-src includes unsafe-inline.</otherinfo>
					</instance>


					<instance>
						<uri>
							https://public-firing-range.appspot.com/invalidframingconfig/frameancestorsselfnoxfosameorigin</uri>
						<method>GET</method>
						<param>Content-Security-Policy</param>
						<attack></attack>
						<evidence>frame-ancestors &apos;self&apos;</evidence>
						<otherinfo>script-src includes unsafe-inline.</otherinfo>
					</instance>


					<instance>
						<uri>
							https://public-firing-range.appspot.com/invalidframingconfig/xfoallowfromnocoverdomain</uri>
						<method>GET</method>
						<param>Content-Security-Policy</param>
						<attack></attack>
						<evidence>frame-ancestors https://google.com</evidence>
						<otherinfo>script-src includes unsafe-inline.</otherinfo>
					</instance>


					<instance>
						<uri>
							https://public-firing-range.appspot.com/invalidframingconfig/xfodenynoframeancestorsnone</uri>
						<method>GET</method>
						<param>Content-Security-Policy</param>
						<attack></attack>
						<evidence>frame-ancestors &apos;self&apos;</evidence>
						<otherinfo>script-src includes unsafe-inline.</otherinfo>
					</instance>


					<instance>
						<uri>
							https://public-firing-range.appspot.com/invalidframingconfig/xfosameoriginnoframeancestorsself</uri>
						<method>GET</method>
						<param>Content-Security-Policy</param>
						<attack></attack>
						<evidence>frame-ancestors https://google.com</evidence>
						<otherinfo>script-src includes unsafe-inline.</otherinfo>
					</instance>

				</instances>
				<count>6</count>
				<solution>&lt;p&gt;Ensure that your web server, application server, load balancer,
					etc. is properly configured to set the Content-Security-Policy header.&lt;/p&gt;</solution>
				<otherinfo>&lt;p&gt;script-src includes unsafe-inline.&lt;/p&gt;</otherinfo>
				<reference>
					&lt;p&gt;http://www.w3.org/TR/CSP2/&lt;/p&gt;&lt;p&gt;http://www.w3.org/TR/CSP/&lt;/p&gt;&lt;p&gt;http://caniuse.com/#search=content+security+policy&lt;/p&gt;&lt;p&gt;http://content-security-policy.com/&lt;/p&gt;&lt;p&gt;https://github.com/shapesecurity/salvation&lt;/p&gt;&lt;p&gt;https://developers.google.com/web/fundamentals/security/csp#policy_applies_to_a_wide_variety_of_resources&lt;/p&gt;</reference>
				<cweid>693</cweid>
				<wascid>15</wascid>
				<sourceid>717</sourceid>
			</alertitem>


			<alertitem>
				<pluginid>10055</pluginid>
				<alertRef>10055-6</alertRef>
				<alert>CSP: style-src unsafe-inline</alert>
				<name>CSP: style-src unsafe-inline</name>
				<riskcode>2</riskcode>
				<confidence>3</confidence>
				<riskdesc>Medium (High)</riskdesc>
				<confidencedesc>High</confidencedesc>
				<desc>&lt;p&gt;Content Security Policy (CSP) is an added layer of security that
					helps to detect and mitigate certain types of attacks. Including (but not
					limited to) Cross Site Scripting (XSS), and data injection attacks. These
					attacks are used for everything from data theft to site defacement or
					distribution of malware. CSP provides a set of standard HTTP headers that allow
					website owners to declare approved sources of content that browsers should be
					allowed to load on that page &#x2014; covered types are JavaScript, CSS, HTML
					frames, fonts, images and embeddable objects such as Java applets, ActiveX,
					audio and video files.&lt;/p&gt;</desc>
				<instances>

					<instance>
						<uri>
							https://public-firing-range.appspot.com/invalidframingconfig/frameancestorsnonenoxfodeny</uri>
						<method>GET</method>
						<param>Content-Security-Policy</param>
						<attack></attack>
						<evidence>frame-ancestors &apos;none&apos;</evidence>
						<otherinfo>style-src includes unsafe-inline.</otherinfo>
					</instance>


					<instance>
						<uri>
							https://public-firing-range.appspot.com/invalidframingconfig/frameancestorsnoxfoallowfrom</uri>
						<method>GET</method>
						<param>Content-Security-Policy</param>
						<attack></attack>
						<evidence>frame-ancestors https://example.com</evidence>
						<otherinfo>style-src includes unsafe-inline.</otherinfo>
					</instance>


					<instance>
						<uri>
							https://public-firing-range.appspot.com/invalidframingconfig/frameancestorsselfnoxfosameorigin</uri>
						<method>GET</method>
						<param>Content-Security-Policy</param>
						<attack></attack>
						<evidence>frame-ancestors &apos;self&apos;</evidence>
						<otherinfo>style-src includes unsafe-inline.</otherinfo>
					</instance>


					<instance>
						<uri>
							https://public-firing-range.appspot.com/invalidframingconfig/xfoallowfromnocoverdomain</uri>
						<method>GET</method>
						<param>Content-Security-Policy</param>
						<attack></attack>
						<evidence>frame-ancestors https://google.com</evidence>
						<otherinfo>style-src includes unsafe-inline.</otherinfo>
					</instance>


					<instance>
						<uri>
							https://public-firing-range.appspot.com/invalidframingconfig/xfodenynoframeancestorsnone</uri>
						<method>GET</method>
						<param>Content-Security-Policy</param>
						<attack></attack>
						<evidence>frame-ancestors &apos;self&apos;</evidence>
						<otherinfo>style-src includes unsafe-inline.</otherinfo>
					</instance>


					<instance>
						<uri>
							https://public-firing-range.appspot.com/invalidframingconfig/xfosameoriginnoframeancestorsself</uri>
						<method>GET</method>
						<param>Content-Security-Policy</param>
						<attack></attack>
						<evidence>frame-ancestors https://google.com</evidence>
						<otherinfo>style-src includes unsafe-inline.</otherinfo>
					</instance>

				</instances>
				<count>6</count>
				<solution>&lt;p&gt;Ensure that your web server, application server, load balancer,
					etc. is properly configured to set the Content-Security-Policy header.&lt;/p&gt;</solution>
				<otherinfo>&lt;p&gt;style-src includes unsafe-inline.&lt;/p&gt;</otherinfo>
				<reference>
					&lt;p&gt;http://www.w3.org/TR/CSP2/&lt;/p&gt;&lt;p&gt;http://www.w3.org/TR/CSP/&lt;/p&gt;&lt;p&gt;http://caniuse.com/#search=content+security+policy&lt;/p&gt;&lt;p&gt;http://content-security-policy.com/&lt;/p&gt;&lt;p&gt;https://github.com/shapesecurity/salvation&lt;/p&gt;&lt;p&gt;https://developers.google.com/web/fundamentals/security/csp#policy_applies_to_a_wide_variety_of_resources&lt;/p&gt;</reference>
				<cweid>693</cweid>
				<wascid>15</wascid>
				<sourceid>717</sourceid>
			</alertitem>


			<alertitem>
				<pluginid>10038</pluginid>
				<alertRef>10038-1</alertRef>
				<alert>Content Security Policy (CSP) Header Not Set</alert>
				<name>Content Security Policy (CSP) Header Not Set</name>
				<riskcode>2</riskcode>
				<confidence>3</confidence>
				<riskdesc>Medium (High)</riskdesc>
				<confidencedesc>High</confidencedesc>
				<desc>&lt;p&gt;Content Security Policy (CSP) is an added layer of security that
					helps to detect and mitigate certain types of attacks, including Cross Site
					Scripting (XSS) and data injection attacks. These attacks are used for
					everything from data theft to site defacement or distribution of malware. CSP
					provides a set of standard HTTP headers that allow website owners to declare
					approved sources of content that browsers should be allowed to load on that page
					&#x2014; covered types are JavaScript, CSS, HTML frames, fonts, images and
					embeddable objects such as Java applets, ActiveX, audio and video
					files.&lt;/p&gt;</desc>
				<instances>

					<instance>
						<uri>https://public-firing-range.appspot.com</uri>
						<method>GET</method>
						<param></param>
						<attack></attack>
						<evidence></evidence>
						<otherinfo></otherinfo>
					</instance>


					<instance>
						<uri>https://public-firing-range.appspot.com/</uri>
						<method>GET</method>
						<param></param>
						<attack></attack>
						<evidence></evidence>
						<otherinfo></otherinfo>
					</instance>


					<instance>
						<uri>https://public-firing-range.appspot.com/*</uri>
						<method>GET</method>
						<param></param>
						<attack></attack>
						<evidence></evidence>
						<otherinfo></otherinfo>
					</instance>


					<instance>
						<uri>https://public-firing-range.appspot.com/address/baseURI/documentwrite</uri>
						<method>GET</method>
						<param></param>
						<attack></attack>
						<evidence></evidence>
						<otherinfo></otherinfo>
					</instance>


					<instance>
						<uri>
							https://public-firing-range.appspot.com/address/documentURI/documentwrite</uri>
						<method>GET</method>
						<param></param>
						<attack></attack>
						<evidence></evidence>
						<otherinfo></otherinfo>
					</instance>


					<instance>
						<uri>https://public-firing-range.appspot.com/address/index.html</uri>
						<method>GET</method>
						<param></param>
						<attack></attack>
						<evidence></evidence>
						<otherinfo></otherinfo>
					</instance>


					<instance>
						<uri>https://public-firing-range.appspot.com/address/location.hash/assign</uri>
						<method>GET</method>
						<param></param>
						<attack></attack>
						<evidence></evidence>
						<otherinfo></otherinfo>
					</instance>


					<instance>
						<uri>
							https://public-firing-range.appspot.com/address/location.hash/documentwrite</uri>
						<method>GET</method>
						<param></param>
						<attack></attack>
						<evidence></evidence>
						<otherinfo></otherinfo>
					</instance>


					<instance>
						<uri>
							https://public-firing-range.appspot.com/address/location.hash/documentwriteln</uri>
						<method>GET</method>
						<param></param>
						<attack></attack>
						<evidence></evidence>
						<otherinfo></otherinfo>
					</instance>


					<instance>
						<uri>https://public-firing-range.appspot.com/address/location.hash/eval</uri>
						<method>GET</method>
						<param></param>
						<attack></attack>
						<evidence></evidence>
						<otherinfo></otherinfo>
					</instance>


					<instance>
						<uri>
							https://public-firing-range.appspot.com/address/location.hash/formaction</uri>
						<method>GET</method>
						<param></param>
						<attack></attack>
						<evidence></evidence>
						<otherinfo></otherinfo>
					</instance>


					<instance>
						<uri>https://public-firing-range.appspot.com/address/location.hash/function</uri>
						<method>GET</method>
						<param></param>
						<attack></attack>
						<evidence></evidence>
						<otherinfo></otherinfo>
					</instance>


					<instance>
						<uri>
							https://public-firing-range.appspot.com/address/location.hash/inlineevent</uri>
						<method>GET</method>
						<param></param>
						<attack></attack>
						<evidence></evidence>
						<otherinfo></otherinfo>
					</instance>


					<instance>
						<uri>https://public-firing-range.appspot.com/address/location.hash/innerHtml</uri>
						<method>GET</method>
						<param></param>
						<attack></attack>
						<evidence></evidence>
						<otherinfo></otherinfo>
					</instance>


					<instance>
						<uri>https://public-firing-range.appspot.com/address/location.hash/jshref</uri>
						<method>GET</method>
						<param></param>
						<attack></attack>
						<evidence></evidence>
						<otherinfo></otherinfo>
					</instance>


					<instance>
						<uri>
							https://public-firing-range.appspot.com/address/location.hash/onclickAddEventListener</uri>
						<method>GET</method>
						<param></param>
						<attack></attack>
						<evidence></evidence>
						<otherinfo></otherinfo>
					</instance>


					<instance>
						<uri>
							https://public-firing-range.appspot.com/address/location.hash/onclickSetAttribute</uri>
						<method>GET</method>
						<param></param>
						<attack></attack>
						<evidence></evidence>
						<otherinfo></otherinfo>
					</instance>


					<instance>
						<uri>
							https://public-firing-range.appspot.com/address/location.hash/rangeCreateContextualFragment</uri>
						<method>GET</method>
						<param></param>
						<attack></attack>
						<evidence></evidence>
						<otherinfo></otherinfo>
					</instance>


					<instance>
						<uri>https://public-firing-range.appspot.com/address/location.hash/replace</uri>
						<method>GET</method>
						<param></param>
						<attack></attack>
						<evidence></evidence>
						<otherinfo></otherinfo>
					</instance>


					<instance>
						<uri>
							https://public-firing-range.appspot.com/address/location.hash/setTimeout</uri>
						<method>GET</method>
						<param></param>
						<attack></attack>
						<evidence></evidence>
						<otherinfo></otherinfo>
					</instance>


					<instance>
						<uri>https://public-firing-range.appspot.com/address/location/assign</uri>
						<method>GET</method>
						<param></param>
						<attack></attack>
						<evidence></evidence>
						<otherinfo></otherinfo>
					</instance>


					<instance>
						<uri>https://public-firing-range.appspot.com/address/location/documentwrite</uri>
						<method>GET</method>
						<param></param>
						<attack></attack>
						<evidence></evidence>
						<otherinfo></otherinfo>
					</instance>


					<instance>
						<uri>
							https://public-firing-range.appspot.com/address/location/documentwriteln</uri>
						<method>GET</method>
						<param></param>
						<attack></attack>
						<evidence></evidence>
						<otherinfo></otherinfo>
					</instance>


					<instance>
						<uri>https://public-firing-range.appspot.com/address/location/eval</uri>
						<method>GET</method>
						<param></param>
						<attack></attack>
						<evidence></evidence>
						<otherinfo></otherinfo>
					</instance>


					<instance>
						<uri>https://public-firing-range.appspot.com/address/location/innerHtml</uri>
						<method>GET</method>
						<param></param>
						<attack></attack>
						<evidence></evidence>
						<otherinfo></otherinfo>
					</instance>


					<instance>
						<uri>
							https://public-firing-range.appspot.com/address/location/rangeCreateContextualFragment</uri>
						<method>GET</method>
						<param></param>
						<attack></attack>
						<evidence></evidence>
						<otherinfo></otherinfo>
					</instance>


					<instance>
						<uri>https://public-firing-range.appspot.com/address/location/replace</uri>
						<method>GET</method>
						<param></param>
						<attack></attack>
						<evidence></evidence>
						<otherinfo></otherinfo>
					</instance>


					<instance>
						<uri>https://public-firing-range.appspot.com/address/location/setTimeout</uri>
						<method>GET</method>
						<param></param>
						<attack></attack>
						<evidence></evidence>
						<otherinfo></otherinfo>
					</instance>


					<instance>
						<uri>
							https://public-firing-range.appspot.com/address/locationhref/documentwrite</uri>
						<method>GET</method>
						<param></param>
						<attack></attack>
						<evidence></evidence>
						<otherinfo></otherinfo>
					</instance>


					<instance>
						<uri>
							https://public-firing-range.appspot.com/address/locationpathname/documentwrite</uri>
						<method>GET</method>
						<param></param>
						<attack></attack>
						<evidence></evidence>
						<otherinfo></otherinfo>
					</instance>


					<instance>
						<uri>
							https://public-firing-range.appspot.com/address/locationsearch/documentwrite</uri>
						<method>GET</method>
						<param></param>
						<attack></attack>
						<evidence></evidence>
						<otherinfo></otherinfo>
					</instance>


					<instance>
						<uri>https://public-firing-range.appspot.com/address/URL/documentwrite</uri>
						<method>GET</method>
						<param></param>
						<attack></attack>
						<evidence></evidence>
						<otherinfo></otherinfo>
					</instance>


					<instance>
						<uri>
							https://public-firing-range.appspot.com/address/URLUnencoded/documentwrite</uri>
						<method>GET</method>
						<param></param>
						<attack></attack>
						<evidence></evidence>
						<otherinfo></otherinfo>
					</instance>


					<instance>
						<uri>
							https://public-firing-range.appspot.com/angular/angular_body/1.1.5?q=test</uri>
						<method>GET</method>
						<param></param>
						<attack></attack>
						<evidence></evidence>
						<otherinfo></otherinfo>
					</instance>


					<instance>
						<uri>
							https://public-firing-range.appspot.com/angular/angular_body/1.2.0?q=test</uri>
						<method>GET</method>
						<param></param>
						<attack></attack>
						<evidence></evidence>
						<otherinfo></otherinfo>
					</instance>


					<instance>
						<uri>
							https://public-firing-range.appspot.com/angular/angular_body/1.2.18?q=test</uri>
						<method>GET</method>
						<param></param>
						<attack></attack>
						<evidence></evidence>
						<otherinfo></otherinfo>
					</instance>


					<instance>
						<uri>
							https://public-firing-range.appspot.com/angular/angular_body/1.2.19?q=test</uri>
						<method>GET</method>
						<param></param>
						<attack></attack>
						<evidence></evidence>
						<otherinfo></otherinfo>
					</instance>


					<instance>
						<uri>
							https://public-firing-range.appspot.com/angular/angular_body/1.2.24?q=test</uri>
						<method>GET</method>
						<param></param>
						<attack></attack>
						<evidence></evidence>
						<otherinfo></otherinfo>
					</instance>


					<instance>
						<uri>
							https://public-firing-range.appspot.com/angular/angular_body/1.4.0?q=test</uri>
						<method>GET</method>
						<param></param>
						<attack></attack>
						<evidence></evidence>
						<otherinfo></otherinfo>
					</instance>


					<instance>
						<uri>
							https://public-firing-range.appspot.com/angular/angular_body/1.6.0?q=test</uri>
						<method>GET</method>
						<param></param>
						<attack></attack>
						<evidence></evidence>
						<otherinfo></otherinfo>
					</instance>


					<instance>
						<uri>
							https://public-firing-range.appspot.com/angular/angular_body_alt_symbols/1.4.0?q=test</uri>
						<method>GET</method>
						<param></param>
						<attack></attack>
						<evidence></evidence>
						<otherinfo></otherinfo>
					</instance>


					<instance>
						<uri>
							https://public-firing-range.appspot.com/angular/angular_body_alt_symbols_raw/1.6.0?q=test</uri>
						<method>GET</method>
						<param></param>
						<attack></attack>
						<evidence></evidence>
						<otherinfo></otherinfo>
					</instance>


					<instance>
						<uri>
							https://public-firing-range.appspot.com/angular/angular_body_attribute_ng/1.4.0?q=test</uri>
						<method>GET</method>
						<param></param>
						<attack></attack>
						<evidence></evidence>
						<otherinfo></otherinfo>
					</instance>


					<instance>
						<uri>
							https://public-firing-range.appspot.com/angular/angular_body_attribute_non_ng/1.4.0?q=test</uri>
						<method>GET</method>
						<param></param>
						<attack></attack>
						<evidence></evidence>
						<otherinfo></otherinfo>
					</instance>


					<instance>
						<uri>
							https://public-firing-range.appspot.com/angular/angular_body_attribute_non_ng_raw/1.4.0?q=test</uri>
						<method>GET</method>
						<param></param>
						<attack></attack>
						<evidence></evidence>
						<otherinfo></otherinfo>
					</instance>


					<instance>
						<uri>
							https://public-firing-range.appspot.com/angular/angular_body_raw/1.4.0?q=test</uri>
						<method>GET</method>
						<param></param>
						<attack></attack>
						<evidence></evidence>
						<otherinfo></otherinfo>
					</instance>


					<instance>
						<uri>
							https://public-firing-range.appspot.com/angular/angular_body_raw_escaped/1.4.0?q=test</uri>
						<method>GET</method>
						<param></param>
						<attack></attack>
						<evidence></evidence>
						<otherinfo></otherinfo>
					</instance>


					<instance>
						<uri>
							https://public-firing-range.appspot.com/angular/angular_body_raw_escaped_alt_symbols/1.4.0?q=test</uri>
						<method>GET</method>
						<param></param>
						<attack></attack>
						<evidence></evidence>
						<otherinfo></otherinfo>
					</instance>


					<instance>
						<uri>
							https://public-firing-range.appspot.com/angular/angular_body_raw_post/1.6.0</uri>
						<method>GET</method>
						<param></param>
						<attack></attack>
						<evidence></evidence>
						<otherinfo></otherinfo>
					</instance>


					<instance>
						<uri>
							https://public-firing-range.appspot.com/angular/angular_cookie_parse/1.6.0</uri>
						<method>GET</method>
						<param></param>
						<attack></attack>
						<evidence></evidence>
						<otherinfo></otherinfo>
					</instance>


					<instance>
						<uri>
							https://public-firing-range.appspot.com/angular/angular_form_parse/1.6.0</uri>
						<method>GET</method>
						<param></param>
						<attack></attack>
						<evidence></evidence>
						<otherinfo></otherinfo>
					</instance>


					<instance>
						<uri>
							https://public-firing-range.appspot.com/angular/angular_post_message_parse/1.6.0</uri>
						<method>GET</method>
						<param></param>
						<attack></attack>
						<evidence></evidence>
						<otherinfo></otherinfo>
					</instance>


					<instance>
						<uri>
							https://public-firing-range.appspot.com/angular/angular_storage_parse/1.6.0</uri>
						<method>GET</method>
						<param></param>
						<attack></attack>
						<evidence></evidence>
						<otherinfo></otherinfo>
					</instance>


					<instance>
						<uri>https://public-firing-range.appspot.com/angular/index.html</uri>
						<method>GET</method>
						<param></param>
						<attack></attack>
						<evidence></evidence>
						<otherinfo></otherinfo>
					</instance>


					<instance>
						<uri>https://public-firing-range.appspot.com/badscriptimport/index.html</uri>
						<method>GET</method>
						<param></param>
						<attack></attack>
						<evidence></evidence>
						<otherinfo></otherinfo>
					</instance>


					<instance>
						<uri>
							https://public-firing-range.appspot.com/cors/alloworigin/allowInsecureScheme</uri>
						<method>GET</method>
						<param></param>
						<attack></attack>
						<evidence></evidence>
						<otherinfo></otherinfo>
					</instance>


					<instance>
						<uri>
							https://public-firing-range.appspot.com/cors/alloworigin/allowNullOrigin</uri>
						<method>GET</method>
						<param></param>
						<attack></attack>
						<evidence></evidence>
						<otherinfo></otherinfo>
					</instance>


					<instance>
						<uri>
							https://public-firing-range.appspot.com/cors/alloworigin/dynamicAllowOrigin</uri>
						<method>GET</method>
						<param></param>
						<attack></attack>
						<evidence></evidence>
						<otherinfo></otherinfo>
					</instance>


					<instance>
						<uri>https://public-firing-range.appspot.com/cors/index.html</uri>
						<method>GET</method>
						<param></param>
						<attack></attack>
						<evidence></evidence>
						<otherinfo></otherinfo>
					</instance>


					<instance>
						<uri>https://public-firing-range.appspot.com/div</uri>
						<method>GET</method>
						<param></param>
						<attack></attack>
						<evidence></evidence>
						<otherinfo></otherinfo>
					</instance>


					<instance>
						<uri>https://public-firing-range.appspot.com/dom/dompropagation/</uri>
						<method>GET</method>
						<param></param>
						<attack></attack>
						<evidence></evidence>
						<otherinfo></otherinfo>
					</instance>


					<instance>
						<uri>
							https://public-firing-range.appspot.com/dom/eventtriggering/document/formSubmission/documentWrite</uri>
						<method>GET</method>
						<param></param>
						<attack></attack>
						<evidence></evidence>
						<otherinfo></otherinfo>
					</instance>


					<instance>
						<uri>
							https://public-firing-range.appspot.com/dom/eventtriggering/document/formSubmission/eval</uri>
						<method>GET</method>
						<param></param>
						<attack></attack>
						<evidence></evidence>
						<otherinfo></otherinfo>
					</instance>


					<instance>
						<uri>
							https://public-firing-range.appspot.com/dom/eventtriggering/document/formSubmission/innerHtml</uri>
						<method>GET</method>
						<param></param>
						<attack></attack>
						<evidence></evidence>
						<otherinfo></otherinfo>
					</instance>


					<instance>
						<uri>
							https://public-firing-range.appspot.com/dom/eventtriggering/document/inputTyping/documentWrite</uri>
						<method>GET</method>
						<param></param>
						<attack></attack>
						<evidence></evidence>
						<otherinfo></otherinfo>
					</instance>


					<instance>
						<uri>
							https://public-firing-range.appspot.com/dom/eventtriggering/document/inputTyping/eval</uri>
						<method>GET</method>
						<param></param>
						<attack></attack>
						<evidence></evidence>
						<otherinfo></otherinfo>
					</instance>


					<instance>
						<uri>
							https://public-firing-range.appspot.com/dom/eventtriggering/document/inputTyping/innerHtml</uri>
						<method>GET</method>
						<param></param>
						<attack></attack>
						<evidence></evidence>
						<otherinfo></otherinfo>
					</instance>


					<instance>
						<uri>https://public-firing-range.appspot.com/dom/index.html</uri>
						<method>GET</method>
						<param></param>
						<attack></attack>
						<evidence></evidence>
						<otherinfo></otherinfo>
					</instance>


					<instance>
						<uri>https://public-firing-range.appspot.com/dom/javascripturi.html</uri>
						<method>GET</method>
						<param></param>
						<attack></attack>
						<evidence></evidence>
						<otherinfo></otherinfo>
					</instance>


					<instance>
						<uri>
							https://public-firing-range.appspot.com/dom/toxicdom/document/cookie/eval</uri>
						<method>GET</method>
						<param></param>
						<attack></attack>
						<evidence></evidence>
						<otherinfo></otherinfo>
					</instance>


					<instance>
						<uri>
							https://public-firing-range.appspot.com/dom/toxicdom/document/cookie_set/documentWrite</uri>
						<method>GET</method>
						<param></param>
						<attack></attack>
						<evidence></evidence>
						<otherinfo></otherinfo>
					</instance>


					<instance>
						<uri>
							https://public-firing-range.appspot.com/dom/toxicdom/document/cookie_set/eval</uri>
						<method>GET</method>
						<param></param>
						<attack></attack>
						<evidence></evidence>
						<otherinfo></otherinfo>
					</instance>


					<instance>
						<uri>
							https://public-firing-range.appspot.com/dom/toxicdom/document/cookie_set/innerHtml</uri>
						<method>GET</method>
						<param></param>
						<attack></attack>
						<evidence></evidence>
						<otherinfo></otherinfo>
					</instance>


					<instance>
						<uri>
							https://public-firing-range.appspot.com/dom/toxicdom/document/referrer/documentWrite</uri>
						<method>GET</method>
						<param></param>
						<attack></attack>
						<evidence></evidence>
						<otherinfo></otherinfo>
					</instance>


					<instance>
						<uri>
							https://public-firing-range.appspot.com/dom/toxicdom/document/referrer/eval</uri>
						<method>GET</method>
						<param></param>
						<attack></attack>
						<evidence></evidence>
						<otherinfo></otherinfo>
					</instance>


					<instance>
						<uri>
							https://public-firing-range.appspot.com/dom/toxicdom/document/referrer/innerHtml</uri>
						<method>GET</method>
						<param></param>
						<attack></attack>
						<evidence></evidence>
						<otherinfo></otherinfo>
					</instance>


					<instance>
						<uri>
							https://public-firing-range.appspot.com/dom/toxicdom/external/localStorage/array/eval</uri>
						<method>GET</method>
						<param></param>
						<attack></attack>
						<evidence></evidence>
						<otherinfo></otherinfo>
					</instance>


					<instance>
						<uri>
							https://public-firing-range.appspot.com/dom/toxicdom/external/localStorage/function/documentWrite</uri>
						<method>GET</method>
						<param></param>
						<attack></attack>
						<evidence></evidence>
						<otherinfo></otherinfo>
					</instance>


					<instance>
						<uri>
							https://public-firing-range.appspot.com/dom/toxicdom/external/localStorage/function/eval</uri>
						<method>GET</method>
						<param></param>
						<attack></attack>
						<evidence></evidence>
						<otherinfo></otherinfo>
					</instance>


					<instance>
						<uri>
							https://public-firing-range.appspot.com/dom/toxicdom/external/localStorage/function/innerHtml</uri>
						<method>GET</method>
						<param></param>
						<attack></attack>
						<evidence></evidence>
						<otherinfo></otherinfo>
					</instance>


					<instance>
						<uri>
							https://public-firing-range.appspot.com/dom/toxicdom/external/localStorage/property/documentWrite</uri>
						<method>GET</method>
						<param></param>
						<attack></attack>
						<evidence></evidence>
						<otherinfo></otherinfo>
					</instance>


					<instance>
						<uri>
							https://public-firing-range.appspot.com/dom/toxicdom/external/sessionStorage/array/eval</uri>
						<method>GET</method>
						<param></param>
						<attack></attack>
						<evidence></evidence>
						<otherinfo></otherinfo>
					</instance>


					<instance>
						<uri>
							https://public-firing-range.appspot.com/dom/toxicdom/external/sessionStorage/function/documentWrite</uri>
						<method>GET</method>
						<param></param>
						<attack></attack>
						<evidence></evidence>
						<otherinfo></otherinfo>
					</instance>


					<instance>
						<uri>
							https://public-firing-range.appspot.com/dom/toxicdom/external/sessionStorage/function/eval</uri>
						<method>GET</method>
						<param></param>
						<attack></attack>
						<evidence></evidence>
						<otherinfo></otherinfo>
					</instance>


					<instance>
						<uri>
							https://public-firing-range.appspot.com/dom/toxicdom/external/sessionStorage/function/innerHtml</uri>
						<method>GET</method>
						<param></param>
						<attack></attack>
						<evidence></evidence>
						<otherinfo></otherinfo>
					</instance>


					<instance>
						<uri>
							https://public-firing-range.appspot.com/dom/toxicdom/external/sessionStorage/property/documentWrite</uri>
						<method>GET</method>
						<param></param>
						<attack></attack>
						<evidence></evidence>
						<otherinfo></otherinfo>
					</instance>


					<instance>
						<uri>
							https://public-firing-range.appspot.com/dom/toxicdom/localStorage/array/eval</uri>
						<method>GET</method>
						<param></param>
						<attack></attack>
						<evidence></evidence>
						<otherinfo></otherinfo>
					</instance>


					<instance>
						<uri>
							https://public-firing-range.appspot.com/dom/toxicdom/localStorage/function/documentWrite</uri>
						<method>GET</method>
						<param></param>
						<attack></attack>
						<evidence></evidence>
						<otherinfo></otherinfo>
					</instance>


					<instance>
						<uri>
							https://public-firing-range.appspot.com/dom/toxicdom/localStorage/function/eval</uri>
						<method>GET</method>
						<param></param>
						<attack></attack>
						<evidence></evidence>
						<otherinfo></otherinfo>
					</instance>


					<instance>
						<uri>
							https://public-firing-range.appspot.com/dom/toxicdom/localStorage/function/innerHtml</uri>
						<method>GET</method>
						<param></param>
						<attack></attack>
						<evidence></evidence>
						<otherinfo></otherinfo>
					</instance>


					<instance>
						<uri>
							https://public-firing-range.appspot.com/dom/toxicdom/localStorage/property/documentWrite</uri>
						<method>GET</method>
						<param></param>
						<attack></attack>
						<evidence></evidence>
						<otherinfo></otherinfo>
					</instance>


					<instance>
						<uri>
							https://public-firing-range.appspot.com/dom/toxicdom/postMessage/complexMessageDocumentWriteEval</uri>
						<method>GET</method>
						<param></param>
						<attack></attack>
						<evidence></evidence>
						<otherinfo></otherinfo>
					</instance>


					<instance>
						<uri>
							https://public-firing-range.appspot.com/dom/toxicdom/postMessage/documentWrite</uri>
						<method>GET</method>
						<param></param>
						<attack></attack>
						<evidence></evidence>
						<otherinfo></otherinfo>
					</instance>


					<instance>
						<uri>https://public-firing-range.appspot.com/dom/toxicdom/postMessage/eval</uri>
						<method>GET</method>
						<param></param>
						<attack></attack>
						<evidence></evidence>
						<otherinfo></otherinfo>
					</instance>


					<instance>
						<uri>
							https://public-firing-range.appspot.com/dom/toxicdom/postMessage/improperOriginValidationWithPartialStringComparison</uri>
						<method>GET</method>
						<param></param>
						<attack></attack>
						<evidence></evidence>
						<otherinfo></otherinfo>
					</instance>


					<instance>
						<uri>
							https://public-firing-range.appspot.com/dom/toxicdom/postMessage/improperOriginValidationWithRegExp</uri>
						<method>GET</method>
						<param></param>
						<attack></attack>
						<evidence></evidence>
						<otherinfo></otherinfo>
					</instance>


					<instance>
						<uri>
							https://public-firing-range.appspot.com/dom/toxicdom/postMessage/innerHtml</uri>
						<method>GET</method>
						<param></param>
						<attack></attack>
						<evidence></evidence>
						<otherinfo></otherinfo>
					</instance>


					<instance>
						<uri>
							https://public-firing-range.appspot.com/dom/toxicdom/sessionStorage/array/eval</uri>
						<method>GET</method>
						<param></param>
						<attack></attack>
						<evidence></evidence>
						<otherinfo></otherinfo>
					</instance>


					<instance>
						<uri>
							https://public-firing-range.appspot.com/dom/toxicdom/sessionStorage/function/documentWrite</uri>
						<method>GET</method>
						<param></param>
						<attack></attack>
						<evidence></evidence>
						<otherinfo></otherinfo>
					</instance>


					<instance>
						<uri>
							https://public-firing-range.appspot.com/dom/toxicdom/sessionStorage/function/eval</uri>
						<method>GET</method>
						<param></param>
						<attack></attack>
						<evidence></evidence>
						<otherinfo></otherinfo>
					</instance>


					<instance>
						<uri>
							https://public-firing-range.appspot.com/dom/toxicdom/sessionStorage/function/innerHtml</uri>
						<method>GET</method>
						<param></param>
						<attack></attack>
						<evidence></evidence>
						<otherinfo></otherinfo>
					</instance>


					<instance>
						<uri>
							https://public-firing-range.appspot.com/dom/toxicdom/sessionStorage/property/documentWrite</uri>
						<method>GET</method>
						<param></param>
						<attack></attack>
						<evidence></evidence>
						<otherinfo></otherinfo>
					</instance>


					<instance>
						<uri>
							https://public-firing-range.appspot.com/dom/toxicdom/window/name/documentWrite</uri>
						<method>GET</method>
						<param></param>
						<attack></attack>
						<evidence></evidence>
						<otherinfo></otherinfo>
					</instance>


					<instance>
						<uri>https://public-firing-range.appspot.com/dom/toxicdom/window/name/eval</uri>
						<method>GET</method>
						<param></param>
						<attack></attack>
						<evidence></evidence>
						<otherinfo></otherinfo>
					</instance>


					<instance>
						<uri>
							https://public-firing-range.appspot.com/dom/toxicdom/window/name/innerHtml</uri>
						<method>GET</method>
						<param></param>
						<attack></attack>
						<evidence></evidence>
						<otherinfo></otherinfo>
					</instance>


					<instance>
						<uri>https://public-firing-range.appspot.com/escape/index.html</uri>
						<method>GET</method>
						<param></param>
						<attack></attack>
						<evidence></evidence>
						<otherinfo></otherinfo>
					</instance>


					<instance>
						<uri>
							https://public-firing-range.appspot.com/escape/js/encodeURIComponent?q=a</uri>
						<method>GET</method>
						<param></param>
						<attack></attack>
						<evidence></evidence>
						<otherinfo></otherinfo>
					</instance>


					<instance>
						<uri>https://public-firing-range.appspot.com/escape/js/escape?q=a</uri>
						<method>GET</method>
						<param></param>
						<attack></attack>
						<evidence></evidence>
						<otherinfo></otherinfo>
					</instance>


					<instance>
						<uri>https://public-firing-range.appspot.com/escape/js/html_escape?q=a</uri>
						<method>GET</method>
						<param></param>
						<attack></attack>
						<evidence></evidence>
						<otherinfo></otherinfo>
					</instance>


					<instance>
						<uri>
							https://public-firing-range.appspot.com/escape/serverside/encodeUrl/attribute_name?q=a</uri>
						<method>GET</method>
						<param></param>
						<attack></attack>
						<evidence></evidence>
						<otherinfo></otherinfo>
					</instance>


					<instance>
						<uri>
							https://public-firing-range.appspot.com/escape/serverside/encodeUrl/attribute_quoted?q=a</uri>
						<method>GET</method>
						<param></param>
						<attack></attack>
						<evidence></evidence>
						<otherinfo></otherinfo>
					</instance>


					<instance>
						<uri>
							https://public-firing-range.appspot.com/escape/serverside/encodeUrl/attribute_script?q=a</uri>
						<method>GET</method>
						<param></param>
						<attack></attack>
						<evidence></evidence>
						<otherinfo></otherinfo>
					</instance>


					<instance>
						<uri>
							https://public-firing-range.appspot.com/escape/serverside/encodeUrl/attribute_singlequoted?q=a</uri>
						<method>GET</method>
						<param></param>
						<attack></attack>
						<evidence></evidence>
						<otherinfo></otherinfo>
					</instance>


					<instance>
						<uri>
							https://public-firing-range.appspot.com/escape/serverside/encodeUrl/attribute_unquoted?q=a</uri>
						<method>GET</method>
						<param></param>
						<attack></attack>
						<evidence></evidence>
						<otherinfo></otherinfo>
					</instance>


					<instance>
						<uri>
							https://public-firing-range.appspot.com/escape/serverside/encodeUrl/body?q=a</uri>
						<method>GET</method>
						<param></param>
						<attack></attack>
						<evidence></evidence>
						<otherinfo></otherinfo>
					</instance>


					<instance>
						<uri>
							https://public-firing-range.appspot.com/escape/serverside/encodeUrl/body_comment?q=a</uri>
						<method>GET</method>
						<param></param>
						<attack></attack>
						<evidence></evidence>
						<otherinfo></otherinfo>
					</instance>


					<instance>
						<uri>
							https://public-firing-range.appspot.com/escape/serverside/encodeUrl/css_import?q=a</uri>
						<method>GET</method>
						<param></param>
						<attack></attack>
						<evidence></evidence>
						<otherinfo></otherinfo>
					</instance>


					<instance>
						<uri>
							https://public-firing-range.appspot.com/escape/serverside/encodeUrl/css_style?q=a</uri>
						<method>GET</method>
						<param></param>
						<attack></attack>
						<evidence></evidence>
						<otherinfo></otherinfo>
					</instance>


					<instance>
						<uri>
							https://public-firing-range.appspot.com/escape/serverside/encodeUrl/css_style_font_value?q=a</uri>
						<method>GET</method>
						<param></param>
						<attack></attack>
						<evidence></evidence>
						<otherinfo></otherinfo>
					</instance>


					<instance>
						<uri>
							https://public-firing-range.appspot.com/escape/serverside/encodeUrl/css_style_value?q=a</uri>
						<method>GET</method>
						<param></param>
						<attack></attack>
						<evidence></evidence>
						<otherinfo></otherinfo>
					</instance>


					<instance>
						<uri>
							https://public-firing-range.appspot.com/escape/serverside/encodeUrl/head?q=a</uri>
						<method>GET</method>
						<param></param>
						<attack></attack>
						<evidence></evidence>
						<otherinfo></otherinfo>
					</instance>


					<instance>
						<uri>
							https://public-firing-range.appspot.com/escape/serverside/encodeUrl/js_assignment?q=a</uri>
						<method>GET</method>
						<param></param>
						<attack></attack>
						<evidence></evidence>
						<otherinfo></otherinfo>
					</instance>


					<instance>
						<uri>
							https://public-firing-range.appspot.com/escape/serverside/encodeUrl/js_comment?q=a</uri>
						<method>GET</method>
						<param></param>
						<attack></attack>
						<evidence></evidence>
						<otherinfo></otherinfo>
					</instance>


					<instance>
						<uri>
							https://public-firing-range.appspot.com/escape/serverside/encodeUrl/js_eval?q=a</uri>
						<method>GET</method>
						<param></param>
						<attack></attack>
						<evidence></evidence>
						<otherinfo></otherinfo>
					</instance>


					<instance>
						<uri>
							https://public-firing-range.appspot.com/escape/serverside/encodeUrl/js_quoted_string?q=a</uri>
						<method>GET</method>
						<param></param>
						<attack></attack>
						<evidence></evidence>
						<otherinfo></otherinfo>
					</instance>


					<instance>
						<uri>
							https://public-firing-range.appspot.com/escape/serverside/encodeUrl/js_singlequoted_string?q=a</uri>
						<method>GET</method>
						<param></param>
						<attack></attack>
						<evidence></evidence>
						<otherinfo></otherinfo>
					</instance>


					<instance>
						<uri>
							https://public-firing-range.appspot.com/escape/serverside/encodeUrl/js_slashquoted_string?q=a</uri>
						<method>GET</method>
						<param></param>
						<attack></attack>
						<evidence></evidence>
						<otherinfo></otherinfo>
					</instance>


					<instance>
						<uri>
							https://public-firing-range.appspot.com/escape/serverside/encodeUrl/tagname?q=a</uri>
						<method>GET</method>
						<param></param>
						<attack></attack>
						<evidence></evidence>
						<otherinfo></otherinfo>
					</instance>


					<instance>
						<uri>
							https://public-firing-range.appspot.com/escape/serverside/encodeUrl/textarea?q=a</uri>
						<method>GET</method>
						<param></param>
						<attack></attack>
						<evidence></evidence>
						<otherinfo></otherinfo>
					</instance>


					<instance>
						<uri>
							https://public-firing-range.appspot.com/escape/serverside/escapeHtml/attribute_name?q=a</uri>
						<method>GET</method>
						<param></param>
						<attack></attack>
						<evidence></evidence>
						<otherinfo></otherinfo>
					</instance>


					<instance>
						<uri>
							https://public-firing-range.appspot.com/escape/serverside/escapeHtml/attribute_quoted?q=a</uri>
						<method>GET</method>
						<param></param>
						<attack></attack>
						<evidence></evidence>
						<otherinfo></otherinfo>
					</instance>


					<instance>
						<uri>
							https://public-firing-range.appspot.com/escape/serverside/escapeHtml/attribute_script?q=a</uri>
						<method>GET</method>
						<param></param>
						<attack></attack>
						<evidence></evidence>
						<otherinfo></otherinfo>
					</instance>


					<instance>
						<uri>
							https://public-firing-range.appspot.com/escape/serverside/escapeHtml/attribute_singlequoted?q=a</uri>
						<method>GET</method>
						<param></param>
						<attack></attack>
						<evidence></evidence>
						<otherinfo></otherinfo>
					</instance>


					<instance>
						<uri>
							https://public-firing-range.appspot.com/escape/serverside/escapeHtml/attribute_unquoted?q=a</uri>
						<method>GET</method>
						<param></param>
						<attack></attack>
						<evidence></evidence>
						<otherinfo></otherinfo>
					</instance>


					<instance>
						<uri>
							https://public-firing-range.appspot.com/escape/serverside/escapeHtml/body?q=a</uri>
						<method>GET</method>
						<param></param>
						<attack></attack>
						<evidence></evidence>
						<otherinfo></otherinfo>
					</instance>


					<instance>
						<uri>
							https://public-firing-range.appspot.com/escape/serverside/escapeHtml/body_comment?q=a</uri>
						<method>GET</method>
						<param></param>
						<attack></attack>
						<evidence></evidence>
						<otherinfo></otherinfo>
					</instance>


					<instance>
						<uri>
							https://public-firing-range.appspot.com/escape/serverside/escapeHtml/css_import?q=a</uri>
						<method>GET</method>
						<param></param>
						<attack></attack>
						<evidence></evidence>
						<otherinfo></otherinfo>
					</instance>


					<instance>
						<uri>
							https://public-firing-range.appspot.com/escape/serverside/escapeHtml/css_style?q=a</uri>
						<method>GET</method>
						<param></param>
						<attack></attack>
						<evidence></evidence>
						<otherinfo></otherinfo>
					</instance>


					<instance>
						<uri>
							https://public-firing-range.appspot.com/escape/serverside/escapeHtml/css_style_font_value?q=a</uri>
						<method>GET</method>
						<param></param>
						<attack></attack>
						<evidence></evidence>
						<otherinfo></otherinfo>
					</instance>


					<instance>
						<uri>
							https://public-firing-range.appspot.com/escape/serverside/escapeHtml/css_style_value?escape=HTML_ESCAPE&amp;q=a</uri>
						<method>GET</method>
						<param></param>
						<attack></attack>
						<evidence></evidence>
						<otherinfo></otherinfo>
					</instance>


					<instance>
						<uri>
							https://public-firing-range.appspot.com/escape/serverside/escapeHtml/head?q=a</uri>
						<method>GET</method>
						<param></param>
						<attack></attack>
						<evidence></evidence>
						<otherinfo></otherinfo>
					</instance>


					<instance>
						<uri>
							https://public-firing-range.appspot.com/escape/serverside/escapeHtml/js_assignment?q=a</uri>
						<method>GET</method>
						<param></param>
						<attack></attack>
						<evidence></evidence>
						<otherinfo></otherinfo>
					</instance>


					<instance>
						<uri>
							https://public-firing-range.appspot.com/escape/serverside/escapeHtml/js_comment?q=a</uri>
						<method>GET</method>
						<param></param>
						<attack></attack>
						<evidence></evidence>
						<otherinfo></otherinfo>
					</instance>


					<instance>
						<uri>
							https://public-firing-range.appspot.com/escape/serverside/escapeHtml/js_eval?q=a</uri>
						<method>GET</method>
						<param></param>
						<attack></attack>
						<evidence></evidence>
						<otherinfo></otherinfo>
					</instance>


					<instance>
						<uri>
							https://public-firing-range.appspot.com/escape/serverside/escapeHtml/js_quoted_string?q=a</uri>
						<method>GET</method>
						<param></param>
						<attack></attack>
						<evidence></evidence>
						<otherinfo></otherinfo>
					</instance>


					<instance>
						<uri>
							https://public-firing-range.appspot.com/escape/serverside/escapeHtml/js_singlequoted_string?q=a</uri>
						<method>GET</method>
						<param></param>
						<attack></attack>
						<evidence></evidence>
						<otherinfo></otherinfo>
					</instance>


					<instance>
						<uri>
							https://public-firing-range.appspot.com/escape/serverside/escapeHtml/js_slashquoted_string?q=a</uri>
						<method>GET</method>
						<param></param>
						<attack></attack>
						<evidence></evidence>
						<otherinfo></otherinfo>
					</instance>


					<instance>
						<uri>
							https://public-firing-range.appspot.com/escape/serverside/escapeHtml/tagname?q=a</uri>
						<method>GET</method>
						<param></param>
						<attack></attack>
						<evidence></evidence>
						<otherinfo></otherinfo>
					</instance>


					<instance>
						<uri>
							https://public-firing-range.appspot.com/escape/serverside/escapeHtml/textarea?q=a</uri>
						<method>GET</method>
						<param></param>
						<attack></attack>
						<evidence></evidence>
						<otherinfo></otherinfo>
					</instance>


					<instance>
						<uri>https://public-firing-range.appspot.com/flashinjection/index.html</uri>
						<method>GET</method>
						<param></param>
						<attack></attack>
						<evidence></evidence>
						<otherinfo></otherinfo>
					</instance>


					<instance>
						<uri>https://public-firing-range.appspot.com/invalidframingconfig/index.html</uri>
						<method>GET</method>
						<param></param>
						<attack></attack>
						<evidence></evidence>
						<otherinfo></otherinfo>
					</instance>


					<instance>
						<uri>
							https://public-firing-range.appspot.com/invalidframingconfig/xfoallowfromnoframeancestors</uri>
						<method>GET</method>
						<param></param>
						<attack></attack>
						<evidence></evidence>
						<otherinfo></otherinfo>
					</instance>


					<instance>
						<uri>https://public-firing-range.appspot.com/jsonp?callback=%25q</uri>
						<method>GET</method>
						<param></param>
						<attack></attack>
						<evidence></evidence>
						<otherinfo></otherinfo>
					</instance>


					<instance>
						<uri>
							https://public-firing-range.appspot.com/jsonp?callback=callbackFunc&amp;other=%25q</uri>
						<method>GET</method>
						<param></param>
						<attack></attack>
						<evidence></evidence>
						<otherinfo></otherinfo>
					</instance>


					<instance>
						<uri>https://public-firing-range.appspot.com/leakedcookie/index.html</uri>
						<method>GET</method>
						<param></param>
						<attack></attack>
						<evidence></evidence>
						<otherinfo></otherinfo>
					</instance>


					<instance>
						<uri>https://public-firing-range.appspot.com/leakedcookie/leakedcookie</uri>
						<method>GET</method>
						<param></param>
						<attack></attack>
						<evidence></evidence>
						<otherinfo></otherinfo>
					</instance>


					<instance>
						<uri>https://public-firing-range.appspot.com/leakedcookie/leakedinresource</uri>
						<method>GET</method>
						<param></param>
						<attack></attack>
						<evidence></evidence>
						<otherinfo></otherinfo>
					</instance>


					<instance>
						<uri>https://public-firing-range.appspot.com/mixedcontent/index.html</uri>
						<method>GET</method>
						<param></param>
						<attack></attack>
						<evidence></evidence>
						<otherinfo></otherinfo>
					</instance>


					<instance>
						<uri>https://public-firing-range.appspot.com/pression</uri>
						<method>GET</method>
						<param></param>
						<attack></attack>
						<evidence></evidence>
						<otherinfo></otherinfo>
					</instance>


					<instance>
						<uri>https://public-firing-range.appspot.com/redirect/index.html</uri>
						<method>GET</method>
						<param></param>
						<attack></attack>
						<evidence></evidence>
						<otherinfo></otherinfo>
					</instance>


					<instance>
						<uri>https://public-firing-range.appspot.com/redirect/meta?q=/</uri>
						<method>GET</method>
						<param></param>
						<attack></attack>
						<evidence></evidence>
						<otherinfo></otherinfo>
					</instance>


					<instance>
						<uri>
							https://public-firing-range.appspot.com/reflected/escapedparameter/js_eventhandler_quoted/DOUBLE_QUOTED_ATTRIBUTE?q=a</uri>
						<method>GET</method>
						<param></param>
						<attack></attack>
						<evidence></evidence>
						<otherinfo></otherinfo>
					</instance>


					<instance>
						<uri>
							https://public-firing-range.appspot.com/reflected/escapedparameter/js_eventhandler_singlequoted/SINGLE_QUOTED_ATTRIBUTE?q=a</uri>
						<method>GET</method>
						<param></param>
						<attack></attack>
						<evidence></evidence>
						<otherinfo></otherinfo>
					</instance>


					<instance>
						<uri>
							https://public-firing-range.appspot.com/reflected/escapedparameter/js_eventhandler_unquoted/UNQUOTED_ATTRIBUTE?q=a</uri>
						<method>GET</method>
						<param></param>
						<attack></attack>
						<evidence></evidence>
						<otherinfo></otherinfo>
					</instance>


					<instance>
						<uri>
							https://public-firing-range.appspot.com/reflected/filteredcharsets/attribute_unquoted/DoubleQuoteSinglequote?q=a</uri>
						<method>GET</method>
						<param></param>
						<attack></attack>
						<evidence></evidence>
						<otherinfo></otherinfo>
					</instance>


					<instance>
						<uri>
							https://public-firing-range.appspot.com/reflected/filteredcharsets/body/SpaceDoubleQuoteSlashEquals?q=a</uri>
						<method>GET</method>
						<param></param>
						<attack></attack>
						<evidence></evidence>
						<otherinfo></otherinfo>
					</instance>


					<instance>
						<uri>
							https://public-firing-range.appspot.com/reflected/filteredstrings/body/caseInsensitive/script?q=a</uri>
						<method>GET</method>
						<param></param>
						<attack></attack>
						<evidence></evidence>
						<otherinfo></otherinfo>
					</instance>


					<instance>
						<uri>
							https://public-firing-range.appspot.com/reflected/filteredstrings/body/caseSensitive/script?q=a</uri>
						<method>GET</method>
						<param></param>
						<attack></attack>
						<evidence></evidence>
						<otherinfo></otherinfo>
					</instance>


					<instance>
						<uri>https://public-firing-range.appspot.com/reflected/index.html</uri>
						<method>GET</method>
						<param></param>
						<attack></attack>
						<evidence></evidence>
						<otherinfo></otherinfo>
					</instance>


					<instance>
						<uri>
							https://public-firing-range.appspot.com/reflected/parameter/attribute_name?q=a</uri>
						<method>GET</method>
						<param></param>
						<attack></attack>
						<evidence></evidence>
						<otherinfo></otherinfo>
					</instance>


					<instance>
						<uri>
							https://public-firing-range.appspot.com/reflected/parameter/attribute_quoted?q=a</uri>
						<method>GET</method>
						<param></param>
						<attack></attack>
						<evidence></evidence>
						<otherinfo></otherinfo>
					</instance>


					<instance>
						<uri>
							https://public-firing-range.appspot.com/reflected/parameter/attribute_script?q=a</uri>
						<method>GET</method>
						<param></param>
						<attack></attack>
						<evidence></evidence>
						<otherinfo></otherinfo>
					</instance>


					<instance>
						<uri>
							https://public-firing-range.appspot.com/reflected/parameter/attribute_singlequoted?q=a</uri>
						<method>GET</method>
						<param></param>
						<attack></attack>
						<evidence></evidence>
						<otherinfo></otherinfo>
					</instance>


					<instance>
						<uri>
							https://public-firing-range.appspot.com/reflected/parameter/attribute_unquoted?q=a</uri>
						<method>GET</method>
						<param></param>
						<attack></attack>
						<evidence></evidence>
						<otherinfo></otherinfo>
					</instance>


					<instance>
						<uri>
							https://public-firing-range.appspot.com/reflected/parameter/body/400?q=a</uri>
						<method>GET</method>
						<param></param>
						<attack></attack>
						<evidence></evidence>
						<otherinfo></otherinfo>
					</instance>


					<instance>
						<uri>
							https://public-firing-range.appspot.com/reflected/parameter/body/401?q=a</uri>
						<method>GET</method>
						<param></param>
						<attack></attack>
						<evidence></evidence>
						<otherinfo></otherinfo>
					</instance>


					<instance>
						<uri>
							https://public-firing-range.appspot.com/reflected/parameter/body/403?q=a</uri>
						<method>GET</method>
						<param></param>
						<attack></attack>
						<evidence></evidence>
						<otherinfo></otherinfo>
					</instance>


					<instance>
						<uri>
							https://public-firing-range.appspot.com/reflected/parameter/body/404?q=a</uri>
						<method>GET</method>
						<param></param>
						<attack></attack>
						<evidence></evidence>
						<otherinfo></otherinfo>
					</instance>


					<instance>
						<uri>
							https://public-firing-range.appspot.com/reflected/parameter/body/500?q=a</uri>
						<method>GET</method>
						<param></param>
						<attack></attack>
						<evidence></evidence>
						<otherinfo></otherinfo>
					</instance>


					<instance>
						<uri>https://public-firing-range.appspot.com/reflected/parameter/body?q=a</uri>
						<method>GET</method>
						<param></param>
						<attack></attack>
						<evidence></evidence>
						<otherinfo></otherinfo>
					</instance>


					<instance>
						<uri>
							https://public-firing-range.appspot.com/reflected/parameter/body_comment?q=a</uri>
						<method>GET</method>
						<param></param>
						<attack></attack>
						<evidence></evidence>
						<otherinfo></otherinfo>
					</instance>


					<instance>
						<uri>
							https://public-firing-range.appspot.com/reflected/parameter/css_style?q=a</uri>
						<method>GET</method>
						<param></param>
						<attack></attack>
						<evidence></evidence>
						<otherinfo></otherinfo>
					</instance>


					<instance>
						<uri>
							https://public-firing-range.appspot.com/reflected/parameter/css_style_font_value?q=a</uri>
						<method>GET</method>
						<param></param>
						<attack></attack>
						<evidence></evidence>
						<otherinfo></otherinfo>
					</instance>


					<instance>
						<uri>
							https://public-firing-range.appspot.com/reflected/parameter/css_style_value?q=a</uri>
						<method>GET</method>
						<param></param>
						<attack></attack>
						<evidence></evidence>
						<otherinfo></otherinfo>
					</instance>


					<instance>
						<uri>https://public-firing-range.appspot.com/reflected/parameter/form</uri>
						<method>GET</method>
						<param></param>
						<attack></attack>
						<evidence></evidence>
						<otherinfo></otherinfo>
					</instance>


					<instance>
						<uri>https://public-firing-range.appspot.com/reflected/parameter/head?q=a</uri>
						<method>GET</method>
						<param></param>
						<attack></attack>
						<evidence></evidence>
						<otherinfo></otherinfo>
					</instance>


					<instance>
						<uri>
							https://public-firing-range.appspot.com/reflected/parameter/iframe_attribute_value?q=a</uri>
						<method>GET</method>
						<param></param>
						<attack></attack>
						<evidence></evidence>
						<otherinfo></otherinfo>
					</instance>


					<instance>
						<uri>
							https://public-firing-range.appspot.com/reflected/parameter/iframe_srcdoc?q=a</uri>
						<method>GET</method>
						<param></param>
						<attack></attack>
						<evidence></evidence>
						<otherinfo></otherinfo>
					</instance>


					<instance>
						<uri>
							https://public-firing-range.appspot.com/reflected/parameter/js_assignment?q=a</uri>
						<method>GET</method>
						<param></param>
						<attack></attack>
						<evidence></evidence>
						<otherinfo></otherinfo>
					</instance>


					<instance>
						<uri>
							https://public-firing-range.appspot.com/reflected/parameter/js_comment?q=a</uri>
						<method>GET</method>
						<param></param>
						<attack></attack>
						<evidence></evidence>
						<otherinfo></otherinfo>
					</instance>


					<instance>
						<uri>https://public-firing-range.appspot.com/reflected/parameter/js_eval?q=a</uri>
						<method>GET</method>
						<param></param>
						<attack></attack>
						<evidence></evidence>
						<otherinfo></otherinfo>
					</instance>


					<instance>
						<uri>
							https://public-firing-range.appspot.com/reflected/parameter/js_quoted_string?q=a</uri>
						<method>GET</method>
						<param></param>
						<attack></attack>
						<evidence></evidence>
						<otherinfo></otherinfo>
					</instance>


					<instance>
						<uri>
							https://public-firing-range.appspot.com/reflected/parameter/js_singlequoted_string?q=a</uri>
						<method>GET</method>
						<param></param>
						<attack></attack>
						<evidence></evidence>
						<otherinfo></otherinfo>
					</instance>


					<instance>
						<uri>
							https://public-firing-range.appspot.com/reflected/parameter/js_slashquoted_string?q=a</uri>
						<method>GET</method>
						<param></param>
						<attack></attack>
						<evidence></evidence>
						<otherinfo></otherinfo>
					</instance>


					<instance>
						<uri>https://public-firing-range.appspot.com/reflected/parameter/json?q=a</uri>
						<method>GET</method>
						<param></param>
						<attack></attack>
						<evidence></evidence>
						<otherinfo></otherinfo>
					</instance>


					<instance>
						<uri>
							https://public-firing-range.appspot.com/reflected/parameter/noscript?q=a</uri>
						<method>GET</method>
						<param></param>
						<attack></attack>
						<evidence></evidence>
						<otherinfo></otherinfo>
					</instance>


					<instance>
						<uri>
							https://public-firing-range.appspot.com/reflected/parameter/style_attribute_value?q=a</uri>
						<method>GET</method>
						<param></param>
						<attack></attack>
						<evidence></evidence>
						<otherinfo></otherinfo>
					</instance>


					<instance>
						<uri>https://public-firing-range.appspot.com/reflected/parameter/tagname?q=a</uri>
						<method>GET</method>
						<param></param>
						<attack></attack>
						<evidence></evidence>
						<otherinfo></otherinfo>
					</instance>


					<instance>
						<uri>
							https://public-firing-range.appspot.com/reflected/parameter/textarea?q=a</uri>
						<method>GET</method>
						<param></param>
						<attack></attack>
						<evidence></evidence>
						<otherinfo></otherinfo>
					</instance>


					<instance>
						<uri>
							https://public-firing-range.appspot.com/reflected/parameter/textarea_attribute_value?q=a</uri>
						<method>GET</method>
						<param></param>
						<attack></attack>
						<evidence></evidence>
						<otherinfo></otherinfo>
					</instance>


					<instance>
						<uri>https://public-firing-range.appspot.com/reflected/parameter/title?q=a</uri>
						<method>GET</method>
						<param></param>
						<attack></attack>
						<evidence></evidence>
						<otherinfo></otherinfo>
					</instance>


					<instance>
						<uri>https://public-firing-range.appspot.com/reflected/url/a</uri>
						<method>GET</method>
						<param></param>
						<attack></attack>
						<evidence></evidence>
						<otherinfo></otherinfo>
					</instance>


					<instance>
						<uri>https://public-firing-range.appspot.com/reflected/url/css_import?q=a</uri>
						<method>GET</method>
						<param></param>
						<attack></attack>
						<evidence></evidence>
						<otherinfo></otherinfo>
					</instance>


					<instance>
						<uri>https://public-firing-range.appspot.com/reflected/url/href?q=a</uri>
						<method>GET</method>
						<param></param>
						<attack></attack>
						<evidence></evidence>
						<otherinfo></otherinfo>
					</instance>


					<instance>
						<uri>https://public-firing-range.appspot.com/reflected/url/object_data?q=a</uri>
						<method>GET</method>
						<param></param>
						<attack></attack>
						<evidence></evidence>
						<otherinfo></otherinfo>
					</instance>


					<instance>
						<uri>https://public-firing-range.appspot.com/reflected/url/object_param?q=a</uri>
						<method>GET</method>
						<param></param>
						<attack></attack>
						<evidence></evidence>
						<otherinfo></otherinfo>
					</instance>


					<instance>
						<uri>https://public-firing-range.appspot.com/reflected/url/script_src?q=a</uri>
						<method>GET</method>
						<param></param>
						<attack></attack>
						<evidence></evidence>
						<otherinfo></otherinfo>
					</instance>


					<instance>
						<uri>https://public-firing-range.appspot.com/remoteinclude/index.html</uri>
						<method>GET</method>
						<param></param>
						<attack></attack>
						<evidence></evidence>
						<otherinfo></otherinfo>
					</instance>


					<instance>
						<uri>https://public-firing-range.appspot.com/remoteinclude/object_hash.html</uri>
						<method>GET</method>
						<param></param>
						<attack></attack>
						<evidence></evidence>
						<otherinfo></otherinfo>
					</instance>


					<instance>
						<uri>
							https://public-firing-range.appspot.com/remoteinclude/parameter/object/application_x-shockwave-flash?q=https://google.com</uri>
						<method>GET</method>
						<param></param>
						<attack></attack>
						<evidence></evidence>
						<otherinfo></otherinfo>
					</instance>


					<instance>
						<uri>
							https://public-firing-range.appspot.com/remoteinclude/parameter/object_raw?q=https://google.com</uri>
						<method>GET</method>
						<param></param>
						<attack></attack>
						<evidence></evidence>
						<otherinfo></otherinfo>
					</instance>


					<instance>
						<uri>
							https://public-firing-range.appspot.com/remoteinclude/parameter/script?q=http://127.0.0.2/localhost_import.js</uri>
						<method>GET</method>
						<param></param>
						<attack></attack>
						<evidence></evidence>
						<otherinfo></otherinfo>
					</instance>


					<instance>
						<uri>
							https://public-firing-range.appspot.com/remoteinclude/parameter/script?q=http://192.168.1.2/private_network_import.js</uri>
						<method>GET</method>
						<param></param>
						<attack></attack>
						<evidence></evidence>
						<otherinfo></otherinfo>
					</instance>


					<instance>
						<uri>
							https://public-firing-range.appspot.com/remoteinclude/parameter/script?q=http://g00gle.com/typosquatting_domain.js</uri>
						<method>GET</method>
						<param></param>
						<attack></attack>
						<evidence></evidence>
						<otherinfo></otherinfo>
					</instance>


					<instance>
						<uri>
							https://public-firing-range.appspot.com/remoteinclude/parameter/script?q=https://google.com</uri>
						<method>GET</method>
						<param></param>
						<attack></attack>
						<evidence></evidence>
						<otherinfo></otherinfo>
					</instance>


					<instance>
						<uri>https://public-firing-range.appspot.com/remoteinclude/script_hash.html</uri>
						<method>GET</method>
						<param></param>
						<attack></attack>
						<evidence></evidence>
						<otherinfo></otherinfo>
					</instance>


					<instance>
						<uri>https://public-firing-range.appspot.com/reverseclickjacking/</uri>
						<method>GET</method>
						<param></param>
						<attack></attack>
						<evidence></evidence>
						<otherinfo></otherinfo>
					</instance>


					<instance>
						<uri>
							https://public-firing-range.appspot.com/reverseclickjacking/multipage/ParameterInFragment/InCallback/WithoutXFO/</uri>
						<method>GET</method>
						<param></param>
						<attack></attack>
						<evidence></evidence>
						<otherinfo></otherinfo>
					</instance>


					<instance>
						<uri>
							https://public-firing-range.appspot.com/reverseclickjacking/multipage/ParameterInFragment/InCallback/WithXFO/</uri>
						<method>GET</method>
						<param></param>
						<attack></attack>
						<evidence></evidence>
						<otherinfo></otherinfo>
					</instance>


					<instance>
						<uri>
							https://public-firing-range.appspot.com/reverseclickjacking/multipage/ParameterInFragment/OtherParameter/WithoutXFO/</uri>
						<method>GET</method>
						<param></param>
						<attack></attack>
						<evidence></evidence>
						<otherinfo></otherinfo>
					</instance>


					<instance>
						<uri>
							https://public-firing-range.appspot.com/reverseclickjacking/multipage/ParameterInFragment/OtherParameter/WithXFO/</uri>
						<method>GET</method>
						<param></param>
						<attack></attack>
						<evidence></evidence>
						<otherinfo></otherinfo>
					</instance>


					<instance>
						<uri>
							https://public-firing-range.appspot.com/reverseclickjacking/multipage/ParameterInQuery/InCallback/WithoutXFO/?q=foo</uri>
						<method>GET</method>
						<param></param>
						<attack></attack>
						<evidence></evidence>
						<otherinfo></otherinfo>
					</instance>


					<instance>
						<uri>
							https://public-firing-range.appspot.com/reverseclickjacking/multipage/ParameterInQuery/InCallback/WithXFO/?q=foo</uri>
						<method>GET</method>
						<param></param>
						<attack></attack>
						<evidence></evidence>
						<otherinfo></otherinfo>
					</instance>


					<instance>
						<uri>
							https://public-firing-range.appspot.com/reverseclickjacking/multipage/ParameterInQuery/OtherParameter/WithoutXFO/?q=%26callback%3Dfoo%23</uri>
						<method>GET</method>
						<param></param>
						<attack></attack>
						<evidence></evidence>
						<otherinfo></otherinfo>
					</instance>


					<instance>
						<uri>
							https://public-firing-range.appspot.com/reverseclickjacking/multipage/ParameterInQuery/OtherParameter/WithXFO/?q=%26callback%3Dfoo%23</uri>
						<method>GET</method>
						<param></param>
						<attack></attack>
						<evidence></evidence>
						<otherinfo></otherinfo>
					</instance>


					<instance>
						<uri>
							https://public-firing-range.appspot.com/reverseclickjacking/singlepage/ParameterInFragment/InCallback/</uri>
						<method>GET</method>
						<param></param>
						<attack></attack>
						<evidence></evidence>
						<otherinfo></otherinfo>
					</instance>


					<instance>
						<uri>
							https://public-firing-range.appspot.com/reverseclickjacking/singlepage/ParameterInFragment/OtherParameter/</uri>
						<method>GET</method>
						<param></param>
						<attack></attack>
						<evidence></evidence>
						<otherinfo></otherinfo>
					</instance>


					<instance>
						<uri>
							https://public-firing-range.appspot.com/reverseclickjacking/singlepage/ParameterInQuery/InCallback/?q=urc_button.click</uri>
						<method>GET</method>
						<param></param>
						<attack></attack>
						<evidence></evidence>
						<otherinfo></otherinfo>
					</instance>


					<instance>
						<uri>
							https://public-firing-range.appspot.com/reverseclickjacking/singlepage/ParameterInQuery/OtherParameter/?q=%26callback%3Durc_button.click%23</uri>
						<method>GET</method>
						<param></param>
						<attack></attack>
						<evidence></evidence>
						<otherinfo></otherinfo>
					</instance>


					<instance>
						<uri>https://public-firing-range.appspot.com/script</uri>
						<method>GET</method>
						<param></param>
						<attack></attack>
						<evidence></evidence>
						<otherinfo></otherinfo>
					</instance>


					<instance>
						<uri>https://public-firing-range.appspot.com/sitemap.xml</uri>
						<method>GET</method>
						<param></param>
						<attack></attack>
						<evidence></evidence>
						<otherinfo></otherinfo>
					</instance>


					<instance>
						<uri>https://public-firing-range.appspot.com/tags/index.html</uri>
						<method>GET</method>
						<param></param>
						<attack></attack>
						<evidence></evidence>
						<otherinfo></otherinfo>
					</instance>


					<instance>
						<uri>https://public-firing-range.appspot.com/tags/multiline?q=a</uri>
						<method>GET</method>
						<param></param>
						<attack></attack>
						<evidence></evidence>
						<otherinfo></otherinfo>
					</instance>


					<instance>
						<uri>https://public-firing-range.appspot.com/urldom/index.html</uri>
						<method>GET</method>
						<param></param>
						<attack></attack>
						<evidence></evidence>
						<otherinfo></otherinfo>
					</instance>


					<instance>
						<uri>https://public-firing-range.appspot.com/urldom/location/hash/a.href</uri>
						<method>GET</method>
						<param></param>
						<attack></attack>
						<evidence></evidence>
						<otherinfo></otherinfo>
					</instance>


					<instance>
						<uri>https://public-firing-range.appspot.com/urldom/location/hash/base.href</uri>
						<method>GET</method>
						<param></param>
						<attack></attack>
						<evidence></evidence>
						<otherinfo></otherinfo>
					</instance>


					<instance>
						<uri>
							https://public-firing-range.appspot.com/urldom/location/hash/document.location</uri>
						<method>GET</method>
						<param></param>
						<attack></attack>
						<evidence></evidence>
						<otherinfo></otherinfo>
					</instance>


					<instance>
						<uri>https://public-firing-range.appspot.com/urldom/location/hash/embed.src</uri>
						<method>GET</method>
						<param></param>
						<attack></attack>
						<evidence></evidence>
						<otherinfo></otherinfo>
					</instance>


					<instance>
						<uri>https://public-firing-range.appspot.com/urldom/location/hash/fetch</uri>
						<method>GET</method>
						<param></param>
						<attack></attack>
						<evidence></evidence>
						<otherinfo></otherinfo>
					</instance>


					<instance>
						<uri>
							https://public-firing-range.appspot.com/urldom/location/hash/form.action</uri>
						<method>GET</method>
						<param></param>
						<attack></attack>
						<evidence></evidence>
						<otherinfo></otherinfo>
					</instance>


					<instance>
						<uri>https://public-firing-range.appspot.com/urldom/location/hash/iframe.src</uri>
						<method>GET</method>
						<param></param>
						<attack></attack>
						<evidence></evidence>
						<otherinfo></otherinfo>
					</instance>


					<instance>
						<uri>
							https://public-firing-range.appspot.com/urldom/location/hash/input.formaction</uri>
						<method>GET</method>
						<param></param>
						<attack></attack>
						<evidence></evidence>
						<otherinfo></otherinfo>
					</instance>


					<instance>
						<uri>https://public-firing-range.appspot.com/urldom/location/hash/link.href</uri>
						<method>GET</method>
						<param></param>
						<attack></attack>
						<evidence></evidence>
						<otherinfo></otherinfo>
					</instance>


					<instance>
						<uri>
							https://public-firing-range.appspot.com/urldom/location/hash/object.data</uri>
						<method>GET</method>
						<param></param>
						<attack></attack>
						<evidence></evidence>
						<otherinfo></otherinfo>
					</instance>


					<instance>
						<uri>
							https://public-firing-range.appspot.com/urldom/location/hash/param.code.value</uri>
						<method>GET</method>
						<param></param>
						<attack></attack>
						<evidence></evidence>
						<otherinfo></otherinfo>
					</instance>


					<instance>
						<uri>
							https://public-firing-range.appspot.com/urldom/location/hash/param.movie.value</uri>
						<method>GET</method>
						<param></param>
						<attack></attack>
						<evidence></evidence>
						<otherinfo></otherinfo>
					</instance>


					<instance>
						<uri>
							https://public-firing-range.appspot.com/urldom/location/hash/param.src.value</uri>
						<method>GET</method>
						<param></param>
						<attack></attack>
						<evidence></evidence>
						<otherinfo></otherinfo>
					</instance>


					<instance>
						<uri>
							https://public-firing-range.appspot.com/urldom/location/hash/param.url.value</uri>
						<method>GET</method>
						<param></param>
						<attack></attack>
						<evidence></evidence>
						<otherinfo></otherinfo>
					</instance>


					<instance>
						<uri>
							https://public-firing-range.appspot.com/urldom/location/hash/script.href</uri>
						<method>GET</method>
						<param></param>
						<attack></attack>
						<evidence></evidence>
						<otherinfo></otherinfo>
					</instance>


					<instance>
						<uri>https://public-firing-range.appspot.com/urldom/location/hash/script.src</uri>
						<method>GET</method>
						<param></param>
						<attack></attack>
						<evidence></evidence>
						<otherinfo></otherinfo>
					</instance>


					<instance>
						<uri>
							https://public-firing-range.appspot.com/urldom/location/hash/script.src.partial_domain</uri>
						<method>GET</method>
						<param></param>
						<attack></attack>
						<evidence></evidence>
						<otherinfo></otherinfo>
					</instance>


					<instance>
						<uri>
							https://public-firing-range.appspot.com/urldom/location/hash/script.src.partial_path</uri>
						<method>GET</method>
						<param></param>
						<attack></attack>
						<evidence></evidence>
						<otherinfo></otherinfo>
					</instance>


					<instance>
						<uri>
							https://public-firing-range.appspot.com/urldom/location/hash/script.src.partial_query</uri>
						<method>GET</method>
						<param></param>
						<attack></attack>
						<evidence></evidence>
						<otherinfo></otherinfo>
					</instance>


					<instance>
						<uri>
							https://public-firing-range.appspot.com/urldom/location/hash/window.open</uri>
						<method>GET</method>
						<param></param>
						<attack></attack>
						<evidence></evidence>
						<otherinfo></otherinfo>
					</instance>


					<instance>
						<uri>https://public-firing-range.appspot.com/urldom/location/hash/xhr.open</uri>
						<method>GET</method>
						<param></param>
						<attack></attack>
						<evidence></evidence>
						<otherinfo></otherinfo>
					</instance>


					<instance>
						<uri>
							https://public-firing-range.appspot.com/urldom/location/search/area.href?//example.org</uri>
						<method>GET</method>
						<param></param>
						<attack></attack>
						<evidence></evidence>
						<otherinfo></otherinfo>
					</instance>


					<instance>
						<uri>
							https://public-firing-range.appspot.com/urldom/location/search/button.formaction?//example.org</uri>
						<method>GET</method>
						<param></param>
						<attack></attack>
						<evidence></evidence>
						<otherinfo></otherinfo>
					</instance>


					<instance>
						<uri>
							https://public-firing-range.appspot.com/urldom/location/search/frame.src?//example.org</uri>
						<method>GET</method>
						<param></param>
						<attack></attack>
						<evidence></evidence>
						<otherinfo></otherinfo>
					</instance>


					<instance>
						<uri>
							https://public-firing-range.appspot.com/urldom/location/search/location.assign?//example.org</uri>
						<method>GET</method>
						<param></param>
						<attack></attack>
						<evidence></evidence>
						<otherinfo></otherinfo>
					</instance>


					<instance>
						<uri>
							https://public-firing-range.appspot.com/urldom/location/search/svg.a?//example.org</uri>
						<method>GET</method>
						<param></param>
						<attack></attack>
						<evidence></evidence>
						<otherinfo></otherinfo>
					</instance>


					<instance>
						<uri>https://public-firing-range.appspot.com/vulnerablelibraries/index.html</uri>
						<method>GET</method>
						<param></param>
						<attack></attack>
						<evidence></evidence>
						<otherinfo></otherinfo>
					</instance>


					<instance>
						<uri>https://public-firing-range.appspot.com/vulnerablelibraries/jquery.html</uri>
						<method>GET</method>
						<param></param>
						<attack></attack>
						<evidence></evidence>
						<otherinfo></otherinfo>
					</instance>


					<instance>
						<uri>https://public-firing-range.appspot.com/vulnerablelibraries/x</uri>
						<method>GET</method>
						<param></param>
						<attack></attack>
						<evidence></evidence>
						<otherinfo></otherinfo>
					</instance>


					<instance>
						<uri>
							https://public-firing-range.appspot.com/angular/angular_body_raw_post/1.6.0</uri>
						<method>POST</method>
						<param></param>
						<attack></attack>
						<evidence></evidence>
						<otherinfo></otherinfo>
					</instance>


					<instance>
						<uri>https://public-firing-range.appspot.com/reflected/parameter/form</uri>
						<method>POST</method>
						<param></param>
						<attack></attack>
						<evidence></evidence>
						<otherinfo></otherinfo>
					</instance>

				</instances>
				<count>265</count>
				<solution>&lt;p&gt;Ensure that your web server, application server, load balancer,
					etc. is configured to set the Content-Security-Policy header.&lt;/p&gt;</solution>
				<otherinfo></otherinfo>
				<reference>
					&lt;p&gt;https://developer.mozilla.org/en-US/docs/Web/Security/CSP/Introducing_Content_Security_Policy&lt;/p&gt;&lt;p&gt;https://cheatsheetseries.owasp.org/cheatsheets/Content_Security_Policy_Cheat_Sheet.html&lt;/p&gt;&lt;p&gt;http://www.w3.org/TR/CSP/&lt;/p&gt;&lt;p&gt;http://w3c.github.io/webappsec/specs/content-security-policy/csp-specification.dev.html&lt;/p&gt;&lt;p&gt;http://www.html5rocks.com/en/tutorials/security/content-security-policy/&lt;/p&gt;&lt;p&gt;http://caniuse.com/#feat=contentsecuritypolicy&lt;/p&gt;&lt;p&gt;http://content-security-policy.com/&lt;/p&gt;</reference>
				<cweid>693</cweid>
				<wascid>15</wascid>
				<sourceid>6</sourceid>
			</alertitem>


			<alertitem>
				<pluginid>10020</pluginid>
				<alertRef>10020-1</alertRef>
				<alert>Missing Anti-clickjacking Header</alert>
				<name>Missing Anti-clickjacking Header</name>
				<riskcode>2</riskcode>
				<confidence>2</confidence>
				<riskdesc>Medium (Medium)</riskdesc>
				<confidencedesc>Medium</confidencedesc>
				<desc>&lt;p&gt;The response does not include either Content-Security-Policy with
					&apos;frame-ancestors&apos; directive or X-Frame-Options to protect against
					&apos;ClickJacking&apos; attacks.&lt;/p&gt;</desc>
				<instances>

					<instance>
						<uri>https://public-firing-range.appspot.com</uri>
						<method>GET</method>
						<param>X-Frame-Options</param>
						<attack></attack>
						<evidence></evidence>
						<otherinfo></otherinfo>
					</instance>


					<instance>
						<uri>https://public-firing-range.appspot.com/</uri>
						<method>GET</method>
						<param>X-Frame-Options</param>
						<attack></attack>
						<evidence></evidence>
						<otherinfo></otherinfo>
					</instance>


					<instance>
						<uri>https://public-firing-range.appspot.com/address/baseURI/documentwrite</uri>
						<method>GET</method>
						<param>X-Frame-Options</param>
						<attack></attack>
						<evidence></evidence>
						<otherinfo></otherinfo>
					</instance>


					<instance>
						<uri>
							https://public-firing-range.appspot.com/address/documentURI/documentwrite</uri>
						<method>GET</method>
						<param>X-Frame-Options</param>
						<attack></attack>
						<evidence></evidence>
						<otherinfo></otherinfo>
					</instance>


					<instance>
						<uri>https://public-firing-range.appspot.com/address/index.html</uri>
						<method>GET</method>
						<param>X-Frame-Options</param>
						<attack></attack>
						<evidence></evidence>
						<otherinfo></otherinfo>
					</instance>


					<instance>
						<uri>https://public-firing-range.appspot.com/address/location.hash/assign</uri>
						<method>GET</method>
						<param>X-Frame-Options</param>
						<attack></attack>
						<evidence></evidence>
						<otherinfo></otherinfo>
					</instance>


					<instance>
						<uri>
							https://public-firing-range.appspot.com/address/location.hash/documentwrite</uri>
						<method>GET</method>
						<param>X-Frame-Options</param>
						<attack></attack>
						<evidence></evidence>
						<otherinfo></otherinfo>
					</instance>


					<instance>
						<uri>
							https://public-firing-range.appspot.com/address/location.hash/documentwriteln</uri>
						<method>GET</method>
						<param>X-Frame-Options</param>
						<attack></attack>
						<evidence></evidence>
						<otherinfo></otherinfo>
					</instance>


					<instance>
						<uri>https://public-firing-range.appspot.com/address/location.hash/eval</uri>
						<method>GET</method>
						<param>X-Frame-Options</param>
						<attack></attack>
						<evidence></evidence>
						<otherinfo></otherinfo>
					</instance>


					<instance>
						<uri>
							https://public-firing-range.appspot.com/address/location.hash/formaction</uri>
						<method>GET</method>
						<param>X-Frame-Options</param>
						<attack></attack>
						<evidence></evidence>
						<otherinfo></otherinfo>
					</instance>


					<instance>
						<uri>https://public-firing-range.appspot.com/address/location.hash/function</uri>
						<method>GET</method>
						<param>X-Frame-Options</param>
						<attack></attack>
						<evidence></evidence>
						<otherinfo></otherinfo>
					</instance>


					<instance>
						<uri>
							https://public-firing-range.appspot.com/address/location.hash/inlineevent</uri>
						<method>GET</method>
						<param>X-Frame-Options</param>
						<attack></attack>
						<evidence></evidence>
						<otherinfo></otherinfo>
					</instance>


					<instance>
						<uri>https://public-firing-range.appspot.com/address/location.hash/innerHtml</uri>
						<method>GET</method>
						<param>X-Frame-Options</param>
						<attack></attack>
						<evidence></evidence>
						<otherinfo></otherinfo>
					</instance>


					<instance>
						<uri>https://public-firing-range.appspot.com/address/location.hash/jshref</uri>
						<method>GET</method>
						<param>X-Frame-Options</param>
						<attack></attack>
						<evidence></evidence>
						<otherinfo></otherinfo>
					</instance>


					<instance>
						<uri>
							https://public-firing-range.appspot.com/address/location.hash/onclickAddEventListener</uri>
						<method>GET</method>
						<param>X-Frame-Options</param>
						<attack></attack>
						<evidence></evidence>
						<otherinfo></otherinfo>
					</instance>


					<instance>
						<uri>
							https://public-firing-range.appspot.com/address/location.hash/onclickSetAttribute</uri>
						<method>GET</method>
						<param>X-Frame-Options</param>
						<attack></attack>
						<evidence></evidence>
						<otherinfo></otherinfo>
					</instance>


					<instance>
						<uri>
							https://public-firing-range.appspot.com/address/location.hash/rangeCreateContextualFragment</uri>
						<method>GET</method>
						<param>X-Frame-Options</param>
						<attack></attack>
						<evidence></evidence>
						<otherinfo></otherinfo>
					</instance>


					<instance>
						<uri>https://public-firing-range.appspot.com/address/location.hash/replace</uri>
						<method>GET</method>
						<param>X-Frame-Options</param>
						<attack></attack>
						<evidence></evidence>
						<otherinfo></otherinfo>
					</instance>


					<instance>
						<uri>
							https://public-firing-range.appspot.com/address/location.hash/setTimeout</uri>
						<method>GET</method>
						<param>X-Frame-Options</param>
						<attack></attack>
						<evidence></evidence>
						<otherinfo></otherinfo>
					</instance>


					<instance>
						<uri>https://public-firing-range.appspot.com/address/location/assign</uri>
						<method>GET</method>
						<param>X-Frame-Options</param>
						<attack></attack>
						<evidence></evidence>
						<otherinfo></otherinfo>
					</instance>


					<instance>
						<uri>https://public-firing-range.appspot.com/address/location/documentwrite</uri>
						<method>GET</method>
						<param>X-Frame-Options</param>
						<attack></attack>
						<evidence></evidence>
						<otherinfo></otherinfo>
					</instance>


					<instance>
						<uri>
							https://public-firing-range.appspot.com/address/location/documentwriteln</uri>
						<method>GET</method>
						<param>X-Frame-Options</param>
						<attack></attack>
						<evidence></evidence>
						<otherinfo></otherinfo>
					</instance>


					<instance>
						<uri>https://public-firing-range.appspot.com/address/location/eval</uri>
						<method>GET</method>
						<param>X-Frame-Options</param>
						<attack></attack>
						<evidence></evidence>
						<otherinfo></otherinfo>
					</instance>


					<instance>
						<uri>https://public-firing-range.appspot.com/address/location/innerHtml</uri>
						<method>GET</method>
						<param>X-Frame-Options</param>
						<attack></attack>
						<evidence></evidence>
						<otherinfo></otherinfo>
					</instance>


					<instance>
						<uri>
							https://public-firing-range.appspot.com/address/location/rangeCreateContextualFragment</uri>
						<method>GET</method>
						<param>X-Frame-Options</param>
						<attack></attack>
						<evidence></evidence>
						<otherinfo></otherinfo>
					</instance>


					<instance>
						<uri>https://public-firing-range.appspot.com/address/location/replace</uri>
						<method>GET</method>
						<param>X-Frame-Options</param>
						<attack></attack>
						<evidence></evidence>
						<otherinfo></otherinfo>
					</instance>


					<instance>
						<uri>https://public-firing-range.appspot.com/address/location/setTimeout</uri>
						<method>GET</method>
						<param>X-Frame-Options</param>
						<attack></attack>
						<evidence></evidence>
						<otherinfo></otherinfo>
					</instance>


					<instance>
						<uri>
							https://public-firing-range.appspot.com/address/locationhref/documentwrite</uri>
						<method>GET</method>
						<param>X-Frame-Options</param>
						<attack></attack>
						<evidence></evidence>
						<otherinfo></otherinfo>
					</instance>


					<instance>
						<uri>
							https://public-firing-range.appspot.com/address/locationpathname/documentwrite</uri>
						<method>GET</method>
						<param>X-Frame-Options</param>
						<attack></attack>
						<evidence></evidence>
						<otherinfo></otherinfo>
					</instance>


					<instance>
						<uri>
							https://public-firing-range.appspot.com/address/locationsearch/documentwrite</uri>
						<method>GET</method>
						<param>X-Frame-Options</param>
						<attack></attack>
						<evidence></evidence>
						<otherinfo></otherinfo>
					</instance>


					<instance>
						<uri>https://public-firing-range.appspot.com/address/URL/documentwrite</uri>
						<method>GET</method>
						<param>X-Frame-Options</param>
						<attack></attack>
						<evidence></evidence>
						<otherinfo></otherinfo>
					</instance>


					<instance>
						<uri>
							https://public-firing-range.appspot.com/address/URLUnencoded/documentwrite</uri>
						<method>GET</method>
						<param>X-Frame-Options</param>
						<attack></attack>
						<evidence></evidence>
						<otherinfo></otherinfo>
					</instance>


					<instance>
						<uri>
							https://public-firing-range.appspot.com/angular/angular_body/1.1.5?q=test</uri>
						<method>GET</method>
						<param>X-Frame-Options</param>
						<attack></attack>
						<evidence></evidence>
						<otherinfo></otherinfo>
					</instance>


					<instance>
						<uri>
							https://public-firing-range.appspot.com/angular/angular_body/1.2.0?q=test</uri>
						<method>GET</method>
						<param>X-Frame-Options</param>
						<attack></attack>
						<evidence></evidence>
						<otherinfo></otherinfo>
					</instance>


					<instance>
						<uri>
							https://public-firing-range.appspot.com/angular/angular_body/1.2.18?q=test</uri>
						<method>GET</method>
						<param>X-Frame-Options</param>
						<attack></attack>
						<evidence></evidence>
						<otherinfo></otherinfo>
					</instance>


					<instance>
						<uri>
							https://public-firing-range.appspot.com/angular/angular_body/1.2.19?q=test</uri>
						<method>GET</method>
						<param>X-Frame-Options</param>
						<attack></attack>
						<evidence></evidence>
						<otherinfo></otherinfo>
					</instance>


					<instance>
						<uri>
							https://public-firing-range.appspot.com/angular/angular_body/1.2.24?q=test</uri>
						<method>GET</method>
						<param>X-Frame-Options</param>
						<attack></attack>
						<evidence></evidence>
						<otherinfo></otherinfo>
					</instance>


					<instance>
						<uri>
							https://public-firing-range.appspot.com/angular/angular_body/1.4.0?q=test</uri>
						<method>GET</method>
						<param>X-Frame-Options</param>
						<attack></attack>
						<evidence></evidence>
						<otherinfo></otherinfo>
					</instance>


					<instance>
						<uri>
							https://public-firing-range.appspot.com/angular/angular_body/1.6.0?q=test</uri>
						<method>GET</method>
						<param>X-Frame-Options</param>
						<attack></attack>
						<evidence></evidence>
						<otherinfo></otherinfo>
					</instance>


					<instance>
						<uri>
							https://public-firing-range.appspot.com/angular/angular_body_alt_symbols/1.4.0?q=test</uri>
						<method>GET</method>
						<param>X-Frame-Options</param>
						<attack></attack>
						<evidence></evidence>
						<otherinfo></otherinfo>
					</instance>


					<instance>
						<uri>
							https://public-firing-range.appspot.com/angular/angular_body_alt_symbols_raw/1.6.0?q=test</uri>
						<method>GET</method>
						<param>X-Frame-Options</param>
						<attack></attack>
						<evidence></evidence>
						<otherinfo></otherinfo>
					</instance>


					<instance>
						<uri>
							https://public-firing-range.appspot.com/angular/angular_body_attribute_ng/1.4.0?q=test</uri>
						<method>GET</method>
						<param>X-Frame-Options</param>
						<attack></attack>
						<evidence></evidence>
						<otherinfo></otherinfo>
					</instance>


					<instance>
						<uri>
							https://public-firing-range.appspot.com/angular/angular_body_attribute_non_ng/1.4.0?q=test</uri>
						<method>GET</method>
						<param>X-Frame-Options</param>
						<attack></attack>
						<evidence></evidence>
						<otherinfo></otherinfo>
					</instance>


					<instance>
						<uri>
							https://public-firing-range.appspot.com/angular/angular_body_attribute_non_ng_raw/1.4.0?q=test</uri>
						<method>GET</method>
						<param>X-Frame-Options</param>
						<attack></attack>
						<evidence></evidence>
						<otherinfo></otherinfo>
					</instance>


					<instance>
						<uri>
							https://public-firing-range.appspot.com/angular/angular_body_raw/1.4.0?q=test</uri>
						<method>GET</method>
						<param>X-Frame-Options</param>
						<attack></attack>
						<evidence></evidence>
						<otherinfo></otherinfo>
					</instance>


					<instance>
						<uri>
							https://public-firing-range.appspot.com/angular/angular_body_raw_escaped/1.4.0?q=test</uri>
						<method>GET</method>
						<param>X-Frame-Options</param>
						<attack></attack>
						<evidence></evidence>
						<otherinfo></otherinfo>
					</instance>


					<instance>
						<uri>
							https://public-firing-range.appspot.com/angular/angular_body_raw_escaped_alt_symbols/1.4.0?q=test</uri>
						<method>GET</method>
						<param>X-Frame-Options</param>
						<attack></attack>
						<evidence></evidence>
						<otherinfo></otherinfo>
					</instance>


					<instance>
						<uri>
							https://public-firing-range.appspot.com/angular/angular_body_raw_post/1.6.0</uri>
						<method>GET</method>
						<param>X-Frame-Options</param>
						<attack></attack>
						<evidence></evidence>
						<otherinfo></otherinfo>
					</instance>


					<instance>
						<uri>
							https://public-firing-range.appspot.com/angular/angular_cookie_parse/1.6.0</uri>
						<method>GET</method>
						<param>X-Frame-Options</param>
						<attack></attack>
						<evidence></evidence>
						<otherinfo></otherinfo>
					</instance>


					<instance>
						<uri>
							https://public-firing-range.appspot.com/angular/angular_form_parse/1.6.0</uri>
						<method>GET</method>
						<param>X-Frame-Options</param>
						<attack></attack>
						<evidence></evidence>
						<otherinfo></otherinfo>
					</instance>


					<instance>
						<uri>
							https://public-firing-range.appspot.com/angular/angular_post_message_parse/1.6.0</uri>
						<method>GET</method>
						<param>X-Frame-Options</param>
						<attack></attack>
						<evidence></evidence>
						<otherinfo></otherinfo>
					</instance>


					<instance>
						<uri>
							https://public-firing-range.appspot.com/angular/angular_storage_parse/1.6.0</uri>
						<method>GET</method>
						<param>X-Frame-Options</param>
						<attack></attack>
						<evidence></evidence>
						<otherinfo></otherinfo>
					</instance>


					<instance>
						<uri>https://public-firing-range.appspot.com/angular/index.html</uri>
						<method>GET</method>
						<param>X-Frame-Options</param>
						<attack></attack>
						<evidence></evidence>
						<otherinfo></otherinfo>
					</instance>


					<instance>
						<uri>https://public-firing-range.appspot.com/badscriptimport/index.html</uri>
						<method>GET</method>
						<param>X-Frame-Options</param>
						<attack></attack>
						<evidence></evidence>
						<otherinfo></otherinfo>
					</instance>


					<instance>
						<uri>
							https://public-firing-range.appspot.com/cors/alloworigin/allowInsecureScheme</uri>
						<method>GET</method>
						<param>X-Frame-Options</param>
						<attack></attack>
						<evidence></evidence>
						<otherinfo></otherinfo>
					</instance>


					<instance>
						<uri>
							https://public-firing-range.appspot.com/cors/alloworigin/allowNullOrigin</uri>
						<method>GET</method>
						<param>X-Frame-Options</param>
						<attack></attack>
						<evidence></evidence>
						<otherinfo></otherinfo>
					</instance>


					<instance>
						<uri>
							https://public-firing-range.appspot.com/cors/alloworigin/dynamicAllowOrigin</uri>
						<method>GET</method>
						<param>X-Frame-Options</param>
						<attack></attack>
						<evidence></evidence>
						<otherinfo></otherinfo>
					</instance>


					<instance>
						<uri>https://public-firing-range.appspot.com/cors/index.html</uri>
						<method>GET</method>
						<param>X-Frame-Options</param>
						<attack></attack>
						<evidence></evidence>
						<otherinfo></otherinfo>
					</instance>


					<instance>
						<uri>https://public-firing-range.appspot.com/dom/dompropagation/</uri>
						<method>GET</method>
						<param>X-Frame-Options</param>
						<attack></attack>
						<evidence></evidence>
						<otherinfo></otherinfo>
					</instance>


					<instance>
						<uri>
							https://public-firing-range.appspot.com/dom/eventtriggering/document/formSubmission/documentWrite</uri>
						<method>GET</method>
						<param>X-Frame-Options</param>
						<attack></attack>
						<evidence></evidence>
						<otherinfo></otherinfo>
					</instance>


					<instance>
						<uri>
							https://public-firing-range.appspot.com/dom/eventtriggering/document/formSubmission/eval</uri>
						<method>GET</method>
						<param>X-Frame-Options</param>
						<attack></attack>
						<evidence></evidence>
						<otherinfo></otherinfo>
					</instance>


					<instance>
						<uri>
							https://public-firing-range.appspot.com/dom/eventtriggering/document/formSubmission/innerHtml</uri>
						<method>GET</method>
						<param>X-Frame-Options</param>
						<attack></attack>
						<evidence></evidence>
						<otherinfo></otherinfo>
					</instance>


					<instance>
						<uri>
							https://public-firing-range.appspot.com/dom/eventtriggering/document/inputTyping/documentWrite</uri>
						<method>GET</method>
						<param>X-Frame-Options</param>
						<attack></attack>
						<evidence></evidence>
						<otherinfo></otherinfo>
					</instance>


					<instance>
						<uri>
							https://public-firing-range.appspot.com/dom/eventtriggering/document/inputTyping/eval</uri>
						<method>GET</method>
						<param>X-Frame-Options</param>
						<attack></attack>
						<evidence></evidence>
						<otherinfo></otherinfo>
					</instance>


					<instance>
						<uri>
							https://public-firing-range.appspot.com/dom/eventtriggering/document/inputTyping/innerHtml</uri>
						<method>GET</method>
						<param>X-Frame-Options</param>
						<attack></attack>
						<evidence></evidence>
						<otherinfo></otherinfo>
					</instance>


					<instance>
						<uri>https://public-firing-range.appspot.com/dom/index.html</uri>
						<method>GET</method>
						<param>X-Frame-Options</param>
						<attack></attack>
						<evidence></evidence>
						<otherinfo></otherinfo>
					</instance>


					<instance>
						<uri>https://public-firing-range.appspot.com/dom/javascripturi.html</uri>
						<method>GET</method>
						<param>X-Frame-Options</param>
						<attack></attack>
						<evidence></evidence>
						<otherinfo></otherinfo>
					</instance>


					<instance>
						<uri>
							https://public-firing-range.appspot.com/dom/toxicdom/document/cookie/eval</uri>
						<method>GET</method>
						<param>X-Frame-Options</param>
						<attack></attack>
						<evidence></evidence>
						<otherinfo></otherinfo>
					</instance>


					<instance>
						<uri>
							https://public-firing-range.appspot.com/dom/toxicdom/document/cookie_set/documentWrite</uri>
						<method>GET</method>
						<param>X-Frame-Options</param>
						<attack></attack>
						<evidence></evidence>
						<otherinfo></otherinfo>
					</instance>


					<instance>
						<uri>
							https://public-firing-range.appspot.com/dom/toxicdom/document/cookie_set/eval</uri>
						<method>GET</method>
						<param>X-Frame-Options</param>
						<attack></attack>
						<evidence></evidence>
						<otherinfo></otherinfo>
					</instance>


					<instance>
						<uri>
							https://public-firing-range.appspot.com/dom/toxicdom/document/cookie_set/innerHtml</uri>
						<method>GET</method>
						<param>X-Frame-Options</param>
						<attack></attack>
						<evidence></evidence>
						<otherinfo></otherinfo>
					</instance>


					<instance>
						<uri>
							https://public-firing-range.appspot.com/dom/toxicdom/document/referrer/documentWrite</uri>
						<method>GET</method>
						<param>X-Frame-Options</param>
						<attack></attack>
						<evidence></evidence>
						<otherinfo></otherinfo>
					</instance>


					<instance>
						<uri>
							https://public-firing-range.appspot.com/dom/toxicdom/document/referrer/eval</uri>
						<method>GET</method>
						<param>X-Frame-Options</param>
						<attack></attack>
						<evidence></evidence>
						<otherinfo></otherinfo>
					</instance>


					<instance>
						<uri>
							https://public-firing-range.appspot.com/dom/toxicdom/document/referrer/innerHtml</uri>
						<method>GET</method>
						<param>X-Frame-Options</param>
						<attack></attack>
						<evidence></evidence>
						<otherinfo></otherinfo>
					</instance>


					<instance>
						<uri>
							https://public-firing-range.appspot.com/dom/toxicdom/external/localStorage/array/eval</uri>
						<method>GET</method>
						<param>X-Frame-Options</param>
						<attack></attack>
						<evidence></evidence>
						<otherinfo></otherinfo>
					</instance>


					<instance>
						<uri>
							https://public-firing-range.appspot.com/dom/toxicdom/external/localStorage/function/documentWrite</uri>
						<method>GET</method>
						<param>X-Frame-Options</param>
						<attack></attack>
						<evidence></evidence>
						<otherinfo></otherinfo>
					</instance>


					<instance>
						<uri>
							https://public-firing-range.appspot.com/dom/toxicdom/external/localStorage/function/eval</uri>
						<method>GET</method>
						<param>X-Frame-Options</param>
						<attack></attack>
						<evidence></evidence>
						<otherinfo></otherinfo>
					</instance>


					<instance>
						<uri>
							https://public-firing-range.appspot.com/dom/toxicdom/external/localStorage/function/innerHtml</uri>
						<method>GET</method>
						<param>X-Frame-Options</param>
						<attack></attack>
						<evidence></evidence>
						<otherinfo></otherinfo>
					</instance>


					<instance>
						<uri>
							https://public-firing-range.appspot.com/dom/toxicdom/external/localStorage/property/documentWrite</uri>
						<method>GET</method>
						<param>X-Frame-Options</param>
						<attack></attack>
						<evidence></evidence>
						<otherinfo></otherinfo>
					</instance>


					<instance>
						<uri>
							https://public-firing-range.appspot.com/dom/toxicdom/external/sessionStorage/array/eval</uri>
						<method>GET</method>
						<param>X-Frame-Options</param>
						<attack></attack>
						<evidence></evidence>
						<otherinfo></otherinfo>
					</instance>


					<instance>
						<uri>
							https://public-firing-range.appspot.com/dom/toxicdom/external/sessionStorage/function/documentWrite</uri>
						<method>GET</method>
						<param>X-Frame-Options</param>
						<attack></attack>
						<evidence></evidence>
						<otherinfo></otherinfo>
					</instance>


					<instance>
						<uri>
							https://public-firing-range.appspot.com/dom/toxicdom/external/sessionStorage/function/eval</uri>
						<method>GET</method>
						<param>X-Frame-Options</param>
						<attack></attack>
						<evidence></evidence>
						<otherinfo></otherinfo>
					</instance>


					<instance>
						<uri>
							https://public-firing-range.appspot.com/dom/toxicdom/external/sessionStorage/function/innerHtml</uri>
						<method>GET</method>
						<param>X-Frame-Options</param>
						<attack></attack>
						<evidence></evidence>
						<otherinfo></otherinfo>
					</instance>


					<instance>
						<uri>
							https://public-firing-range.appspot.com/dom/toxicdom/external/sessionStorage/property/documentWrite</uri>
						<method>GET</method>
						<param>X-Frame-Options</param>
						<attack></attack>
						<evidence></evidence>
						<otherinfo></otherinfo>
					</instance>


					<instance>
						<uri>
							https://public-firing-range.appspot.com/dom/toxicdom/localStorage/array/eval</uri>
						<method>GET</method>
						<param>X-Frame-Options</param>
						<attack></attack>
						<evidence></evidence>
						<otherinfo></otherinfo>
					</instance>


					<instance>
						<uri>
							https://public-firing-range.appspot.com/dom/toxicdom/localStorage/function/documentWrite</uri>
						<method>GET</method>
						<param>X-Frame-Options</param>
						<attack></attack>
						<evidence></evidence>
						<otherinfo></otherinfo>
					</instance>


					<instance>
						<uri>
							https://public-firing-range.appspot.com/dom/toxicdom/localStorage/function/eval</uri>
						<method>GET</method>
						<param>X-Frame-Options</param>
						<attack></attack>
						<evidence></evidence>
						<otherinfo></otherinfo>
					</instance>


					<instance>
						<uri>
							https://public-firing-range.appspot.com/dom/toxicdom/localStorage/function/innerHtml</uri>
						<method>GET</method>
						<param>X-Frame-Options</param>
						<attack></attack>
						<evidence></evidence>
						<otherinfo></otherinfo>
					</instance>


					<instance>
						<uri>
							https://public-firing-range.appspot.com/dom/toxicdom/localStorage/property/documentWrite</uri>
						<method>GET</method>
						<param>X-Frame-Options</param>
						<attack></attack>
						<evidence></evidence>
						<otherinfo></otherinfo>
					</instance>


					<instance>
						<uri>
							https://public-firing-range.appspot.com/dom/toxicdom/postMessage/complexMessageDocumentWriteEval</uri>
						<method>GET</method>
						<param>X-Frame-Options</param>
						<attack></attack>
						<evidence></evidence>
						<otherinfo></otherinfo>
					</instance>


					<instance>
						<uri>
							https://public-firing-range.appspot.com/dom/toxicdom/postMessage/documentWrite</uri>
						<method>GET</method>
						<param>X-Frame-Options</param>
						<attack></attack>
						<evidence></evidence>
						<otherinfo></otherinfo>
					</instance>


					<instance>
						<uri>https://public-firing-range.appspot.com/dom/toxicdom/postMessage/eval</uri>
						<method>GET</method>
						<param>X-Frame-Options</param>
						<attack></attack>
						<evidence></evidence>
						<otherinfo></otherinfo>
					</instance>


					<instance>
						<uri>
							https://public-firing-range.appspot.com/dom/toxicdom/postMessage/improperOriginValidationWithPartialStringComparison</uri>
						<method>GET</method>
						<param>X-Frame-Options</param>
						<attack></attack>
						<evidence></evidence>
						<otherinfo></otherinfo>
					</instance>


					<instance>
						<uri>
							https://public-firing-range.appspot.com/dom/toxicdom/postMessage/improperOriginValidationWithRegExp</uri>
						<method>GET</method>
						<param>X-Frame-Options</param>
						<attack></attack>
						<evidence></evidence>
						<otherinfo></otherinfo>
					</instance>


					<instance>
						<uri>
							https://public-firing-range.appspot.com/dom/toxicdom/postMessage/innerHtml</uri>
						<method>GET</method>
						<param>X-Frame-Options</param>
						<attack></attack>
						<evidence></evidence>
						<otherinfo></otherinfo>
					</instance>


					<instance>
						<uri>
							https://public-firing-range.appspot.com/dom/toxicdom/sessionStorage/array/eval</uri>
						<method>GET</method>
						<param>X-Frame-Options</param>
						<attack></attack>
						<evidence></evidence>
						<otherinfo></otherinfo>
					</instance>


					<instance>
						<uri>
							https://public-firing-range.appspot.com/dom/toxicdom/sessionStorage/function/documentWrite</uri>
						<method>GET</method>
						<param>X-Frame-Options</param>
						<attack></attack>
						<evidence></evidence>
						<otherinfo></otherinfo>
					</instance>


					<instance>
						<uri>
							https://public-firing-range.appspot.com/dom/toxicdom/sessionStorage/function/eval</uri>
						<method>GET</method>
						<param>X-Frame-Options</param>
						<attack></attack>
						<evidence></evidence>
						<otherinfo></otherinfo>
					</instance>


					<instance>
						<uri>
							https://public-firing-range.appspot.com/dom/toxicdom/sessionStorage/function/innerHtml</uri>
						<method>GET</method>
						<param>X-Frame-Options</param>
						<attack></attack>
						<evidence></evidence>
						<otherinfo></otherinfo>
					</instance>


					<instance>
						<uri>
							https://public-firing-range.appspot.com/dom/toxicdom/sessionStorage/property/documentWrite</uri>
						<method>GET</method>
						<param>X-Frame-Options</param>
						<attack></attack>
						<evidence></evidence>
						<otherinfo></otherinfo>
					</instance>


					<instance>
						<uri>
							https://public-firing-range.appspot.com/dom/toxicdom/window/name/documentWrite</uri>
						<method>GET</method>
						<param>X-Frame-Options</param>
						<attack></attack>
						<evidence></evidence>
						<otherinfo></otherinfo>
					</instance>


					<instance>
						<uri>https://public-firing-range.appspot.com/dom/toxicdom/window/name/eval</uri>
						<method>GET</method>
						<param>X-Frame-Options</param>
						<attack></attack>
						<evidence></evidence>
						<otherinfo></otherinfo>
					</instance>


					<instance>
						<uri>
							https://public-firing-range.appspot.com/dom/toxicdom/window/name/innerHtml</uri>
						<method>GET</method>
						<param>X-Frame-Options</param>
						<attack></attack>
						<evidence></evidence>
						<otherinfo></otherinfo>
					</instance>


					<instance>
						<uri>https://public-firing-range.appspot.com/escape/index.html</uri>
						<method>GET</method>
						<param>X-Frame-Options</param>
						<attack></attack>
						<evidence></evidence>
						<otherinfo></otherinfo>
					</instance>


					<instance>
						<uri>
							https://public-firing-range.appspot.com/escape/js/encodeURIComponent?q=a</uri>
						<method>GET</method>
						<param>X-Frame-Options</param>
						<attack></attack>
						<evidence></evidence>
						<otherinfo></otherinfo>
					</instance>


					<instance>
						<uri>https://public-firing-range.appspot.com/escape/js/escape?q=a</uri>
						<method>GET</method>
						<param>X-Frame-Options</param>
						<attack></attack>
						<evidence></evidence>
						<otherinfo></otherinfo>
					</instance>


					<instance>
						<uri>https://public-firing-range.appspot.com/escape/js/html_escape?q=a</uri>
						<method>GET</method>
						<param>X-Frame-Options</param>
						<attack></attack>
						<evidence></evidence>
						<otherinfo></otherinfo>
					</instance>


					<instance>
						<uri>
							https://public-firing-range.appspot.com/escape/serverside/encodeUrl/attribute_name?q=a</uri>
						<method>GET</method>
						<param>X-Frame-Options</param>
						<attack></attack>
						<evidence></evidence>
						<otherinfo></otherinfo>
					</instance>


					<instance>
						<uri>
							https://public-firing-range.appspot.com/escape/serverside/encodeUrl/attribute_quoted?q=a</uri>
						<method>GET</method>
						<param>X-Frame-Options</param>
						<attack></attack>
						<evidence></evidence>
						<otherinfo></otherinfo>
					</instance>


					<instance>
						<uri>
							https://public-firing-range.appspot.com/escape/serverside/encodeUrl/attribute_script?q=a</uri>
						<method>GET</method>
						<param>X-Frame-Options</param>
						<attack></attack>
						<evidence></evidence>
						<otherinfo></otherinfo>
					</instance>


					<instance>
						<uri>
							https://public-firing-range.appspot.com/escape/serverside/encodeUrl/attribute_singlequoted?q=a</uri>
						<method>GET</method>
						<param>X-Frame-Options</param>
						<attack></attack>
						<evidence></evidence>
						<otherinfo></otherinfo>
					</instance>


					<instance>
						<uri>
							https://public-firing-range.appspot.com/escape/serverside/encodeUrl/attribute_unquoted?q=a</uri>
						<method>GET</method>
						<param>X-Frame-Options</param>
						<attack></attack>
						<evidence></evidence>
						<otherinfo></otherinfo>
					</instance>


					<instance>
						<uri>
							https://public-firing-range.appspot.com/escape/serverside/encodeUrl/body?q=a</uri>
						<method>GET</method>
						<param>X-Frame-Options</param>
						<attack></attack>
						<evidence></evidence>
						<otherinfo></otherinfo>
					</instance>


					<instance>
						<uri>
							https://public-firing-range.appspot.com/escape/serverside/encodeUrl/body_comment?q=a</uri>
						<method>GET</method>
						<param>X-Frame-Options</param>
						<attack></attack>
						<evidence></evidence>
						<otherinfo></otherinfo>
					</instance>


					<instance>
						<uri>
							https://public-firing-range.appspot.com/escape/serverside/encodeUrl/css_import?q=a</uri>
						<method>GET</method>
						<param>X-Frame-Options</param>
						<attack></attack>
						<evidence></evidence>
						<otherinfo></otherinfo>
					</instance>


					<instance>
						<uri>
							https://public-firing-range.appspot.com/escape/serverside/encodeUrl/css_style?q=a</uri>
						<method>GET</method>
						<param>X-Frame-Options</param>
						<attack></attack>
						<evidence></evidence>
						<otherinfo></otherinfo>
					</instance>


					<instance>
						<uri>
							https://public-firing-range.appspot.com/escape/serverside/encodeUrl/css_style_font_value?q=a</uri>
						<method>GET</method>
						<param>X-Frame-Options</param>
						<attack></attack>
						<evidence></evidence>
						<otherinfo></otherinfo>
					</instance>


					<instance>
						<uri>
							https://public-firing-range.appspot.com/escape/serverside/encodeUrl/css_style_value?q=a</uri>
						<method>GET</method>
						<param>X-Frame-Options</param>
						<attack></attack>
						<evidence></evidence>
						<otherinfo></otherinfo>
					</instance>


					<instance>
						<uri>
							https://public-firing-range.appspot.com/escape/serverside/encodeUrl/head?q=a</uri>
						<method>GET</method>
						<param>X-Frame-Options</param>
						<attack></attack>
						<evidence></evidence>
						<otherinfo></otherinfo>
					</instance>


					<instance>
						<uri>
							https://public-firing-range.appspot.com/escape/serverside/encodeUrl/js_assignment?q=a</uri>
						<method>GET</method>
						<param>X-Frame-Options</param>
						<attack></attack>
						<evidence></evidence>
						<otherinfo></otherinfo>
					</instance>


					<instance>
						<uri>
							https://public-firing-range.appspot.com/escape/serverside/encodeUrl/js_comment?q=a</uri>
						<method>GET</method>
						<param>X-Frame-Options</param>
						<attack></attack>
						<evidence></evidence>
						<otherinfo></otherinfo>
					</instance>


					<instance>
						<uri>
							https://public-firing-range.appspot.com/escape/serverside/encodeUrl/js_eval?q=a</uri>
						<method>GET</method>
						<param>X-Frame-Options</param>
						<attack></attack>
						<evidence></evidence>
						<otherinfo></otherinfo>
					</instance>


					<instance>
						<uri>
							https://public-firing-range.appspot.com/escape/serverside/encodeUrl/js_quoted_string?q=a</uri>
						<method>GET</method>
						<param>X-Frame-Options</param>
						<attack></attack>
						<evidence></evidence>
						<otherinfo></otherinfo>
					</instance>


					<instance>
						<uri>
							https://public-firing-range.appspot.com/escape/serverside/encodeUrl/js_singlequoted_string?q=a</uri>
						<method>GET</method>
						<param>X-Frame-Options</param>
						<attack></attack>
						<evidence></evidence>
						<otherinfo></otherinfo>
					</instance>


					<instance>
						<uri>
							https://public-firing-range.appspot.com/escape/serverside/encodeUrl/js_slashquoted_string?q=a</uri>
						<method>GET</method>
						<param>X-Frame-Options</param>
						<attack></attack>
						<evidence></evidence>
						<otherinfo></otherinfo>
					</instance>


					<instance>
						<uri>
							https://public-firing-range.appspot.com/escape/serverside/encodeUrl/tagname?q=a</uri>
						<method>GET</method>
						<param>X-Frame-Options</param>
						<attack></attack>
						<evidence></evidence>
						<otherinfo></otherinfo>
					</instance>


					<instance>
						<uri>
							https://public-firing-range.appspot.com/escape/serverside/encodeUrl/textarea?q=a</uri>
						<method>GET</method>
						<param>X-Frame-Options</param>
						<attack></attack>
						<evidence></evidence>
						<otherinfo></otherinfo>
					</instance>


					<instance>
						<uri>
							https://public-firing-range.appspot.com/escape/serverside/escapeHtml/attribute_name?q=a</uri>
						<method>GET</method>
						<param>X-Frame-Options</param>
						<attack></attack>
						<evidence></evidence>
						<otherinfo></otherinfo>
					</instance>


					<instance>
						<uri>
							https://public-firing-range.appspot.com/escape/serverside/escapeHtml/attribute_quoted?q=a</uri>
						<method>GET</method>
						<param>X-Frame-Options</param>
						<attack></attack>
						<evidence></evidence>
						<otherinfo></otherinfo>
					</instance>


					<instance>
						<uri>
							https://public-firing-range.appspot.com/escape/serverside/escapeHtml/attribute_script?q=a</uri>
						<method>GET</method>
						<param>X-Frame-Options</param>
						<attack></attack>
						<evidence></evidence>
						<otherinfo></otherinfo>
					</instance>


					<instance>
						<uri>
							https://public-firing-range.appspot.com/escape/serverside/escapeHtml/attribute_singlequoted?q=a</uri>
						<method>GET</method>
						<param>X-Frame-Options</param>
						<attack></attack>
						<evidence></evidence>
						<otherinfo></otherinfo>
					</instance>


					<instance>
						<uri>
							https://public-firing-range.appspot.com/escape/serverside/escapeHtml/attribute_unquoted?q=a</uri>
						<method>GET</method>
						<param>X-Frame-Options</param>
						<attack></attack>
						<evidence></evidence>
						<otherinfo></otherinfo>
					</instance>


					<instance>
						<uri>
							https://public-firing-range.appspot.com/escape/serverside/escapeHtml/body?q=a</uri>
						<method>GET</method>
						<param>X-Frame-Options</param>
						<attack></attack>
						<evidence></evidence>
						<otherinfo></otherinfo>
					</instance>


					<instance>
						<uri>
							https://public-firing-range.appspot.com/escape/serverside/escapeHtml/body_comment?q=a</uri>
						<method>GET</method>
						<param>X-Frame-Options</param>
						<attack></attack>
						<evidence></evidence>
						<otherinfo></otherinfo>
					</instance>


					<instance>
						<uri>
							https://public-firing-range.appspot.com/escape/serverside/escapeHtml/css_import?q=a</uri>
						<method>GET</method>
						<param>X-Frame-Options</param>
						<attack></attack>
						<evidence></evidence>
						<otherinfo></otherinfo>
					</instance>


					<instance>
						<uri>
							https://public-firing-range.appspot.com/escape/serverside/escapeHtml/css_style?q=a</uri>
						<method>GET</method>
						<param>X-Frame-Options</param>
						<attack></attack>
						<evidence></evidence>
						<otherinfo></otherinfo>
					</instance>


					<instance>
						<uri>
							https://public-firing-range.appspot.com/escape/serverside/escapeHtml/css_style_font_value?q=a</uri>
						<method>GET</method>
						<param>X-Frame-Options</param>
						<attack></attack>
						<evidence></evidence>
						<otherinfo></otherinfo>
					</instance>


					<instance>
						<uri>
							https://public-firing-range.appspot.com/escape/serverside/escapeHtml/css_style_value?escape=HTML_ESCAPE&amp;q=a</uri>
						<method>GET</method>
						<param>X-Frame-Options</param>
						<attack></attack>
						<evidence></evidence>
						<otherinfo></otherinfo>
					</instance>


					<instance>
						<uri>
							https://public-firing-range.appspot.com/escape/serverside/escapeHtml/head?q=a</uri>
						<method>GET</method>
						<param>X-Frame-Options</param>
						<attack></attack>
						<evidence></evidence>
						<otherinfo></otherinfo>
					</instance>


					<instance>
						<uri>
							https://public-firing-range.appspot.com/escape/serverside/escapeHtml/js_assignment?q=a</uri>
						<method>GET</method>
						<param>X-Frame-Options</param>
						<attack></attack>
						<evidence></evidence>
						<otherinfo></otherinfo>
					</instance>


					<instance>
						<uri>
							https://public-firing-range.appspot.com/escape/serverside/escapeHtml/js_comment?q=a</uri>
						<method>GET</method>
						<param>X-Frame-Options</param>
						<attack></attack>
						<evidence></evidence>
						<otherinfo></otherinfo>
					</instance>


					<instance>
						<uri>
							https://public-firing-range.appspot.com/escape/serverside/escapeHtml/js_eval?q=a</uri>
						<method>GET</method>
						<param>X-Frame-Options</param>
						<attack></attack>
						<evidence></evidence>
						<otherinfo></otherinfo>
					</instance>


					<instance>
						<uri>
							https://public-firing-range.appspot.com/escape/serverside/escapeHtml/js_quoted_string?q=a</uri>
						<method>GET</method>
						<param>X-Frame-Options</param>
						<attack></attack>
						<evidence></evidence>
						<otherinfo></otherinfo>
					</instance>


					<instance>
						<uri>
							https://public-firing-range.appspot.com/escape/serverside/escapeHtml/js_singlequoted_string?q=a</uri>
						<method>GET</method>
						<param>X-Frame-Options</param>
						<attack></attack>
						<evidence></evidence>
						<otherinfo></otherinfo>
					</instance>


					<instance>
						<uri>
							https://public-firing-range.appspot.com/escape/serverside/escapeHtml/js_slashquoted_string?q=a</uri>
						<method>GET</method>
						<param>X-Frame-Options</param>
						<attack></attack>
						<evidence></evidence>
						<otherinfo></otherinfo>
					</instance>


					<instance>
						<uri>
							https://public-firing-range.appspot.com/escape/serverside/escapeHtml/tagname?q=a</uri>
						<method>GET</method>
						<param>X-Frame-Options</param>
						<attack></attack>
						<evidence></evidence>
						<otherinfo></otherinfo>
					</instance>


					<instance>
						<uri>
							https://public-firing-range.appspot.com/escape/serverside/escapeHtml/textarea?q=a</uri>
						<method>GET</method>
						<param>X-Frame-Options</param>
						<attack></attack>
						<evidence></evidence>
						<otherinfo></otherinfo>
					</instance>


					<instance>
						<uri>https://public-firing-range.appspot.com/flashinjection/index.html</uri>
						<method>GET</method>
						<param>X-Frame-Options</param>
						<attack></attack>
						<evidence></evidence>
						<otherinfo></otherinfo>
					</instance>


					<instance>
						<uri>https://public-firing-range.appspot.com/invalidframingconfig/index.html</uri>
						<method>GET</method>
						<param>X-Frame-Options</param>
						<attack></attack>
						<evidence></evidence>
						<otherinfo></otherinfo>
					</instance>


					<instance>
						<uri>https://public-firing-range.appspot.com/leakedcookie/index.html</uri>
						<method>GET</method>
						<param>X-Frame-Options</param>
						<attack></attack>
						<evidence></evidence>
						<otherinfo></otherinfo>
					</instance>


					<instance>
						<uri>https://public-firing-range.appspot.com/leakedcookie/leakedcookie</uri>
						<method>GET</method>
						<param>X-Frame-Options</param>
						<attack></attack>
						<evidence></evidence>
						<otherinfo></otherinfo>
					</instance>


					<instance>
						<uri>https://public-firing-range.appspot.com/leakedcookie/leakedinresource</uri>
						<method>GET</method>
						<param>X-Frame-Options</param>
						<attack></attack>
						<evidence></evidence>
						<otherinfo></otherinfo>
					</instance>


					<instance>
						<uri>https://public-firing-range.appspot.com/mixedcontent/index.html</uri>
						<method>GET</method>
						<param>X-Frame-Options</param>
						<attack></attack>
						<evidence></evidence>
						<otherinfo></otherinfo>
					</instance>


					<instance>
						<uri>https://public-firing-range.appspot.com/redirect/index.html</uri>
						<method>GET</method>
						<param>X-Frame-Options</param>
						<attack></attack>
						<evidence></evidence>
						<otherinfo></otherinfo>
					</instance>


					<instance>
						<uri>https://public-firing-range.appspot.com/redirect/meta?q=/</uri>
						<method>GET</method>
						<param>X-Frame-Options</param>
						<attack></attack>
						<evidence></evidence>
						<otherinfo></otherinfo>
					</instance>


					<instance>
						<uri>
							https://public-firing-range.appspot.com/reflected/escapedparameter/js_eventhandler_quoted/DOUBLE_QUOTED_ATTRIBUTE?q=a</uri>
						<method>GET</method>
						<param>X-Frame-Options</param>
						<attack></attack>
						<evidence></evidence>
						<otherinfo></otherinfo>
					</instance>


					<instance>
						<uri>
							https://public-firing-range.appspot.com/reflected/escapedparameter/js_eventhandler_singlequoted/SINGLE_QUOTED_ATTRIBUTE?q=a</uri>
						<method>GET</method>
						<param>X-Frame-Options</param>
						<attack></attack>
						<evidence></evidence>
						<otherinfo></otherinfo>
					</instance>


					<instance>
						<uri>
							https://public-firing-range.appspot.com/reflected/escapedparameter/js_eventhandler_unquoted/UNQUOTED_ATTRIBUTE?q=a</uri>
						<method>GET</method>
						<param>X-Frame-Options</param>
						<attack></attack>
						<evidence></evidence>
						<otherinfo></otherinfo>
					</instance>


					<instance>
						<uri>
							https://public-firing-range.appspot.com/reflected/filteredcharsets/attribute_unquoted/DoubleQuoteSinglequote?q=a</uri>
						<method>GET</method>
						<param>X-Frame-Options</param>
						<attack></attack>
						<evidence></evidence>
						<otherinfo></otherinfo>
					</instance>


					<instance>
						<uri>
							https://public-firing-range.appspot.com/reflected/filteredcharsets/body/SpaceDoubleQuoteSlashEquals?q=a</uri>
						<method>GET</method>
						<param>X-Frame-Options</param>
						<attack></attack>
						<evidence></evidence>
						<otherinfo></otherinfo>
					</instance>


					<instance>
						<uri>
							https://public-firing-range.appspot.com/reflected/filteredstrings/body/caseInsensitive/script?q=a</uri>
						<method>GET</method>
						<param>X-Frame-Options</param>
						<attack></attack>
						<evidence></evidence>
						<otherinfo></otherinfo>
					</instance>


					<instance>
						<uri>
							https://public-firing-range.appspot.com/reflected/filteredstrings/body/caseSensitive/script?q=a</uri>
						<method>GET</method>
						<param>X-Frame-Options</param>
						<attack></attack>
						<evidence></evidence>
						<otherinfo></otherinfo>
					</instance>


					<instance>
						<uri>https://public-firing-range.appspot.com/reflected/index.html</uri>
						<method>GET</method>
						<param>X-Frame-Options</param>
						<attack></attack>
						<evidence></evidence>
						<otherinfo></otherinfo>
					</instance>


					<instance>
						<uri>
							https://public-firing-range.appspot.com/reflected/parameter/attribute_name?q=a</uri>
						<method>GET</method>
						<param>X-Frame-Options</param>
						<attack></attack>
						<evidence></evidence>
						<otherinfo></otherinfo>
					</instance>


					<instance>
						<uri>
							https://public-firing-range.appspot.com/reflected/parameter/attribute_quoted?q=a</uri>
						<method>GET</method>
						<param>X-Frame-Options</param>
						<attack></attack>
						<evidence></evidence>
						<otherinfo></otherinfo>
					</instance>


					<instance>
						<uri>
							https://public-firing-range.appspot.com/reflected/parameter/attribute_script?q=a</uri>
						<method>GET</method>
						<param>X-Frame-Options</param>
						<attack></attack>
						<evidence></evidence>
						<otherinfo></otherinfo>
					</instance>


					<instance>
						<uri>
							https://public-firing-range.appspot.com/reflected/parameter/attribute_singlequoted?q=a</uri>
						<method>GET</method>
						<param>X-Frame-Options</param>
						<attack></attack>
						<evidence></evidence>
						<otherinfo></otherinfo>
					</instance>


					<instance>
						<uri>
							https://public-firing-range.appspot.com/reflected/parameter/attribute_unquoted?q=a</uri>
						<method>GET</method>
						<param>X-Frame-Options</param>
						<attack></attack>
						<evidence></evidence>
						<otherinfo></otherinfo>
					</instance>


					<instance>
						<uri>https://public-firing-range.appspot.com/reflected/parameter/body?q=a</uri>
						<method>GET</method>
						<param>X-Frame-Options</param>
						<attack></attack>
						<evidence></evidence>
						<otherinfo></otherinfo>
					</instance>


					<instance>
						<uri>
							https://public-firing-range.appspot.com/reflected/parameter/body_comment?q=a</uri>
						<method>GET</method>
						<param>X-Frame-Options</param>
						<attack></attack>
						<evidence></evidence>
						<otherinfo></otherinfo>
					</instance>


					<instance>
						<uri>
							https://public-firing-range.appspot.com/reflected/parameter/css_style?q=a</uri>
						<method>GET</method>
						<param>X-Frame-Options</param>
						<attack></attack>
						<evidence></evidence>
						<otherinfo></otherinfo>
					</instance>


					<instance>
						<uri>
							https://public-firing-range.appspot.com/reflected/parameter/css_style_font_value?q=a</uri>
						<method>GET</method>
						<param>X-Frame-Options</param>
						<attack></attack>
						<evidence></evidence>
						<otherinfo></otherinfo>
					</instance>


					<instance>
						<uri>
							https://public-firing-range.appspot.com/reflected/parameter/css_style_value?q=a</uri>
						<method>GET</method>
						<param>X-Frame-Options</param>
						<attack></attack>
						<evidence></evidence>
						<otherinfo></otherinfo>
					</instance>


					<instance>
						<uri>https://public-firing-range.appspot.com/reflected/parameter/form</uri>
						<method>GET</method>
						<param>X-Frame-Options</param>
						<attack></attack>
						<evidence></evidence>
						<otherinfo></otherinfo>
					</instance>


					<instance>
						<uri>https://public-firing-range.appspot.com/reflected/parameter/head?q=a</uri>
						<method>GET</method>
						<param>X-Frame-Options</param>
						<attack></attack>
						<evidence></evidence>
						<otherinfo></otherinfo>
					</instance>


					<instance>
						<uri>
							https://public-firing-range.appspot.com/reflected/parameter/iframe_attribute_value?q=a</uri>
						<method>GET</method>
						<param>X-Frame-Options</param>
						<attack></attack>
						<evidence></evidence>
						<otherinfo></otherinfo>
					</instance>


					<instance>
						<uri>
							https://public-firing-range.appspot.com/reflected/parameter/iframe_srcdoc?q=a</uri>
						<method>GET</method>
						<param>X-Frame-Options</param>
						<attack></attack>
						<evidence></evidence>
						<otherinfo></otherinfo>
					</instance>


					<instance>
						<uri>
							https://public-firing-range.appspot.com/reflected/parameter/js_assignment?q=a</uri>
						<method>GET</method>
						<param>X-Frame-Options</param>
						<attack></attack>
						<evidence></evidence>
						<otherinfo></otherinfo>
					</instance>


					<instance>
						<uri>
							https://public-firing-range.appspot.com/reflected/parameter/js_comment?q=a</uri>
						<method>GET</method>
						<param>X-Frame-Options</param>
						<attack></attack>
						<evidence></evidence>
						<otherinfo></otherinfo>
					</instance>


					<instance>
						<uri>https://public-firing-range.appspot.com/reflected/parameter/js_eval?q=a</uri>
						<method>GET</method>
						<param>X-Frame-Options</param>
						<attack></attack>
						<evidence></evidence>
						<otherinfo></otherinfo>
					</instance>


					<instance>
						<uri>
							https://public-firing-range.appspot.com/reflected/parameter/js_quoted_string?q=a</uri>
						<method>GET</method>
						<param>X-Frame-Options</param>
						<attack></attack>
						<evidence></evidence>
						<otherinfo></otherinfo>
					</instance>


					<instance>
						<uri>
							https://public-firing-range.appspot.com/reflected/parameter/js_singlequoted_string?q=a</uri>
						<method>GET</method>
						<param>X-Frame-Options</param>
						<attack></attack>
						<evidence></evidence>
						<otherinfo></otherinfo>
					</instance>


					<instance>
						<uri>
							https://public-firing-range.appspot.com/reflected/parameter/js_slashquoted_string?q=a</uri>
						<method>GET</method>
						<param>X-Frame-Options</param>
						<attack></attack>
						<evidence></evidence>
						<otherinfo></otherinfo>
					</instance>


					<instance>
						<uri>https://public-firing-range.appspot.com/reflected/parameter/json?q=a</uri>
						<method>GET</method>
						<param>X-Frame-Options</param>
						<attack></attack>
						<evidence></evidence>
						<otherinfo></otherinfo>
					</instance>


					<instance>
						<uri>
							https://public-firing-range.appspot.com/reflected/parameter/noscript?q=a</uri>
						<method>GET</method>
						<param>X-Frame-Options</param>
						<attack></attack>
						<evidence></evidence>
						<otherinfo></otherinfo>
					</instance>


					<instance>
						<uri>
							https://public-firing-range.appspot.com/reflected/parameter/style_attribute_value?q=a</uri>
						<method>GET</method>
						<param>X-Frame-Options</param>
						<attack></attack>
						<evidence></evidence>
						<otherinfo></otherinfo>
					</instance>


					<instance>
						<uri>https://public-firing-range.appspot.com/reflected/parameter/tagname?q=a</uri>
						<method>GET</method>
						<param>X-Frame-Options</param>
						<attack></attack>
						<evidence></evidence>
						<otherinfo></otherinfo>
					</instance>


					<instance>
						<uri>
							https://public-firing-range.appspot.com/reflected/parameter/textarea?q=a</uri>
						<method>GET</method>
						<param>X-Frame-Options</param>
						<attack></attack>
						<evidence></evidence>
						<otherinfo></otherinfo>
					</instance>


					<instance>
						<uri>
							https://public-firing-range.appspot.com/reflected/parameter/textarea_attribute_value?q=a</uri>
						<method>GET</method>
						<param>X-Frame-Options</param>
						<attack></attack>
						<evidence></evidence>
						<otherinfo></otherinfo>
					</instance>


					<instance>
						<uri>https://public-firing-range.appspot.com/reflected/parameter/title?q=a</uri>
						<method>GET</method>
						<param>X-Frame-Options</param>
						<attack></attack>
						<evidence></evidence>
						<otherinfo></otherinfo>
					</instance>


					<instance>
						<uri>https://public-firing-range.appspot.com/reflected/url/css_import?q=a</uri>
						<method>GET</method>
						<param>X-Frame-Options</param>
						<attack></attack>
						<evidence></evidence>
						<otherinfo></otherinfo>
					</instance>


					<instance>
						<uri>https://public-firing-range.appspot.com/reflected/url/href?q=a</uri>
						<method>GET</method>
						<param>X-Frame-Options</param>
						<attack></attack>
						<evidence></evidence>
						<otherinfo></otherinfo>
					</instance>


					<instance>
						<uri>https://public-firing-range.appspot.com/reflected/url/object_data?q=a</uri>
						<method>GET</method>
						<param>X-Frame-Options</param>
						<attack></attack>
						<evidence></evidence>
						<otherinfo></otherinfo>
					</instance>


					<instance>
						<uri>https://public-firing-range.appspot.com/reflected/url/object_param?q=a</uri>
						<method>GET</method>
						<param>X-Frame-Options</param>
						<attack></attack>
						<evidence></evidence>
						<otherinfo></otherinfo>
					</instance>


					<instance>
						<uri>https://public-firing-range.appspot.com/reflected/url/script_src?q=a</uri>
						<method>GET</method>
						<param>X-Frame-Options</param>
						<attack></attack>
						<evidence></evidence>
						<otherinfo></otherinfo>
					</instance>


					<instance>
						<uri>https://public-firing-range.appspot.com/remoteinclude/index.html</uri>
						<method>GET</method>
						<param>X-Frame-Options</param>
						<attack></attack>
						<evidence></evidence>
						<otherinfo></otherinfo>
					</instance>


					<instance>
						<uri>https://public-firing-range.appspot.com/remoteinclude/object_hash.html</uri>
						<method>GET</method>
						<param>X-Frame-Options</param>
						<attack></attack>
						<evidence></evidence>
						<otherinfo></otherinfo>
					</instance>


					<instance>
						<uri>
							https://public-firing-range.appspot.com/remoteinclude/parameter/object/application_x-shockwave-flash?q=https://google.com</uri>
						<method>GET</method>
						<param>X-Frame-Options</param>
						<attack></attack>
						<evidence></evidence>
						<otherinfo></otherinfo>
					</instance>


					<instance>
						<uri>
							https://public-firing-range.appspot.com/remoteinclude/parameter/object_raw?q=https://google.com</uri>
						<method>GET</method>
						<param>X-Frame-Options</param>
						<attack></attack>
						<evidence></evidence>
						<otherinfo></otherinfo>
					</instance>


					<instance>
						<uri>
							https://public-firing-range.appspot.com/remoteinclude/parameter/script?q=http://127.0.0.2/localhost_import.js</uri>
						<method>GET</method>
						<param>X-Frame-Options</param>
						<attack></attack>
						<evidence></evidence>
						<otherinfo></otherinfo>
					</instance>


					<instance>
						<uri>
							https://public-firing-range.appspot.com/remoteinclude/parameter/script?q=http://192.168.1.2/private_network_import.js</uri>
						<method>GET</method>
						<param>X-Frame-Options</param>
						<attack></attack>
						<evidence></evidence>
						<otherinfo></otherinfo>
					</instance>


					<instance>
						<uri>
							https://public-firing-range.appspot.com/remoteinclude/parameter/script?q=http://g00gle.com/typosquatting_domain.js</uri>
						<method>GET</method>
						<param>X-Frame-Options</param>
						<attack></attack>
						<evidence></evidence>
						<otherinfo></otherinfo>
					</instance>


					<instance>
						<uri>
							https://public-firing-range.appspot.com/remoteinclude/parameter/script?q=https://google.com</uri>
						<method>GET</method>
						<param>X-Frame-Options</param>
						<attack></attack>
						<evidence></evidence>
						<otherinfo></otherinfo>
					</instance>


					<instance>
						<uri>https://public-firing-range.appspot.com/remoteinclude/script_hash.html</uri>
						<method>GET</method>
						<param>X-Frame-Options</param>
						<attack></attack>
						<evidence></evidence>
						<otherinfo></otherinfo>
					</instance>


					<instance>
						<uri>https://public-firing-range.appspot.com/reverseclickjacking/</uri>
						<method>GET</method>
						<param>X-Frame-Options</param>
						<attack></attack>
						<evidence></evidence>
						<otherinfo></otherinfo>
					</instance>


					<instance>
						<uri>
							https://public-firing-range.appspot.com/reverseclickjacking/multipage/ParameterInFragment/InCallback/WithoutXFO/</uri>
						<method>GET</method>
						<param>X-Frame-Options</param>
						<attack></attack>
						<evidence></evidence>
						<otherinfo></otherinfo>
					</instance>


					<instance>
						<uri>
							https://public-firing-range.appspot.com/reverseclickjacking/multipage/ParameterInFragment/OtherParameter/WithoutXFO/</uri>
						<method>GET</method>
						<param>X-Frame-Options</param>
						<attack></attack>
						<evidence></evidence>
						<otherinfo></otherinfo>
					</instance>


					<instance>
						<uri>
							https://public-firing-range.appspot.com/reverseclickjacking/multipage/ParameterInQuery/InCallback/WithoutXFO/?q=foo</uri>
						<method>GET</method>
						<param>X-Frame-Options</param>
						<attack></attack>
						<evidence></evidence>
						<otherinfo></otherinfo>
					</instance>


					<instance>
						<uri>
							https://public-firing-range.appspot.com/reverseclickjacking/multipage/ParameterInQuery/OtherParameter/WithoutXFO/?q=%26callback%3Dfoo%23</uri>
						<method>GET</method>
						<param>X-Frame-Options</param>
						<attack></attack>
						<evidence></evidence>
						<otherinfo></otherinfo>
					</instance>


					<instance>
						<uri>
							https://public-firing-range.appspot.com/reverseclickjacking/singlepage/ParameterInFragment/InCallback/</uri>
						<method>GET</method>
						<param>X-Frame-Options</param>
						<attack></attack>
						<evidence></evidence>
						<otherinfo></otherinfo>
					</instance>


					<instance>
						<uri>
							https://public-firing-range.appspot.com/reverseclickjacking/singlepage/ParameterInFragment/OtherParameter/</uri>
						<method>GET</method>
						<param>X-Frame-Options</param>
						<attack></attack>
						<evidence></evidence>
						<otherinfo></otherinfo>
					</instance>


					<instance>
						<uri>
							https://public-firing-range.appspot.com/reverseclickjacking/singlepage/ParameterInQuery/InCallback/?q=urc_button.click</uri>
						<method>GET</method>
						<param>X-Frame-Options</param>
						<attack></attack>
						<evidence></evidence>
						<otherinfo></otherinfo>
					</instance>


					<instance>
						<uri>
							https://public-firing-range.appspot.com/reverseclickjacking/singlepage/ParameterInQuery/OtherParameter/?q=%26callback%3Durc_button.click%23</uri>
						<method>GET</method>
						<param>X-Frame-Options</param>
						<attack></attack>
						<evidence></evidence>
						<otherinfo></otherinfo>
					</instance>


					<instance>
						<uri>https://public-firing-range.appspot.com/tags/index.html</uri>
						<method>GET</method>
						<param>X-Frame-Options</param>
						<attack></attack>
						<evidence></evidence>
						<otherinfo></otherinfo>
					</instance>


					<instance>
						<uri>https://public-firing-range.appspot.com/tags/multiline?q=a</uri>
						<method>GET</method>
						<param>X-Frame-Options</param>
						<attack></attack>
						<evidence></evidence>
						<otherinfo></otherinfo>
					</instance>


					<instance>
						<uri>https://public-firing-range.appspot.com/urldom/index.html</uri>
						<method>GET</method>
						<param>X-Frame-Options</param>
						<attack></attack>
						<evidence></evidence>
						<otherinfo></otherinfo>
					</instance>


					<instance>
						<uri>https://public-firing-range.appspot.com/urldom/location/hash/a.href</uri>
						<method>GET</method>
						<param>X-Frame-Options</param>
						<attack></attack>
						<evidence></evidence>
						<otherinfo></otherinfo>
					</instance>


					<instance>
						<uri>https://public-firing-range.appspot.com/urldom/location/hash/base.href</uri>
						<method>GET</method>
						<param>X-Frame-Options</param>
						<attack></attack>
						<evidence></evidence>
						<otherinfo></otherinfo>
					</instance>


					<instance>
						<uri>
							https://public-firing-range.appspot.com/urldom/location/hash/document.location</uri>
						<method>GET</method>
						<param>X-Frame-Options</param>
						<attack></attack>
						<evidence></evidence>
						<otherinfo></otherinfo>
					</instance>


					<instance>
						<uri>https://public-firing-range.appspot.com/urldom/location/hash/embed.src</uri>
						<method>GET</method>
						<param>X-Frame-Options</param>
						<attack></attack>
						<evidence></evidence>
						<otherinfo></otherinfo>
					</instance>


					<instance>
						<uri>https://public-firing-range.appspot.com/urldom/location/hash/fetch</uri>
						<method>GET</method>
						<param>X-Frame-Options</param>
						<attack></attack>
						<evidence></evidence>
						<otherinfo></otherinfo>
					</instance>


					<instance>
						<uri>
							https://public-firing-range.appspot.com/urldom/location/hash/form.action</uri>
						<method>GET</method>
						<param>X-Frame-Options</param>
						<attack></attack>
						<evidence></evidence>
						<otherinfo></otherinfo>
					</instance>


					<instance>
						<uri>https://public-firing-range.appspot.com/urldom/location/hash/iframe.src</uri>
						<method>GET</method>
						<param>X-Frame-Options</param>
						<attack></attack>
						<evidence></evidence>
						<otherinfo></otherinfo>
					</instance>


					<instance>
						<uri>
							https://public-firing-range.appspot.com/urldom/location/hash/input.formaction</uri>
						<method>GET</method>
						<param>X-Frame-Options</param>
						<attack></attack>
						<evidence></evidence>
						<otherinfo></otherinfo>
					</instance>


					<instance>
						<uri>https://public-firing-range.appspot.com/urldom/location/hash/link.href</uri>
						<method>GET</method>
						<param>X-Frame-Options</param>
						<attack></attack>
						<evidence></evidence>
						<otherinfo></otherinfo>
					</instance>


					<instance>
						<uri>
							https://public-firing-range.appspot.com/urldom/location/hash/object.data</uri>
						<method>GET</method>
						<param>X-Frame-Options</param>
						<attack></attack>
						<evidence></evidence>
						<otherinfo></otherinfo>
					</instance>


					<instance>
						<uri>
							https://public-firing-range.appspot.com/urldom/location/hash/param.code.value</uri>
						<method>GET</method>
						<param>X-Frame-Options</param>
						<attack></attack>
						<evidence></evidence>
						<otherinfo></otherinfo>
					</instance>


					<instance>
						<uri>
							https://public-firing-range.appspot.com/urldom/location/hash/param.movie.value</uri>
						<method>GET</method>
						<param>X-Frame-Options</param>
						<attack></attack>
						<evidence></evidence>
						<otherinfo></otherinfo>
					</instance>


					<instance>
						<uri>
							https://public-firing-range.appspot.com/urldom/location/hash/param.src.value</uri>
						<method>GET</method>
						<param>X-Frame-Options</param>
						<attack></attack>
						<evidence></evidence>
						<otherinfo></otherinfo>
					</instance>


					<instance>
						<uri>
							https://public-firing-range.appspot.com/urldom/location/hash/param.url.value</uri>
						<method>GET</method>
						<param>X-Frame-Options</param>
						<attack></attack>
						<evidence></evidence>
						<otherinfo></otherinfo>
					</instance>


					<instance>
						<uri>
							https://public-firing-range.appspot.com/urldom/location/hash/script.href</uri>
						<method>GET</method>
						<param>X-Frame-Options</param>
						<attack></attack>
						<evidence></evidence>
						<otherinfo></otherinfo>
					</instance>


					<instance>
						<uri>https://public-firing-range.appspot.com/urldom/location/hash/script.src</uri>
						<method>GET</method>
						<param>X-Frame-Options</param>
						<attack></attack>
						<evidence></evidence>
						<otherinfo></otherinfo>
					</instance>


					<instance>
						<uri>
							https://public-firing-range.appspot.com/urldom/location/hash/script.src.partial_domain</uri>
						<method>GET</method>
						<param>X-Frame-Options</param>
						<attack></attack>
						<evidence></evidence>
						<otherinfo></otherinfo>
					</instance>


					<instance>
						<uri>
							https://public-firing-range.appspot.com/urldom/location/hash/script.src.partial_path</uri>
						<method>GET</method>
						<param>X-Frame-Options</param>
						<attack></attack>
						<evidence></evidence>
						<otherinfo></otherinfo>
					</instance>


					<instance>
						<uri>
							https://public-firing-range.appspot.com/urldom/location/hash/script.src.partial_query</uri>
						<method>GET</method>
						<param>X-Frame-Options</param>
						<attack></attack>
						<evidence></evidence>
						<otherinfo></otherinfo>
					</instance>


					<instance>
						<uri>
							https://public-firing-range.appspot.com/urldom/location/hash/window.open</uri>
						<method>GET</method>
						<param>X-Frame-Options</param>
						<attack></attack>
						<evidence></evidence>
						<otherinfo></otherinfo>
					</instance>


					<instance>
						<uri>https://public-firing-range.appspot.com/urldom/location/hash/xhr.open</uri>
						<method>GET</method>
						<param>X-Frame-Options</param>
						<attack></attack>
						<evidence></evidence>
						<otherinfo></otherinfo>
					</instance>


					<instance>
						<uri>
							https://public-firing-range.appspot.com/urldom/location/search/area.href?//example.org</uri>
						<method>GET</method>
						<param>X-Frame-Options</param>
						<attack></attack>
						<evidence></evidence>
						<otherinfo></otherinfo>
					</instance>


					<instance>
						<uri>
							https://public-firing-range.appspot.com/urldom/location/search/button.formaction?//example.org</uri>
						<method>GET</method>
						<param>X-Frame-Options</param>
						<attack></attack>
						<evidence></evidence>
						<otherinfo></otherinfo>
					</instance>


					<instance>
						<uri>
							https://public-firing-range.appspot.com/urldom/location/search/frame.src?//example.org</uri>
						<method>GET</method>
						<param>X-Frame-Options</param>
						<attack></attack>
						<evidence></evidence>
						<otherinfo></otherinfo>
					</instance>


					<instance>
						<uri>
							https://public-firing-range.appspot.com/urldom/location/search/location.assign?//example.org</uri>
						<method>GET</method>
						<param>X-Frame-Options</param>
						<attack></attack>
						<evidence></evidence>
						<otherinfo></otherinfo>
					</instance>


					<instance>
						<uri>
							https://public-firing-range.appspot.com/urldom/location/search/svg.a?//example.org</uri>
						<method>GET</method>
						<param>X-Frame-Options</param>
						<attack></attack>
						<evidence></evidence>
						<otherinfo></otherinfo>
					</instance>


					<instance>
						<uri>https://public-firing-range.appspot.com/vulnerablelibraries/index.html</uri>
						<method>GET</method>
						<param>X-Frame-Options</param>
						<attack></attack>
						<evidence></evidence>
						<otherinfo></otherinfo>
					</instance>


					<instance>
						<uri>https://public-firing-range.appspot.com/vulnerablelibraries/jquery.html</uri>
						<method>GET</method>
						<param>X-Frame-Options</param>
						<attack></attack>
						<evidence></evidence>
						<otherinfo></otherinfo>
					</instance>


					<instance>
						<uri>
							https://public-firing-range.appspot.com/angular/angular_body_raw_post/1.6.0</uri>
						<method>POST</method>
						<param>X-Frame-Options</param>
						<attack></attack>
						<evidence></evidence>
						<otherinfo></otherinfo>
					</instance>


					<instance>
						<uri>https://public-firing-range.appspot.com/reflected/parameter/form</uri>
						<method>POST</method>
						<param>X-Frame-Options</param>
						<attack></attack>
						<evidence></evidence>
						<otherinfo></otherinfo>
					</instance>

				</instances>
				<count>246</count>
				<solution>&lt;p&gt;Modern Web browsers support the Content-Security-Policy and
					X-Frame-Options HTTP headers. Ensure one of them is set on all web pages
					returned by your site/app.&lt;/p&gt;&lt;p&gt;If you expect the page to be framed
					only by pages on your server (e.g. it&apos;s part of a FRAMESET) then
					you&apos;ll want to use SAMEORIGIN, otherwise if you never expect the page to be
					framed, you should use DENY. Alternatively consider implementing Content
					Security Policy&apos;s &quot;frame-ancestors&quot; directive.&lt;/p&gt;</solution>
				<otherinfo></otherinfo>
				<reference>
					&lt;p&gt;https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/X-Frame-Options&lt;/p&gt;</reference>
				<cweid>1021</cweid>
				<wascid>15</wascid>
				<sourceid>6</sourceid>
			</alertitem>


			<alertitem>
				<pluginid>10040</pluginid>
				<alertRef>10040</alertRef>
				<alert>Secure Pages Include Mixed Content (Including Scripts)</alert>
				<name>Secure Pages Include Mixed Content (Including Scripts)</name>
				<riskcode>2</riskcode>
				<confidence>2</confidence>
				<riskdesc>Medium (Medium)</riskdesc>
				<confidencedesc>Medium</confidencedesc>
				<desc>&lt;p&gt;The page includes mixed content, that is content accessed via HTTP
					instead of HTTPS.&lt;/p&gt;</desc>
				<instances>

					<instance>
						<uri>
							https://public-firing-range.appspot.com/escape/serverside/encodeUrl/attribute_script?q=a</uri>
						<method>GET</method>
						<param></param>
						<attack></attack>
						<evidence>http://irrelevant.google.com?a</evidence>
						<otherinfo>tag=script src=http://irrelevant.google.com?a
</otherinfo>
					</instance>


					<instance>
						<uri>
							https://public-firing-range.appspot.com/escape/serverside/escapeHtml/attribute_script?q=a</uri>
						<method>GET</method>
						<param></param>
						<attack></attack>
						<evidence>http://irrelevant.google.com?a</evidence>
						<otherinfo>tag=script src=http://irrelevant.google.com?a
</otherinfo>
					</instance>


					<instance>
						<uri>https://public-firing-range.appspot.com/mixedcontent/index.html</uri>
						<method>GET</method>
						<param></param>
						<attack></attack>
						<evidence>http://public-firing-range.appspot.com/mixedcontent/script.js</evidence>
						<otherinfo>tag=script
							src=http://public-firing-range.appspot.com/mixedcontent/script.js
</otherinfo>
					</instance>


					<instance>
						<uri>
							https://public-firing-range.appspot.com/reflected/parameter/attribute_script?q=a</uri>
						<method>GET</method>
						<param></param>
						<attack></attack>
						<evidence>http://irrelevant.google.com/a</evidence>
						<otherinfo>tag=script src=http://irrelevant.google.com/a
</otherinfo>
					</instance>


					<instance>
						<uri>
							https://public-firing-range.appspot.com/remoteinclude/parameter/script?q=http://127.0.0.2/localhost_import.js</uri>
						<method>GET</method>
						<param></param>
						<attack></attack>
						<evidence>http://127.0.0.2/localhost_import.js</evidence>
						<otherinfo>tag=script src=http://127.0.0.2/localhost_import.js
</otherinfo>
					</instance>


					<instance>
						<uri>
							https://public-firing-range.appspot.com/remoteinclude/parameter/script?q=http://192.168.1.2/private_network_import.js</uri>
						<method>GET</method>
						<param></param>
						<attack></attack>
						<evidence>http://192.168.1.2/private_network_import.js</evidence>
						<otherinfo>tag=script src=http://192.168.1.2/private_network_import.js
</otherinfo>
					</instance>


					<instance>
						<uri>
							https://public-firing-range.appspot.com/remoteinclude/parameter/script?q=http://g00gle.com/typosquatting_domain.js</uri>
						<method>GET</method>
						<param></param>
						<attack></attack>
						<evidence>http://g00gle.com/typosquatting_domain.js</evidence>
						<otherinfo>tag=script src=http://g00gle.com/typosquatting_domain.js
</otherinfo>
					</instance>

				</instances>
				<count>7</count>
				<solution>&lt;p&gt;A page that is available over SSL/TLS must be comprised
					completely of content which is transmitted over SSL/TLS.&lt;/p&gt;&lt;p&gt;The
					page must not contain any content that is transmitted over unencrypted
					HTTP.&lt;/p&gt;&lt;p&gt; This includes content from third party sites.&lt;/p&gt;</solution>
				<otherinfo>&lt;p&gt;tag=script
					src=http://irrelevant.google.com?a&lt;/p&gt;&lt;p&gt;&lt;/p&gt;</otherinfo>
				<reference>
					&lt;p&gt;https://cheatsheetseries.owasp.org/cheatsheets/Transport_Layer_Protection_Cheat_Sheet.html&lt;/p&gt;</reference>
				<cweid>311</cweid>
				<wascid>4</wascid>
				<sourceid>650</sourceid>
			</alertitem>


			<alertitem>
				<pluginid>10020</pluginid>
				<alertRef>10020-4</alertRef>
				<alert>X-Frame-Options Setting Malformed</alert>
				<name>X-Frame-Options Setting Malformed</name>
				<riskcode>2</riskcode>
				<confidence>2</confidence>
				<riskdesc>Medium (Medium)</riskdesc>
				<confidencedesc>Medium</confidencedesc>
				<desc>&lt;p&gt;An X-Frame-Options header was present in the response but the value
					was not correctly set.&lt;/p&gt;</desc>
				<instances>

					<instance>
						<uri>
							https://public-firing-range.appspot.com/invalidframingconfig/xfoallowfromnoframeancestors</uri>
						<method>GET</method>
						<param>X-Frame-Options</param>
						<attack></attack>
						<evidence>ALLOW-FROM https://example.com</evidence>
						<otherinfo></otherinfo>
					</instance>

				</instances>
				<count>1</count>
				<solution>&lt;p&gt;Ensure a valid setting is used on all web pages returned by your
					site (if you expect the page to be framed only by pages on your server (e.g.
					it&apos;s part of a FRAMESET) then you&apos;ll want to use SAMEORIGIN, otherwise
					if you never expect the page to be framed, you should use DENY. Alternatively
					consider implementing Content Security Policy&apos;s &quot;frame-ancestors&quot;
					directive.&lt;/p&gt;</solution>
				<otherinfo></otherinfo>
				<reference>&lt;p&gt;https://tools.ietf.org/html/rfc7034#section-2.1&lt;/p&gt;</reference>
				<cweid>1021</cweid>
				<wascid>15</wascid>
				<sourceid>677</sourceid>
			</alertitem>


			<alertitem>
				<pluginid>90022</pluginid>
				<alertRef>90022</alertRef>
				<alert>Application Error Disclosure</alert>
				<name>Application Error Disclosure</name>
				<riskcode>1</riskcode>
				<confidence>2</confidence>
				<riskdesc>Low (Medium)</riskdesc>
				<confidencedesc>Medium</confidencedesc>
				<desc>&lt;p&gt;This page contains an error/warning message that may disclose
					sensitive information like the location of the file that produced the unhandled
					exception. This information can be used to launch further attacks against the
					web application. The alert could be a false positive if the error message is
					found inside a documentation page.&lt;/p&gt;</desc>
				<instances>

					<instance>
						<uri>
							https://public-firing-range.appspot.com/reflected/parameter/body/500?q=a</uri>
						<method>GET</method>
						<param></param>
						<attack></attack>
						<evidence>HTTP/1.1 500 Internal Server Error</evidence>
						<otherinfo></otherinfo>
					</instance>


					<instance>
						<uri>https://public-firing-range.appspot.com/reflected/url/a</uri>
						<method>GET</method>
						<param></param>
						<attack></attack>
						<evidence>HTTP/1.1 500 Internal Server Error</evidence>
						<otherinfo></otherinfo>
					</instance>

				</instances>
				<count>2</count>
				<solution>&lt;p&gt;Review the source code of this page. Implement custom error
					pages. Consider implementing a mechanism to provide a unique error
					reference/identifier to the client (browser) while logging the details on the
					server side and not exposing them to the user.&lt;/p&gt;</solution>
				<otherinfo></otherinfo>
				<reference></reference>
				<cweid>200</cweid>
				<wascid>13</wascid>
				<sourceid>469</sourceid>
			</alertitem>


			<alertitem>
				<pluginid>10011</pluginid>
				<alertRef>10011</alertRef>
				<alert>Cookie Without Secure Flag</alert>
				<name>Cookie Without Secure Flag</name>
				<riskcode>1</riskcode>
				<confidence>2</confidence>
				<riskdesc>Low (Medium)</riskdesc>
				<confidencedesc>Medium</confidencedesc>
				<desc>&lt;p&gt;A cookie has been set without the secure flag, which means that the
					cookie can be accessed via unencrypted connections.&lt;/p&gt;</desc>
				<instances>

					<instance>
						<uri>https://public-firing-range.appspot.com/leakedcookie/leakedcookie</uri>
						<method>GET</method>
						<param>my_secret_cookie</param>
						<attack></attack>
						<evidence>Set-Cookie: my_secret_cookie</evidence>
						<otherinfo></otherinfo>
					</instance>


					<instance>
						<uri>https://public-firing-range.appspot.com/leakedcookie/leakedinresource</uri>
						<method>GET</method>
						<param>my_secret_cookie</param>
						<attack></attack>
						<evidence>Set-Cookie: my_secret_cookie</evidence>
						<otherinfo></otherinfo>
					</instance>

				</instances>
				<count>2</count>
				<solution>&lt;p&gt;Whenever a cookie contains sensitive information or is a session
					token, then it should always be passed using an encrypted channel. Ensure that
					the secure flag is set for cookies containing such sensitive
					information.&lt;/p&gt;</solution>
				<otherinfo></otherinfo>
				<reference>
					&lt;p&gt;https://owasp.org/www-project-web-security-testing-guide/v41/4-Web_Application_Security_Testing/06-Session_Management_Testing/02-Testing_for_Cookies_Attributes.html&lt;/p&gt;</reference>
				<cweid>614</cweid>
				<wascid>13</wascid>
				<sourceid>646</sourceid>
			</alertitem>


			<alertitem>
				<pluginid>10054</pluginid>
				<alertRef>10054</alertRef>
				<alert>Cookie without SameSite Attribute</alert>
				<name>Cookie without SameSite Attribute</name>
				<riskcode>1</riskcode>
				<confidence>2</confidence>
				<riskdesc>Low (Medium)</riskdesc>
				<confidencedesc>Medium</confidencedesc>
				<desc>&lt;p&gt;A cookie has been set without the SameSite attribute, which means
					that the cookie can be sent as a result of a &apos;cross-site&apos; request. The
					SameSite attribute is an effective counter measure to cross-site request
					forgery, cross-site script inclusion, and timing attacks.&lt;/p&gt;</desc>
				<instances>

					<instance>
						<uri>https://public-firing-range.appspot.com/leakedcookie/leakedcookie</uri>
						<method>GET</method>
						<param>my_secret_cookie</param>
						<attack></attack>
						<evidence>Set-Cookie: my_secret_cookie</evidence>
						<otherinfo></otherinfo>
					</instance>


					<instance>
						<uri>https://public-firing-range.appspot.com/leakedcookie/leakedinresource</uri>
						<method>GET</method>
						<param>my_secret_cookie</param>
						<attack></attack>
						<evidence>Set-Cookie: my_secret_cookie</evidence>
						<otherinfo></otherinfo>
					</instance>

				</instances>
				<count>2</count>
				<solution>&lt;p&gt;Ensure that the SameSite attribute is set to either
					&apos;lax&apos; or ideally &apos;strict&apos; for all cookies.&lt;/p&gt;</solution>
				<otherinfo></otherinfo>
				<reference>
					&lt;p&gt;https://tools.ietf.org/html/draft-ietf-httpbis-cookie-same-site&lt;/p&gt;</reference>
				<cweid>1275</cweid>
				<wascid>13</wascid>
				<sourceid>646</sourceid>
			</alertitem>


			<alertitem>
				<pluginid>10017</pluginid>
				<alertRef>10017</alertRef>
				<alert>Cross-Domain JavaScript Source File Inclusion</alert>
				<name>Cross-Domain JavaScript Source File Inclusion</name>
				<riskcode>1</riskcode>
				<confidence>2</confidence>
				<riskdesc>Low (Medium)</riskdesc>
				<confidencedesc>Medium</confidencedesc>
				<desc>&lt;p&gt;The page includes one or more script files from a third-party
					domain.&lt;/p&gt;</desc>
				<instances>

					<instance>
						<uri>
							https://public-firing-range.appspot.com/angular/angular_body/1.1.5?q=test</uri>
						<method>GET</method>
						<param>//ajax.googleapis.com/ajax/libs/angularjs/1.1.5/angular.js</param>
						<attack></attack>
						<evidence>
							&lt;script
							src=&quot;//ajax.googleapis.com/ajax/libs/angularjs/1.1.5/angular.js&quot;&gt;&lt;/script&gt;</evidence>
						<otherinfo></otherinfo>
					</instance>


					<instance>
						<uri>
							https://public-firing-range.appspot.com/angular/angular_body/1.2.0?q=test</uri>
						<method>GET</method>
						<param>//ajax.googleapis.com/ajax/libs/angularjs/1.2.0/angular.js</param>
						<attack></attack>
						<evidence>
							&lt;script
							src=&quot;//ajax.googleapis.com/ajax/libs/angularjs/1.2.0/angular.js&quot;&gt;&lt;/script&gt;</evidence>
						<otherinfo></otherinfo>
					</instance>


					<instance>
						<uri>
							https://public-firing-range.appspot.com/angular/angular_body/1.2.18?q=test</uri>
						<method>GET</method>
						<param>//ajax.googleapis.com/ajax/libs/angularjs/1.2.18/angular.js</param>
						<attack></attack>
						<evidence>
							&lt;script
							src=&quot;//ajax.googleapis.com/ajax/libs/angularjs/1.2.18/angular.js&quot;&gt;&lt;/script&gt;</evidence>
						<otherinfo></otherinfo>
					</instance>


					<instance>
						<uri>
							https://public-firing-range.appspot.com/angular/angular_body/1.2.19?q=test</uri>
						<method>GET</method>
						<param>//ajax.googleapis.com/ajax/libs/angularjs/1.2.19/angular.js</param>
						<attack></attack>
						<evidence>
							&lt;script
							src=&quot;//ajax.googleapis.com/ajax/libs/angularjs/1.2.19/angular.js&quot;&gt;&lt;/script&gt;</evidence>
						<otherinfo></otherinfo>
					</instance>


					<instance>
						<uri>
							https://public-firing-range.appspot.com/angular/angular_body/1.2.24?q=test</uri>
						<method>GET</method>
						<param>//ajax.googleapis.com/ajax/libs/angularjs/1.2.24/angular.js</param>
						<attack></attack>
						<evidence>
							&lt;script
							src=&quot;//ajax.googleapis.com/ajax/libs/angularjs/1.2.24/angular.js&quot;&gt;&lt;/script&gt;</evidence>
						<otherinfo></otherinfo>
					</instance>


					<instance>
						<uri>
							https://public-firing-range.appspot.com/angular/angular_body/1.4.0?q=test</uri>
						<method>GET</method>
						<param>//ajax.googleapis.com/ajax/libs/angularjs/1.4.0/angular.js</param>
						<attack></attack>
						<evidence>
							&lt;script
							src=&quot;//ajax.googleapis.com/ajax/libs/angularjs/1.4.0/angular.js&quot;&gt;&lt;/script&gt;</evidence>
						<otherinfo></otherinfo>
					</instance>


					<instance>
						<uri>
							https://public-firing-range.appspot.com/angular/angular_body/1.6.0?q=test</uri>
						<method>GET</method>
						<param>//ajax.googleapis.com/ajax/libs/angularjs/1.6.0/angular.js</param>
						<attack></attack>
						<evidence>
							&lt;script
							src=&quot;//ajax.googleapis.com/ajax/libs/angularjs/1.6.0/angular.js&quot;&gt;&lt;/script&gt;</evidence>
						<otherinfo></otherinfo>
					</instance>


					<instance>
						<uri>
							https://public-firing-range.appspot.com/angular/angular_body_alt_symbols/1.4.0?q=test</uri>
						<method>GET</method>
						<param>//ajax.googleapis.com/ajax/libs/angularjs/1.4.0/angular.js</param>
						<attack></attack>
						<evidence>
							&lt;script
							src=&quot;//ajax.googleapis.com/ajax/libs/angularjs/1.4.0/angular.js&quot;&gt;&lt;/script&gt;</evidence>
						<otherinfo></otherinfo>
					</instance>


					<instance>
						<uri>
							https://public-firing-range.appspot.com/angular/angular_body_alt_symbols_raw/1.6.0?q=test</uri>
						<method>GET</method>
						<param>//ajax.googleapis.com/ajax/libs/angularjs/1.6.0/angular.js</param>
						<attack></attack>
						<evidence>
							&lt;script
							src=&quot;//ajax.googleapis.com/ajax/libs/angularjs/1.6.0/angular.js&quot;&gt;&lt;/script&gt;</evidence>
						<otherinfo></otherinfo>
					</instance>


					<instance>
						<uri>
							https://public-firing-range.appspot.com/angular/angular_body_attribute_ng/1.4.0?q=test</uri>
						<method>GET</method>
						<param>//ajax.googleapis.com/ajax/libs/angularjs/1.4.0/angular.js</param>
						<attack></attack>
						<evidence>
							&lt;script
							src=&quot;//ajax.googleapis.com/ajax/libs/angularjs/1.4.0/angular.js&quot;&gt;&lt;/script&gt;</evidence>
						<otherinfo></otherinfo>
					</instance>


					<instance>
						<uri>
							https://public-firing-range.appspot.com/angular/angular_body_attribute_non_ng/1.4.0?q=test</uri>
						<method>GET</method>
						<param>//ajax.googleapis.com/ajax/libs/angularjs/1.4.0/angular.js</param>
						<attack></attack>
						<evidence>
							&lt;script
							src=&quot;//ajax.googleapis.com/ajax/libs/angularjs/1.4.0/angular.js&quot;&gt;&lt;/script&gt;</evidence>
						<otherinfo></otherinfo>
					</instance>


					<instance>
						<uri>
							https://public-firing-range.appspot.com/angular/angular_body_attribute_non_ng_raw/1.4.0?q=test</uri>
						<method>GET</method>
						<param>//ajax.googleapis.com/ajax/libs/angularjs/1.4.0/angular.js</param>
						<attack></attack>
						<evidence>
							&lt;script
							src=&quot;//ajax.googleapis.com/ajax/libs/angularjs/1.4.0/angular.js&quot;&gt;&lt;/script&gt;</evidence>
						<otherinfo></otherinfo>
					</instance>


					<instance>
						<uri>
							https://public-firing-range.appspot.com/angular/angular_body_raw/1.4.0?q=test</uri>
						<method>GET</method>
						<param>//ajax.googleapis.com/ajax/libs/angularjs/1.4.0/angular.js</param>
						<attack></attack>
						<evidence>
							&lt;script
							src=&quot;//ajax.googleapis.com/ajax/libs/angularjs/1.4.0/angular.js&quot;&gt;&lt;/script&gt;</evidence>
						<otherinfo></otherinfo>
					</instance>


					<instance>
						<uri>
							https://public-firing-range.appspot.com/angular/angular_body_raw_escaped/1.4.0?q=test</uri>
						<method>GET</method>
						<param>//ajax.googleapis.com/ajax/libs/angularjs/1.4.0/angular.js</param>
						<attack></attack>
						<evidence>
							&lt;script
							src=&quot;//ajax.googleapis.com/ajax/libs/angularjs/1.4.0/angular.js&quot;&gt;&lt;/script&gt;</evidence>
						<otherinfo></otherinfo>
					</instance>


					<instance>
						<uri>
							https://public-firing-range.appspot.com/angular/angular_body_raw_escaped_alt_symbols/1.4.0?q=test</uri>
						<method>GET</method>
						<param>//ajax.googleapis.com/ajax/libs/angularjs/1.4.0/angular.js</param>
						<attack></attack>
						<evidence>
							&lt;script
							src=&quot;//ajax.googleapis.com/ajax/libs/angularjs/1.4.0/angular.js&quot;&gt;&lt;/script&gt;</evidence>
						<otherinfo></otherinfo>
					</instance>


					<instance>
						<uri>
							https://public-firing-range.appspot.com/angular/angular_body_raw_post/1.6.0</uri>
						<method>GET</method>
						<param>//ajax.googleapis.com/ajax/libs/angularjs/1.6.0/angular.js</param>
						<attack></attack>
						<evidence>
							&lt;script
							src=&quot;//ajax.googleapis.com/ajax/libs/angularjs/1.6.0/angular.js&quot;&gt;&lt;/script&gt;</evidence>
						<otherinfo></otherinfo>
					</instance>


					<instance>
						<uri>
							https://public-firing-range.appspot.com/angular/angular_cookie_parse/1.6.0</uri>
						<method>GET</method>
						<param>//ajax.googleapis.com/ajax/libs/angularjs/1.6.0/angular.js</param>
						<attack></attack>
						<evidence>
							&lt;script
							src=&quot;//ajax.googleapis.com/ajax/libs/angularjs/1.6.0/angular.js&quot;&gt;&lt;/script&gt;</evidence>
						<otherinfo></otherinfo>
					</instance>


					<instance>
						<uri>
							https://public-firing-range.appspot.com/angular/angular_form_parse/1.6.0</uri>
						<method>GET</method>
						<param>//ajax.googleapis.com/ajax/libs/angularjs/1.6.0/angular.js</param>
						<attack></attack>
						<evidence>
							&lt;script
							src=&quot;//ajax.googleapis.com/ajax/libs/angularjs/1.6.0/angular.js&quot;&gt;&lt;/script&gt;</evidence>
						<otherinfo></otherinfo>
					</instance>


					<instance>
						<uri>
							https://public-firing-range.appspot.com/angular/angular_post_message_parse/1.6.0</uri>
						<method>GET</method>
						<param>//ajax.googleapis.com/ajax/libs/angularjs/1.6.0/angular.js</param>
						<attack></attack>
						<evidence>
							&lt;script
							src=&quot;//ajax.googleapis.com/ajax/libs/angularjs/1.6.0/angular.js&quot;&gt;&lt;/script&gt;</evidence>
						<otherinfo></otherinfo>
					</instance>


					<instance>
						<uri>
							https://public-firing-range.appspot.com/angular/angular_storage_parse/1.6.0</uri>
						<method>GET</method>
						<param>//ajax.googleapis.com/ajax/libs/angularjs/1.6.0/angular.js</param>
						<attack></attack>
						<evidence>
							&lt;script
							src=&quot;//ajax.googleapis.com/ajax/libs/angularjs/1.6.0/angular.js&quot;&gt;&lt;/script&gt;</evidence>
						<otherinfo></otherinfo>
					</instance>


					<instance>
						<uri>
							https://public-firing-range.appspot.com/escape/serverside/encodeUrl/attribute_script?q=a</uri>
						<method>GET</method>
						<param>http://irrelevant.google.com?a</param>
						<attack></attack>
						<evidence>&lt;script src=&quot;http://irrelevant.google.com?a&quot;/&gt;</evidence>
						<otherinfo></otherinfo>
					</instance>


					<instance>
						<uri>
							https://public-firing-range.appspot.com/escape/serverside/escapeHtml/attribute_script?q=a</uri>
						<method>GET</method>
						<param>http://irrelevant.google.com?a</param>
						<attack></attack>
						<evidence>&lt;script src=&quot;http://irrelevant.google.com?a&quot;/&gt;</evidence>
						<otherinfo></otherinfo>
					</instance>


					<instance>
						<uri>
							https://public-firing-range.appspot.com/reflected/parameter/attribute_script?q=a</uri>
						<method>GET</method>
						<param>http://irrelevant.google.com/a</param>
						<attack></attack>
						<evidence>&lt;script src=&quot;http://irrelevant.google.com/a&quot;/&gt;</evidence>
						<otherinfo></otherinfo>
					</instance>


					<instance>
						<uri>
							https://public-firing-range.appspot.com/remoteinclude/parameter/script?q=http://127.0.0.2/localhost_import.js</uri>
						<method>GET</method>
						<param>http://127.0.0.2/localhost_import.js</param>
						<attack></attack>
						<evidence>&lt;script
							src=&quot;http://127.0.0.2/localhost_import.js&quot;&gt;&lt;/script&gt;</evidence>
						<otherinfo></otherinfo>
					</instance>


					<instance>
						<uri>
							https://public-firing-range.appspot.com/remoteinclude/parameter/script?q=http://192.168.1.2/private_network_import.js</uri>
						<method>GET</method>
						<param>http://192.168.1.2/private_network_import.js</param>
						<attack></attack>
						<evidence>
							&lt;script
							src=&quot;http://192.168.1.2/private_network_import.js&quot;&gt;&lt;/script&gt;</evidence>
						<otherinfo></otherinfo>
					</instance>


					<instance>
						<uri>
							https://public-firing-range.appspot.com/remoteinclude/parameter/script?q=http://g00gle.com/typosquatting_domain.js</uri>
						<method>GET</method>
						<param>http://g00gle.com/typosquatting_domain.js</param>
						<attack></attack>
						<evidence>
							&lt;script
							src=&quot;http://g00gle.com/typosquatting_domain.js&quot;&gt;&lt;/script&gt;</evidence>
						<otherinfo></otherinfo>
					</instance>


					<instance>
						<uri>
							https://public-firing-range.appspot.com/remoteinclude/parameter/script?q=https://google.com</uri>
						<method>GET</method>
						<param>https://google.com</param>
						<attack></attack>
						<evidence>&lt;script src=&quot;https://google.com&quot;&gt;&lt;/script&gt;</evidence>
						<otherinfo></otherinfo>
					</instance>


					<instance>
						<uri>https://public-firing-range.appspot.com/vulnerablelibraries/jquery.html</uri>
						<method>GET</method>
						<param>https://code.jquery.com/jquery-1.8.1.js</param>
						<attack></attack>
						<evidence>
							&lt;script
							src=&quot;https://code.jquery.com/jquery-1.8.1.js&quot;&gt;&lt;/script&gt;</evidence>
						<otherinfo></otherinfo>
					</instance>


					<instance>
						<uri>
							https://public-firing-range.appspot.com/angular/angular_body_raw_post/1.6.0</uri>
						<method>POST</method>
						<param>//ajax.googleapis.com/ajax/libs/angularjs/1.6.0/angular.js</param>
						<attack></attack>
						<evidence>
							&lt;script
							src=&quot;//ajax.googleapis.com/ajax/libs/angularjs/1.6.0/angular.js&quot;&gt;&lt;/script&gt;</evidence>
						<otherinfo></otherinfo>
					</instance>

				</instances>
				<count>29</count>
				<solution>&lt;p&gt;Ensure JavaScript source files are loaded from only trusted
					sources, and the sources can&apos;t be controlled by end users of the
					application.&lt;/p&gt;</solution>
				<otherinfo></otherinfo>
				<reference></reference>
				<cweid>829</cweid>
				<wascid>15</wascid>
				<sourceid>67</sourceid>
			</alertitem>


			<alertitem>
				<pluginid>2</pluginid>
				<alertRef>2</alertRef>
				<alert>Private IP Disclosure</alert>
				<name>Private IP Disclosure</name>
				<riskcode>1</riskcode>
				<confidence>2</confidence>
				<riskdesc>Low (Medium)</riskdesc>
				<confidencedesc>Medium</confidencedesc>
				<desc>&lt;p&gt;A private IP (such as 10.x.x.x, 172.x.x.x, 192.168.x.x) or an Amazon
					EC2 private hostname (for example, ip-10-0-56-78) has been found in the HTTP
					response body. This information might be helpful for further attacks targeting
					internal systems.&lt;/p&gt;</desc>
				<instances>

					<instance>
						<uri>https://public-firing-range.appspot.com/badscriptimport/index.html</uri>
						<method>GET</method>
						<param></param>
						<attack></attack>
						<evidence>192.168.1.2</evidence>
						<otherinfo>192.168.1.2
							192.168.1.2
</otherinfo>
					</instance>


					<instance>
						<uri>
							https://public-firing-range.appspot.com/remoteinclude/parameter/script?q=http://192.168.1.2/private_network_import.js</uri>
						<method>GET</method>
						<param></param>
						<attack></attack>
						<evidence>192.168.1.2</evidence>
						<otherinfo>192.168.1.2
</otherinfo>
					</instance>

				</instances>
				<count>2</count>
				<solution>&lt;p&gt;Remove the private IP address from the HTTP response body. For
					comments, use JSP/ASP/PHP comment instead of HTML/JavaScript comment which can
					be seen by client browsers.&lt;/p&gt;</solution>
				<otherinfo>
					&lt;p&gt;192.168.1.2&lt;/p&gt;&lt;p&gt;192.168.1.2&lt;/p&gt;&lt;p&gt;&lt;/p&gt;</otherinfo>
				<reference>&lt;p&gt;https://tools.ietf.org/html/rfc1918&lt;/p&gt;</reference>
				<cweid>200</cweid>
				<wascid>13</wascid>
				<sourceid>24</sourceid>
			</alertitem>


			<alertitem>
				<pluginid>10035</pluginid>
				<alertRef>10035</alertRef>
				<alert>Strict-Transport-Security Header Not Set</alert>
				<name>Strict-Transport-Security Header Not Set</name>
				<riskcode>1</riskcode>
				<confidence>3</confidence>
				<riskdesc>Low (High)</riskdesc>
				<confidencedesc>High</confidencedesc>
				<desc>&lt;p&gt;HTTP Strict Transport Security (HSTS) is a web security policy
					mechanism whereby a web server declares that complying user agents (such as a
					web browser) are to interact with it using only secure HTTPS connections (i.e.
					HTTP layered over TLS/SSL). HSTS is an IETF standards track protocol and is
					specified in RFC 6797.&lt;/p&gt;</desc>
				<instances>

					<instance>
						<uri>https://public-firing-range.appspot.com</uri>
						<method>GET</method>
						<param></param>
						<attack></attack>
						<evidence></evidence>
						<otherinfo></otherinfo>
					</instance>


					<instance>
						<uri>https://public-firing-range.appspot.com/</uri>
						<method>GET</method>
						<param></param>
						<attack></attack>
						<evidence></evidence>
						<otherinfo></otherinfo>
					</instance>


					<instance>
						<uri>https://public-firing-range.appspot.com/*</uri>
						<method>GET</method>
						<param></param>
						<attack></attack>
						<evidence></evidence>
						<otherinfo></otherinfo>
					</instance>


					<instance>
						<uri>https://public-firing-range.appspot.com/address/baseURI/documentwrite</uri>
						<method>GET</method>
						<param></param>
						<attack></attack>
						<evidence></evidence>
						<otherinfo></otherinfo>
					</instance>


					<instance>
						<uri>
							https://public-firing-range.appspot.com/address/documentURI/documentwrite</uri>
						<method>GET</method>
						<param></param>
						<attack></attack>
						<evidence></evidence>
						<otherinfo></otherinfo>
					</instance>


					<instance>
						<uri>https://public-firing-range.appspot.com/address/index.html</uri>
						<method>GET</method>
						<param></param>
						<attack></attack>
						<evidence></evidence>
						<otherinfo></otherinfo>
					</instance>


					<instance>
						<uri>https://public-firing-range.appspot.com/address/location.hash/assign</uri>
						<method>GET</method>
						<param></param>
						<attack></attack>
						<evidence></evidence>
						<otherinfo></otherinfo>
					</instance>


					<instance>
						<uri>
							https://public-firing-range.appspot.com/address/location.hash/documentwrite</uri>
						<method>GET</method>
						<param></param>
						<attack></attack>
						<evidence></evidence>
						<otherinfo></otherinfo>
					</instance>


					<instance>
						<uri>
							https://public-firing-range.appspot.com/address/location.hash/documentwriteln</uri>
						<method>GET</method>
						<param></param>
						<attack></attack>
						<evidence></evidence>
						<otherinfo></otherinfo>
					</instance>


					<instance>
						<uri>https://public-firing-range.appspot.com/address/location.hash/eval</uri>
						<method>GET</method>
						<param></param>
						<attack></attack>
						<evidence></evidence>
						<otherinfo></otherinfo>
					</instance>


					<instance>
						<uri>
							https://public-firing-range.appspot.com/address/location.hash/formaction</uri>
						<method>GET</method>
						<param></param>
						<attack></attack>
						<evidence></evidence>
						<otherinfo></otherinfo>
					</instance>


					<instance>
						<uri>https://public-firing-range.appspot.com/address/location.hash/function</uri>
						<method>GET</method>
						<param></param>
						<attack></attack>
						<evidence></evidence>
						<otherinfo></otherinfo>
					</instance>


					<instance>
						<uri>
							https://public-firing-range.appspot.com/address/location.hash/inlineevent</uri>
						<method>GET</method>
						<param></param>
						<attack></attack>
						<evidence></evidence>
						<otherinfo></otherinfo>
					</instance>


					<instance>
						<uri>https://public-firing-range.appspot.com/address/location.hash/innerHtml</uri>
						<method>GET</method>
						<param></param>
						<attack></attack>
						<evidence></evidence>
						<otherinfo></otherinfo>
					</instance>


					<instance>
						<uri>https://public-firing-range.appspot.com/address/location.hash/jshref</uri>
						<method>GET</method>
						<param></param>
						<attack></attack>
						<evidence></evidence>
						<otherinfo></otherinfo>
					</instance>


					<instance>
						<uri>
							https://public-firing-range.appspot.com/address/location.hash/onclickAddEventListener</uri>
						<method>GET</method>
						<param></param>
						<attack></attack>
						<evidence></evidence>
						<otherinfo></otherinfo>
					</instance>


					<instance>
						<uri>
							https://public-firing-range.appspot.com/address/location.hash/onclickSetAttribute</uri>
						<method>GET</method>
						<param></param>
						<attack></attack>
						<evidence></evidence>
						<otherinfo></otherinfo>
					</instance>


					<instance>
						<uri>
							https://public-firing-range.appspot.com/address/location.hash/rangeCreateContextualFragment</uri>
						<method>GET</method>
						<param></param>
						<attack></attack>
						<evidence></evidence>
						<otherinfo></otherinfo>
					</instance>


					<instance>
						<uri>https://public-firing-range.appspot.com/address/location.hash/replace</uri>
						<method>GET</method>
						<param></param>
						<attack></attack>
						<evidence></evidence>
						<otherinfo></otherinfo>
					</instance>


					<instance>
						<uri>
							https://public-firing-range.appspot.com/address/location.hash/setTimeout</uri>
						<method>GET</method>
						<param></param>
						<attack></attack>
						<evidence></evidence>
						<otherinfo></otherinfo>
					</instance>


					<instance>
						<uri>https://public-firing-range.appspot.com/address/location/assign</uri>
						<method>GET</method>
						<param></param>
						<attack></attack>
						<evidence></evidence>
						<otherinfo></otherinfo>
					</instance>


					<instance>
						<uri>https://public-firing-range.appspot.com/address/location/documentwrite</uri>
						<method>GET</method>
						<param></param>
						<attack></attack>
						<evidence></evidence>
						<otherinfo></otherinfo>
					</instance>


					<instance>
						<uri>
							https://public-firing-range.appspot.com/address/location/documentwriteln</uri>
						<method>GET</method>
						<param></param>
						<attack></attack>
						<evidence></evidence>
						<otherinfo></otherinfo>
					</instance>


					<instance>
						<uri>https://public-firing-range.appspot.com/address/location/eval</uri>
						<method>GET</method>
						<param></param>
						<attack></attack>
						<evidence></evidence>
						<otherinfo></otherinfo>
					</instance>


					<instance>
						<uri>https://public-firing-range.appspot.com/address/location/innerHtml</uri>
						<method>GET</method>
						<param></param>
						<attack></attack>
						<evidence></evidence>
						<otherinfo></otherinfo>
					</instance>


					<instance>
						<uri>
							https://public-firing-range.appspot.com/address/location/rangeCreateContextualFragment</uri>
						<method>GET</method>
						<param></param>
						<attack></attack>
						<evidence></evidence>
						<otherinfo></otherinfo>
					</instance>


					<instance>
						<uri>https://public-firing-range.appspot.com/address/location/replace</uri>
						<method>GET</method>
						<param></param>
						<attack></attack>
						<evidence></evidence>
						<otherinfo></otherinfo>
					</instance>


					<instance>
						<uri>https://public-firing-range.appspot.com/address/location/setTimeout</uri>
						<method>GET</method>
						<param></param>
						<attack></attack>
						<evidence></evidence>
						<otherinfo></otherinfo>
					</instance>


					<instance>
						<uri>
							https://public-firing-range.appspot.com/address/locationhref/documentwrite</uri>
						<method>GET</method>
						<param></param>
						<attack></attack>
						<evidence></evidence>
						<otherinfo></otherinfo>
					</instance>


					<instance>
						<uri>
							https://public-firing-range.appspot.com/address/locationpathname/documentwrite</uri>
						<method>GET</method>
						<param></param>
						<attack></attack>
						<evidence></evidence>
						<otherinfo></otherinfo>
					</instance>


					<instance>
						<uri>
							https://public-firing-range.appspot.com/address/locationsearch/documentwrite</uri>
						<method>GET</method>
						<param></param>
						<attack></attack>
						<evidence></evidence>
						<otherinfo></otherinfo>
					</instance>


					<instance>
						<uri>https://public-firing-range.appspot.com/address/URL/documentwrite</uri>
						<method>GET</method>
						<param></param>
						<attack></attack>
						<evidence></evidence>
						<otherinfo></otherinfo>
					</instance>


					<instance>
						<uri>
							https://public-firing-range.appspot.com/address/URLUnencoded/documentwrite</uri>
						<method>GET</method>
						<param></param>
						<attack></attack>
						<evidence></evidence>
						<otherinfo></otherinfo>
					</instance>


					<instance>
						<uri>
							https://public-firing-range.appspot.com/angular/angular_body/1.1.5?q=test</uri>
						<method>GET</method>
						<param></param>
						<attack></attack>
						<evidence></evidence>
						<otherinfo></otherinfo>
					</instance>


					<instance>
						<uri>
							https://public-firing-range.appspot.com/angular/angular_body/1.2.0?q=test</uri>
						<method>GET</method>
						<param></param>
						<attack></attack>
						<evidence></evidence>
						<otherinfo></otherinfo>
					</instance>


					<instance>
						<uri>
							https://public-firing-range.appspot.com/angular/angular_body/1.2.18?q=test</uri>
						<method>GET</method>
						<param></param>
						<attack></attack>
						<evidence></evidence>
						<otherinfo></otherinfo>
					</instance>


					<instance>
						<uri>
							https://public-firing-range.appspot.com/angular/angular_body/1.2.19?q=test</uri>
						<method>GET</method>
						<param></param>
						<attack></attack>
						<evidence></evidence>
						<otherinfo></otherinfo>
					</instance>


					<instance>
						<uri>
							https://public-firing-range.appspot.com/angular/angular_body/1.2.24?q=test</uri>
						<method>GET</method>
						<param></param>
						<attack></attack>
						<evidence></evidence>
						<otherinfo></otherinfo>
					</instance>


					<instance>
						<uri>
							https://public-firing-range.appspot.com/angular/angular_body/1.4.0?q=test</uri>
						<method>GET</method>
						<param></param>
						<attack></attack>
						<evidence></evidence>
						<otherinfo></otherinfo>
					</instance>


					<instance>
						<uri>
							https://public-firing-range.appspot.com/angular/angular_body/1.6.0?q=test</uri>
						<method>GET</method>
						<param></param>
						<attack></attack>
						<evidence></evidence>
						<otherinfo></otherinfo>
					</instance>


					<instance>
						<uri>
							https://public-firing-range.appspot.com/angular/angular_body_alt_symbols/1.4.0?q=test</uri>
						<method>GET</method>
						<param></param>
						<attack></attack>
						<evidence></evidence>
						<otherinfo></otherinfo>
					</instance>


					<instance>
						<uri>
							https://public-firing-range.appspot.com/angular/angular_body_alt_symbols_raw/1.6.0?q=test</uri>
						<method>GET</method>
						<param></param>
						<attack></attack>
						<evidence></evidence>
						<otherinfo></otherinfo>
					</instance>


					<instance>
						<uri>
							https://public-firing-range.appspot.com/angular/angular_body_attribute_ng/1.4.0?q=test</uri>
						<method>GET</method>
						<param></param>
						<attack></attack>
						<evidence></evidence>
						<otherinfo></otherinfo>
					</instance>


					<instance>
						<uri>
							https://public-firing-range.appspot.com/angular/angular_body_attribute_non_ng/1.4.0?q=test</uri>
						<method>GET</method>
						<param></param>
						<attack></attack>
						<evidence></evidence>
						<otherinfo></otherinfo>
					</instance>


					<instance>
						<uri>
							https://public-firing-range.appspot.com/angular/angular_body_attribute_non_ng_raw/1.4.0?q=test</uri>
						<method>GET</method>
						<param></param>
						<attack></attack>
						<evidence></evidence>
						<otherinfo></otherinfo>
					</instance>


					<instance>
						<uri>
							https://public-firing-range.appspot.com/angular/angular_body_raw/1.4.0?q=test</uri>
						<method>GET</method>
						<param></param>
						<attack></attack>
						<evidence></evidence>
						<otherinfo></otherinfo>
					</instance>


					<instance>
						<uri>
							https://public-firing-range.appspot.com/angular/angular_body_raw_escaped/1.4.0?q=test</uri>
						<method>GET</method>
						<param></param>
						<attack></attack>
						<evidence></evidence>
						<otherinfo></otherinfo>
					</instance>


					<instance>
						<uri>
							https://public-firing-range.appspot.com/angular/angular_body_raw_escaped_alt_symbols/1.4.0?q=test</uri>
						<method>GET</method>
						<param></param>
						<attack></attack>
						<evidence></evidence>
						<otherinfo></otherinfo>
					</instance>


					<instance>
						<uri>
							https://public-firing-range.appspot.com/angular/angular_body_raw_post/1.6.0</uri>
						<method>GET</method>
						<param></param>
						<attack></attack>
						<evidence></evidence>
						<otherinfo></otherinfo>
					</instance>


					<instance>
						<uri>
							https://public-firing-range.appspot.com/angular/angular_cookie_parse/1.6.0</uri>
						<method>GET</method>
						<param></param>
						<attack></attack>
						<evidence></evidence>
						<otherinfo></otherinfo>
					</instance>


					<instance>
						<uri>
							https://public-firing-range.appspot.com/angular/angular_form_parse/1.6.0</uri>
						<method>GET</method>
						<param></param>
						<attack></attack>
						<evidence></evidence>
						<otherinfo></otherinfo>
					</instance>


					<instance>
						<uri>
							https://public-firing-range.appspot.com/angular/angular_post_message_parse/1.6.0</uri>
						<method>GET</method>
						<param></param>
						<attack></attack>
						<evidence></evidence>
						<otherinfo></otherinfo>
					</instance>


					<instance>
						<uri>
							https://public-firing-range.appspot.com/angular/angular_storage_parse/1.6.0</uri>
						<method>GET</method>
						<param></param>
						<attack></attack>
						<evidence></evidence>
						<otherinfo></otherinfo>
					</instance>


					<instance>
						<uri>https://public-firing-range.appspot.com/angular/index.html</uri>
						<method>GET</method>
						<param></param>
						<attack></attack>
						<evidence></evidence>
						<otherinfo></otherinfo>
					</instance>


					<instance>
						<uri>https://public-firing-range.appspot.com/badscriptimport/index.html</uri>
						<method>GET</method>
						<param></param>
						<attack></attack>
						<evidence></evidence>
						<otherinfo></otherinfo>
					</instance>


					<instance>
						<uri>
							https://public-firing-range.appspot.com/cors/alloworigin/allowInsecureScheme</uri>
						<method>GET</method>
						<param></param>
						<attack></attack>
						<evidence></evidence>
						<otherinfo></otherinfo>
					</instance>


					<instance>
						<uri>
							https://public-firing-range.appspot.com/cors/alloworigin/allowNullOrigin</uri>
						<method>GET</method>
						<param></param>
						<attack></attack>
						<evidence></evidence>
						<otherinfo></otherinfo>
					</instance>


					<instance>
						<uri>
							https://public-firing-range.appspot.com/cors/alloworigin/dynamicAllowOrigin</uri>
						<method>GET</method>
						<param></param>
						<attack></attack>
						<evidence></evidence>
						<otherinfo></otherinfo>
					</instance>


					<instance>
						<uri>https://public-firing-range.appspot.com/cors/index.html</uri>
						<method>GET</method>
						<param></param>
						<attack></attack>
						<evidence></evidence>
						<otherinfo></otherinfo>
					</instance>


					<instance>
						<uri>https://public-firing-range.appspot.com/div</uri>
						<method>GET</method>
						<param></param>
						<attack></attack>
						<evidence></evidence>
						<otherinfo></otherinfo>
					</instance>


					<instance>
						<uri>https://public-firing-range.appspot.com/dom/dompropagation/</uri>
						<method>GET</method>
						<param></param>
						<attack></attack>
						<evidence></evidence>
						<otherinfo></otherinfo>
					</instance>


					<instance>
						<uri>
							https://public-firing-range.appspot.com/dom/eventtriggering/document/formSubmission/documentWrite</uri>
						<method>GET</method>
						<param></param>
						<attack></attack>
						<evidence></evidence>
						<otherinfo></otherinfo>
					</instance>


					<instance>
						<uri>
							https://public-firing-range.appspot.com/dom/eventtriggering/document/formSubmission/eval</uri>
						<method>GET</method>
						<param></param>
						<attack></attack>
						<evidence></evidence>
						<otherinfo></otherinfo>
					</instance>


					<instance>
						<uri>
							https://public-firing-range.appspot.com/dom/eventtriggering/document/formSubmission/innerHtml</uri>
						<method>GET</method>
						<param></param>
						<attack></attack>
						<evidence></evidence>
						<otherinfo></otherinfo>
					</instance>


					<instance>
						<uri>
							https://public-firing-range.appspot.com/dom/eventtriggering/document/inputTyping/documentWrite</uri>
						<method>GET</method>
						<param></param>
						<attack></attack>
						<evidence></evidence>
						<otherinfo></otherinfo>
					</instance>


					<instance>
						<uri>
							https://public-firing-range.appspot.com/dom/eventtriggering/document/inputTyping/eval</uri>
						<method>GET</method>
						<param></param>
						<attack></attack>
						<evidence></evidence>
						<otherinfo></otherinfo>
					</instance>


					<instance>
						<uri>
							https://public-firing-range.appspot.com/dom/eventtriggering/document/inputTyping/innerHtml</uri>
						<method>GET</method>
						<param></param>
						<attack></attack>
						<evidence></evidence>
						<otherinfo></otherinfo>
					</instance>


					<instance>
						<uri>https://public-firing-range.appspot.com/dom/index.html</uri>
						<method>GET</method>
						<param></param>
						<attack></attack>
						<evidence></evidence>
						<otherinfo></otherinfo>
					</instance>


					<instance>
						<uri>https://public-firing-range.appspot.com/dom/javascripturi.html</uri>
						<method>GET</method>
						<param></param>
						<attack></attack>
						<evidence></evidence>
						<otherinfo></otherinfo>
					</instance>


					<instance>
						<uri>
							https://public-firing-range.appspot.com/dom/toxicdom/document/cookie/eval</uri>
						<method>GET</method>
						<param></param>
						<attack></attack>
						<evidence></evidence>
						<otherinfo></otherinfo>
					</instance>


					<instance>
						<uri>
							https://public-firing-range.appspot.com/dom/toxicdom/document/cookie_set/documentWrite</uri>
						<method>GET</method>
						<param></param>
						<attack></attack>
						<evidence></evidence>
						<otherinfo></otherinfo>
					</instance>


					<instance>
						<uri>
							https://public-firing-range.appspot.com/dom/toxicdom/document/cookie_set/eval</uri>
						<method>GET</method>
						<param></param>
						<attack></attack>
						<evidence></evidence>
						<otherinfo></otherinfo>
					</instance>


					<instance>
						<uri>
							https://public-firing-range.appspot.com/dom/toxicdom/document/cookie_set/innerHtml</uri>
						<method>GET</method>
						<param></param>
						<attack></attack>
						<evidence></evidence>
						<otherinfo></otherinfo>
					</instance>


					<instance>
						<uri>
							https://public-firing-range.appspot.com/dom/toxicdom/document/referrer/documentWrite</uri>
						<method>GET</method>
						<param></param>
						<attack></attack>
						<evidence></evidence>
						<otherinfo></otherinfo>
					</instance>


					<instance>
						<uri>
							https://public-firing-range.appspot.com/dom/toxicdom/document/referrer/eval</uri>
						<method>GET</method>
						<param></param>
						<attack></attack>
						<evidence></evidence>
						<otherinfo></otherinfo>
					</instance>


					<instance>
						<uri>
							https://public-firing-range.appspot.com/dom/toxicdom/document/referrer/innerHtml</uri>
						<method>GET</method>
						<param></param>
						<attack></attack>
						<evidence></evidence>
						<otherinfo></otherinfo>
					</instance>


					<instance>
						<uri>
							https://public-firing-range.appspot.com/dom/toxicdom/external/localStorage/array/eval</uri>
						<method>GET</method>
						<param></param>
						<attack></attack>
						<evidence></evidence>
						<otherinfo></otherinfo>
					</instance>


					<instance>
						<uri>
							https://public-firing-range.appspot.com/dom/toxicdom/external/localStorage/function/documentWrite</uri>
						<method>GET</method>
						<param></param>
						<attack></attack>
						<evidence></evidence>
						<otherinfo></otherinfo>
					</instance>


					<instance>
						<uri>
							https://public-firing-range.appspot.com/dom/toxicdom/external/localStorage/function/eval</uri>
						<method>GET</method>
						<param></param>
						<attack></attack>
						<evidence></evidence>
						<otherinfo></otherinfo>
					</instance>


					<instance>
						<uri>
							https://public-firing-range.appspot.com/dom/toxicdom/external/localStorage/function/innerHtml</uri>
						<method>GET</method>
						<param></param>
						<attack></attack>
						<evidence></evidence>
						<otherinfo></otherinfo>
					</instance>


					<instance>
						<uri>
							https://public-firing-range.appspot.com/dom/toxicdom/external/localStorage/property/documentWrite</uri>
						<method>GET</method>
						<param></param>
						<attack></attack>
						<evidence></evidence>
						<otherinfo></otherinfo>
					</instance>


					<instance>
						<uri>
							https://public-firing-range.appspot.com/dom/toxicdom/external/sessionStorage/array/eval</uri>
						<method>GET</method>
						<param></param>
						<attack></attack>
						<evidence></evidence>
						<otherinfo></otherinfo>
					</instance>


					<instance>
						<uri>
							https://public-firing-range.appspot.com/dom/toxicdom/external/sessionStorage/function/documentWrite</uri>
						<method>GET</method>
						<param></param>
						<attack></attack>
						<evidence></evidence>
						<otherinfo></otherinfo>
					</instance>


					<instance>
						<uri>
							https://public-firing-range.appspot.com/dom/toxicdom/external/sessionStorage/function/eval</uri>
						<method>GET</method>
						<param></param>
						<attack></attack>
						<evidence></evidence>
						<otherinfo></otherinfo>
					</instance>


					<instance>
						<uri>
							https://public-firing-range.appspot.com/dom/toxicdom/external/sessionStorage/function/innerHtml</uri>
						<method>GET</method>
						<param></param>
						<attack></attack>
						<evidence></evidence>
						<otherinfo></otherinfo>
					</instance>


					<instance>
						<uri>
							https://public-firing-range.appspot.com/dom/toxicdom/external/sessionStorage/property/documentWrite</uri>
						<method>GET</method>
						<param></param>
						<attack></attack>
						<evidence></evidence>
						<otherinfo></otherinfo>
					</instance>


					<instance>
						<uri>
							https://public-firing-range.appspot.com/dom/toxicdom/localStorage/array/eval</uri>
						<method>GET</method>
						<param></param>
						<attack></attack>
						<evidence></evidence>
						<otherinfo></otherinfo>
					</instance>


					<instance>
						<uri>
							https://public-firing-range.appspot.com/dom/toxicdom/localStorage/function/documentWrite</uri>
						<method>GET</method>
						<param></param>
						<attack></attack>
						<evidence></evidence>
						<otherinfo></otherinfo>
					</instance>


					<instance>
						<uri>
							https://public-firing-range.appspot.com/dom/toxicdom/localStorage/function/eval</uri>
						<method>GET</method>
						<param></param>
						<attack></attack>
						<evidence></evidence>
						<otherinfo></otherinfo>
					</instance>


					<instance>
						<uri>
							https://public-firing-range.appspot.com/dom/toxicdom/localStorage/function/innerHtml</uri>
						<method>GET</method>
						<param></param>
						<attack></attack>
						<evidence></evidence>
						<otherinfo></otherinfo>
					</instance>


					<instance>
						<uri>
							https://public-firing-range.appspot.com/dom/toxicdom/localStorage/property/documentWrite</uri>
						<method>GET</method>
						<param></param>
						<attack></attack>
						<evidence></evidence>
						<otherinfo></otherinfo>
					</instance>


					<instance>
						<uri>
							https://public-firing-range.appspot.com/dom/toxicdom/postMessage/complexMessageDocumentWriteEval</uri>
						<method>GET</method>
						<param></param>
						<attack></attack>
						<evidence></evidence>
						<otherinfo></otherinfo>
					</instance>


					<instance>
						<uri>
							https://public-firing-range.appspot.com/dom/toxicdom/postMessage/documentWrite</uri>
						<method>GET</method>
						<param></param>
						<attack></attack>
						<evidence></evidence>
						<otherinfo></otherinfo>
					</instance>


					<instance>
						<uri>https://public-firing-range.appspot.com/dom/toxicdom/postMessage/eval</uri>
						<method>GET</method>
						<param></param>
						<attack></attack>
						<evidence></evidence>
						<otherinfo></otherinfo>
					</instance>


					<instance>
						<uri>
							https://public-firing-range.appspot.com/dom/toxicdom/postMessage/improperOriginValidationWithPartialStringComparison</uri>
						<method>GET</method>
						<param></param>
						<attack></attack>
						<evidence></evidence>
						<otherinfo></otherinfo>
					</instance>


					<instance>
						<uri>
							https://public-firing-range.appspot.com/dom/toxicdom/postMessage/improperOriginValidationWithRegExp</uri>
						<method>GET</method>
						<param></param>
						<attack></attack>
						<evidence></evidence>
						<otherinfo></otherinfo>
					</instance>


					<instance>
						<uri>
							https://public-firing-range.appspot.com/dom/toxicdom/postMessage/innerHtml</uri>
						<method>GET</method>
						<param></param>
						<attack></attack>
						<evidence></evidence>
						<otherinfo></otherinfo>
					</instance>


					<instance>
						<uri>
							https://public-firing-range.appspot.com/dom/toxicdom/sessionStorage/array/eval</uri>
						<method>GET</method>
						<param></param>
						<attack></attack>
						<evidence></evidence>
						<otherinfo></otherinfo>
					</instance>


					<instance>
						<uri>
							https://public-firing-range.appspot.com/dom/toxicdom/sessionStorage/function/documentWrite</uri>
						<method>GET</method>
						<param></param>
						<attack></attack>
						<evidence></evidence>
						<otherinfo></otherinfo>
					</instance>


					<instance>
						<uri>
							https://public-firing-range.appspot.com/dom/toxicdom/sessionStorage/function/eval</uri>
						<method>GET</method>
						<param></param>
						<attack></attack>
						<evidence></evidence>
						<otherinfo></otherinfo>
					</instance>


					<instance>
						<uri>
							https://public-firing-range.appspot.com/dom/toxicdom/sessionStorage/function/innerHtml</uri>
						<method>GET</method>
						<param></param>
						<attack></attack>
						<evidence></evidence>
						<otherinfo></otherinfo>
					</instance>


					<instance>
						<uri>
							https://public-firing-range.appspot.com/dom/toxicdom/sessionStorage/property/documentWrite</uri>
						<method>GET</method>
						<param></param>
						<attack></attack>
						<evidence></evidence>
						<otherinfo></otherinfo>
					</instance>


					<instance>
						<uri>
							https://public-firing-range.appspot.com/dom/toxicdom/window/name/documentWrite</uri>
						<method>GET</method>
						<param></param>
						<attack></attack>
						<evidence></evidence>
						<otherinfo></otherinfo>
					</instance>


					<instance>
						<uri>https://public-firing-range.appspot.com/dom/toxicdom/window/name/eval</uri>
						<method>GET</method>
						<param></param>
						<attack></attack>
						<evidence></evidence>
						<otherinfo></otherinfo>
					</instance>


					<instance>
						<uri>
							https://public-firing-range.appspot.com/dom/toxicdom/window/name/innerHtml</uri>
						<method>GET</method>
						<param></param>
						<attack></attack>
						<evidence></evidence>
						<otherinfo></otherinfo>
					</instance>


					<instance>
						<uri>
							https://public-firing-range.appspot.com/dom/toxicdomscripts/localStorage/array/eval</uri>
						<method>GET</method>
						<param></param>
						<attack></attack>
						<evidence></evidence>
						<otherinfo></otherinfo>
					</instance>


					<instance>
						<uri>
							https://public-firing-range.appspot.com/dom/toxicdomscripts/localStorage/function/documentWrite</uri>
						<method>GET</method>
						<param></param>
						<attack></attack>
						<evidence></evidence>
						<otherinfo></otherinfo>
					</instance>


					<instance>
						<uri>
							https://public-firing-range.appspot.com/dom/toxicdomscripts/localStorage/function/eval</uri>
						<method>GET</method>
						<param></param>
						<attack></attack>
						<evidence></evidence>
						<otherinfo></otherinfo>
					</instance>


					<instance>
						<uri>
							https://public-firing-range.appspot.com/dom/toxicdomscripts/localStorage/function/innerHtml</uri>
						<method>GET</method>
						<param></param>
						<attack></attack>
						<evidence></evidence>
						<otherinfo></otherinfo>
					</instance>


					<instance>
						<uri>
							https://public-firing-range.appspot.com/dom/toxicdomscripts/localStorage/property/documentWrite</uri>
						<method>GET</method>
						<param></param>
						<attack></attack>
						<evidence></evidence>
						<otherinfo></otherinfo>
					</instance>


					<instance>
						<uri>
							https://public-firing-range.appspot.com/dom/toxicdomscripts/sessionStorage/array/eval</uri>
						<method>GET</method>
						<param></param>
						<attack></attack>
						<evidence></evidence>
						<otherinfo></otherinfo>
					</instance>


					<instance>
						<uri>
							https://public-firing-range.appspot.com/dom/toxicdomscripts/sessionStorage/function/documentWrite</uri>
						<method>GET</method>
						<param></param>
						<attack></attack>
						<evidence></evidence>
						<otherinfo></otherinfo>
					</instance>


					<instance>
						<uri>
							https://public-firing-range.appspot.com/dom/toxicdomscripts/sessionStorage/function/eval</uri>
						<method>GET</method>
						<param></param>
						<attack></attack>
						<evidence></evidence>
						<otherinfo></otherinfo>
					</instance>


					<instance>
						<uri>
							https://public-firing-range.appspot.com/dom/toxicdomscripts/sessionStorage/function/innerHtml</uri>
						<method>GET</method>
						<param></param>
						<attack></attack>
						<evidence></evidence>
						<otherinfo></otherinfo>
					</instance>


					<instance>
						<uri>
							https://public-firing-range.appspot.com/dom/toxicdomscripts/sessionStorage/property/documentWrite</uri>
						<method>GET</method>
						<param></param>
						<attack></attack>
						<evidence></evidence>
						<otherinfo></otherinfo>
					</instance>


					<instance>
						<uri>https://public-firing-range.appspot.com/escape/index.html</uri>
						<method>GET</method>
						<param></param>
						<attack></attack>
						<evidence></evidence>
						<otherinfo></otherinfo>
					</instance>


					<instance>
						<uri>
							https://public-firing-range.appspot.com/escape/js/encodeURIComponent?q=a</uri>
						<method>GET</method>
						<param></param>
						<attack></attack>
						<evidence></evidence>
						<otherinfo></otherinfo>
					</instance>


					<instance>
						<uri>https://public-firing-range.appspot.com/escape/js/escape?q=a</uri>
						<method>GET</method>
						<param></param>
						<attack></attack>
						<evidence></evidence>
						<otherinfo></otherinfo>
					</instance>


					<instance>
						<uri>https://public-firing-range.appspot.com/escape/js/html_escape?q=a</uri>
						<method>GET</method>
						<param></param>
						<attack></attack>
						<evidence></evidence>
						<otherinfo></otherinfo>
					</instance>


					<instance>
						<uri>https://public-firing-range.appspot.com/escape/serverside/encodeUrl/a</uri>
						<method>GET</method>
						<param></param>
						<attack></attack>
						<evidence></evidence>
						<otherinfo></otherinfo>
					</instance>


					<instance>
						<uri>
							https://public-firing-range.appspot.com/escape/serverside/encodeUrl/attribute_name?q=a</uri>
						<method>GET</method>
						<param></param>
						<attack></attack>
						<evidence></evidence>
						<otherinfo></otherinfo>
					</instance>


					<instance>
						<uri>
							https://public-firing-range.appspot.com/escape/serverside/encodeUrl/attribute_quoted?q=a</uri>
						<method>GET</method>
						<param></param>
						<attack></attack>
						<evidence></evidence>
						<otherinfo></otherinfo>
					</instance>


					<instance>
						<uri>
							https://public-firing-range.appspot.com/escape/serverside/encodeUrl/attribute_script?q=a</uri>
						<method>GET</method>
						<param></param>
						<attack></attack>
						<evidence></evidence>
						<otherinfo></otherinfo>
					</instance>


					<instance>
						<uri>
							https://public-firing-range.appspot.com/escape/serverside/encodeUrl/attribute_singlequoted?q=a</uri>
						<method>GET</method>
						<param></param>
						<attack></attack>
						<evidence></evidence>
						<otherinfo></otherinfo>
					</instance>


					<instance>
						<uri>
							https://public-firing-range.appspot.com/escape/serverside/encodeUrl/attribute_unquoted?q=a</uri>
						<method>GET</method>
						<param></param>
						<attack></attack>
						<evidence></evidence>
						<otherinfo></otherinfo>
					</instance>


					<instance>
						<uri>
							https://public-firing-range.appspot.com/escape/serverside/encodeUrl/body?q=a</uri>
						<method>GET</method>
						<param></param>
						<attack></attack>
						<evidence></evidence>
						<otherinfo></otherinfo>
					</instance>


					<instance>
						<uri>
							https://public-firing-range.appspot.com/escape/serverside/encodeUrl/body_comment?q=a</uri>
						<method>GET</method>
						<param></param>
						<attack></attack>
						<evidence></evidence>
						<otherinfo></otherinfo>
					</instance>


					<instance>
						<uri>
							https://public-firing-range.appspot.com/escape/serverside/encodeUrl/css_import?q=a</uri>
						<method>GET</method>
						<param></param>
						<attack></attack>
						<evidence></evidence>
						<otherinfo></otherinfo>
					</instance>


					<instance>
						<uri>
							https://public-firing-range.appspot.com/escape/serverside/encodeUrl/css_style?q=a</uri>
						<method>GET</method>
						<param></param>
						<attack></attack>
						<evidence></evidence>
						<otherinfo></otherinfo>
					</instance>


					<instance>
						<uri>
							https://public-firing-range.appspot.com/escape/serverside/encodeUrl/css_style_font_value?q=a</uri>
						<method>GET</method>
						<param></param>
						<attack></attack>
						<evidence></evidence>
						<otherinfo></otherinfo>
					</instance>


					<instance>
						<uri>
							https://public-firing-range.appspot.com/escape/serverside/encodeUrl/css_style_value?q=a</uri>
						<method>GET</method>
						<param></param>
						<attack></attack>
						<evidence></evidence>
						<otherinfo></otherinfo>
					</instance>


					<instance>
						<uri>
							https://public-firing-range.appspot.com/escape/serverside/encodeUrl/head?q=a</uri>
						<method>GET</method>
						<param></param>
						<attack></attack>
						<evidence></evidence>
						<otherinfo></otherinfo>
					</instance>


					<instance>
						<uri>
							https://public-firing-range.appspot.com/escape/serverside/encodeUrl/href?q=a</uri>
						<method>GET</method>
						<param></param>
						<attack></attack>
						<evidence></evidence>
						<otherinfo></otherinfo>
					</instance>


					<instance>
						<uri>
							https://public-firing-range.appspot.com/escape/serverside/encodeUrl/js_assignment?q=a</uri>
						<method>GET</method>
						<param></param>
						<attack></attack>
						<evidence></evidence>
						<otherinfo></otherinfo>
					</instance>


					<instance>
						<uri>
							https://public-firing-range.appspot.com/escape/serverside/encodeUrl/js_comment?q=a</uri>
						<method>GET</method>
						<param></param>
						<attack></attack>
						<evidence></evidence>
						<otherinfo></otherinfo>
					</instance>


					<instance>
						<uri>
							https://public-firing-range.appspot.com/escape/serverside/encodeUrl/js_eval?q=a</uri>
						<method>GET</method>
						<param></param>
						<attack></attack>
						<evidence></evidence>
						<otherinfo></otherinfo>
					</instance>


					<instance>
						<uri>
							https://public-firing-range.appspot.com/escape/serverside/encodeUrl/js_quoted_string?q=a</uri>
						<method>GET</method>
						<param></param>
						<attack></attack>
						<evidence></evidence>
						<otherinfo></otherinfo>
					</instance>


					<instance>
						<uri>
							https://public-firing-range.appspot.com/escape/serverside/encodeUrl/js_singlequoted_string?q=a</uri>
						<method>GET</method>
						<param></param>
						<attack></attack>
						<evidence></evidence>
						<otherinfo></otherinfo>
					</instance>


					<instance>
						<uri>
							https://public-firing-range.appspot.com/escape/serverside/encodeUrl/js_slashquoted_string?q=a</uri>
						<method>GET</method>
						<param></param>
						<attack></attack>
						<evidence></evidence>
						<otherinfo></otherinfo>
					</instance>


					<instance>
						<uri>
							https://public-firing-range.appspot.com/escape/serverside/encodeUrl/tagname?q=a</uri>
						<method>GET</method>
						<param></param>
						<attack></attack>
						<evidence></evidence>
						<otherinfo></otherinfo>
					</instance>


					<instance>
						<uri>
							https://public-firing-range.appspot.com/escape/serverside/encodeUrl/textarea?q=a</uri>
						<method>GET</method>
						<param></param>
						<attack></attack>
						<evidence></evidence>
						<otherinfo></otherinfo>
					</instance>


					<instance>
						<uri>https://public-firing-range.appspot.com/escape/serverside/escapeHtml/a</uri>
						<method>GET</method>
						<param></param>
						<attack></attack>
						<evidence></evidence>
						<otherinfo></otherinfo>
					</instance>


					<instance>
						<uri>
							https://public-firing-range.appspot.com/escape/serverside/escapeHtml/attribute_name?q=a</uri>
						<method>GET</method>
						<param></param>
						<attack></attack>
						<evidence></evidence>
						<otherinfo></otherinfo>
					</instance>


					<instance>
						<uri>
							https://public-firing-range.appspot.com/escape/serverside/escapeHtml/attribute_quoted?q=a</uri>
						<method>GET</method>
						<param></param>
						<attack></attack>
						<evidence></evidence>
						<otherinfo></otherinfo>
					</instance>


					<instance>
						<uri>
							https://public-firing-range.appspot.com/escape/serverside/escapeHtml/attribute_script?q=a</uri>
						<method>GET</method>
						<param></param>
						<attack></attack>
						<evidence></evidence>
						<otherinfo></otherinfo>
					</instance>


					<instance>
						<uri>
							https://public-firing-range.appspot.com/escape/serverside/escapeHtml/attribute_singlequoted?q=a</uri>
						<method>GET</method>
						<param></param>
						<attack></attack>
						<evidence></evidence>
						<otherinfo></otherinfo>
					</instance>


					<instance>
						<uri>
							https://public-firing-range.appspot.com/escape/serverside/escapeHtml/attribute_unquoted?q=a</uri>
						<method>GET</method>
						<param></param>
						<attack></attack>
						<evidence></evidence>
						<otherinfo></otherinfo>
					</instance>


					<instance>
						<uri>
							https://public-firing-range.appspot.com/escape/serverside/escapeHtml/body?q=a</uri>
						<method>GET</method>
						<param></param>
						<attack></attack>
						<evidence></evidence>
						<otherinfo></otherinfo>
					</instance>


					<instance>
						<uri>
							https://public-firing-range.appspot.com/escape/serverside/escapeHtml/body_comment?q=a</uri>
						<method>GET</method>
						<param></param>
						<attack></attack>
						<evidence></evidence>
						<otherinfo></otherinfo>
					</instance>


					<instance>
						<uri>
							https://public-firing-range.appspot.com/escape/serverside/escapeHtml/css_import?q=a</uri>
						<method>GET</method>
						<param></param>
						<attack></attack>
						<evidence></evidence>
						<otherinfo></otherinfo>
					</instance>


					<instance>
						<uri>
							https://public-firing-range.appspot.com/escape/serverside/escapeHtml/css_style?q=a</uri>
						<method>GET</method>
						<param></param>
						<attack></attack>
						<evidence></evidence>
						<otherinfo></otherinfo>
					</instance>


					<instance>
						<uri>
							https://public-firing-range.appspot.com/escape/serverside/escapeHtml/css_style_font_value?q=a</uri>
						<method>GET</method>
						<param></param>
						<attack></attack>
						<evidence></evidence>
						<otherinfo></otherinfo>
					</instance>


					<instance>
						<uri>
							https://public-firing-range.appspot.com/escape/serverside/escapeHtml/css_style_value?escape=HTML_ESCAPE&amp;q=a</uri>
						<method>GET</method>
						<param></param>
						<attack></attack>
						<evidence></evidence>
						<otherinfo></otherinfo>
					</instance>


					<instance>
						<uri>
							https://public-firing-range.appspot.com/escape/serverside/escapeHtml/head?q=a</uri>
						<method>GET</method>
						<param></param>
						<attack></attack>
						<evidence></evidence>
						<otherinfo></otherinfo>
					</instance>


					<instance>
						<uri>
							https://public-firing-range.appspot.com/escape/serverside/escapeHtml/href?q=a</uri>
						<method>GET</method>
						<param></param>
						<attack></attack>
						<evidence></evidence>
						<otherinfo></otherinfo>
					</instance>


					<instance>
						<uri>
							https://public-firing-range.appspot.com/escape/serverside/escapeHtml/js_assignment?q=a</uri>
						<method>GET</method>
						<param></param>
						<attack></attack>
						<evidence></evidence>
						<otherinfo></otherinfo>
					</instance>


					<instance>
						<uri>
							https://public-firing-range.appspot.com/escape/serverside/escapeHtml/js_comment?q=a</uri>
						<method>GET</method>
						<param></param>
						<attack></attack>
						<evidence></evidence>
						<otherinfo></otherinfo>
					</instance>


					<instance>
						<uri>
							https://public-firing-range.appspot.com/escape/serverside/escapeHtml/js_eval?q=a</uri>
						<method>GET</method>
						<param></param>
						<attack></attack>
						<evidence></evidence>
						<otherinfo></otherinfo>
					</instance>


					<instance>
						<uri>
							https://public-firing-range.appspot.com/escape/serverside/escapeHtml/js_quoted_string?q=a</uri>
						<method>GET</method>
						<param></param>
						<attack></attack>
						<evidence></evidence>
						<otherinfo></otherinfo>
					</instance>


					<instance>
						<uri>
							https://public-firing-range.appspot.com/escape/serverside/escapeHtml/js_singlequoted_string?q=a</uri>
						<method>GET</method>
						<param></param>
						<attack></attack>
						<evidence></evidence>
						<otherinfo></otherinfo>
					</instance>


					<instance>
						<uri>
							https://public-firing-range.appspot.com/escape/serverside/escapeHtml/js_slashquoted_string?q=a</uri>
						<method>GET</method>
						<param></param>
						<attack></attack>
						<evidence></evidence>
						<otherinfo></otherinfo>
					</instance>


					<instance>
						<uri>
							https://public-firing-range.appspot.com/escape/serverside/escapeHtml/tagname?q=a</uri>
						<method>GET</method>
						<param></param>
						<attack></attack>
						<evidence></evidence>
						<otherinfo></otherinfo>
					</instance>


					<instance>
						<uri>
							https://public-firing-range.appspot.com/escape/serverside/escapeHtml/textarea?q=a</uri>
						<method>GET</method>
						<param></param>
						<attack></attack>
						<evidence></evidence>
						<otherinfo></otherinfo>
					</instance>


					<instance>
						<uri>
							https://public-firing-range.appspot.com/flashinjection/callbackIsEchoedBack?callback=func</uri>
						<method>GET</method>
						<param></param>
						<attack></attack>
						<evidence></evidence>
						<otherinfo></otherinfo>
					</instance>


					<instance>
						<uri>
							https://public-firing-range.appspot.com/flashinjection/callbackParameterDoesNothing?callback=func</uri>
						<method>GET</method>
						<param></param>
						<attack></attack>
						<evidence></evidence>
						<otherinfo></otherinfo>
					</instance>


					<instance>
						<uri>https://public-firing-range.appspot.com/flashinjection/index.html</uri>
						<method>GET</method>
						<param></param>
						<attack></attack>
						<evidence></evidence>
						<otherinfo></otherinfo>
					</instance>


					<instance>
						<uri>
							https://public-firing-range.appspot.com/invalidframingconfig/frameancestorsnonenoxfodeny</uri>
						<method>GET</method>
						<param></param>
						<attack></attack>
						<evidence></evidence>
						<otherinfo></otherinfo>
					</instance>


					<instance>
						<uri>
							https://public-firing-range.appspot.com/invalidframingconfig/frameancestorsnoxfoallowfrom</uri>
						<method>GET</method>
						<param></param>
						<attack></attack>
						<evidence></evidence>
						<otherinfo></otherinfo>
					</instance>


					<instance>
						<uri>
							https://public-firing-range.appspot.com/invalidframingconfig/frameancestorsselfnoxfosameorigin</uri>
						<method>GET</method>
						<param></param>
						<attack></attack>
						<evidence></evidence>
						<otherinfo></otherinfo>
					</instance>


					<instance>
						<uri>https://public-firing-range.appspot.com/invalidframingconfig/index.html</uri>
						<method>GET</method>
						<param></param>
						<attack></attack>
						<evidence></evidence>
						<otherinfo></otherinfo>
					</instance>


					<instance>
						<uri>
							https://public-firing-range.appspot.com/invalidframingconfig/xfoallowfromnocoverdomain</uri>
						<method>GET</method>
						<param></param>
						<attack></attack>
						<evidence></evidence>
						<otherinfo></otherinfo>
					</instance>


					<instance>
						<uri>
							https://public-firing-range.appspot.com/invalidframingconfig/xfoallowfromnoframeancestors</uri>
						<method>GET</method>
						<param></param>
						<attack></attack>
						<evidence></evidence>
						<otherinfo></otherinfo>
					</instance>


					<instance>
						<uri>
							https://public-firing-range.appspot.com/invalidframingconfig/xfodenynoframeancestorsnone</uri>
						<method>GET</method>
						<param></param>
						<attack></attack>
						<evidence></evidence>
						<otherinfo></otherinfo>
					</instance>


					<instance>
						<uri>
							https://public-firing-range.appspot.com/invalidframingconfig/xfosameoriginnoframeancestorsself</uri>
						<method>GET</method>
						<param></param>
						<attack></attack>
						<evidence></evidence>
						<otherinfo></otherinfo>
					</instance>


					<instance>
						<uri>https://public-firing-range.appspot.com/jsonp?callback=%25q</uri>
						<method>GET</method>
						<param></param>
						<attack></attack>
						<evidence></evidence>
						<otherinfo></otherinfo>
					</instance>


					<instance>
						<uri>
							https://public-firing-range.appspot.com/jsonp?callback=callbackFunc&amp;other=%25q</uri>
						<method>GET</method>
						<param></param>
						<attack></attack>
						<evidence></evidence>
						<otherinfo></otherinfo>
					</instance>


					<instance>
						<uri>https://public-firing-range.appspot.com/leakedcookie/index.html</uri>
						<method>GET</method>
						<param></param>
						<attack></attack>
						<evidence></evidence>
						<otherinfo></otherinfo>
					</instance>


					<instance>
						<uri>https://public-firing-range.appspot.com/leakedcookie/leakedcookie</uri>
						<method>GET</method>
						<param></param>
						<attack></attack>
						<evidence></evidence>
						<otherinfo></otherinfo>
					</instance>


					<instance>
						<uri>https://public-firing-range.appspot.com/leakedcookie/leakedcookie.js</uri>
						<method>GET</method>
						<param></param>
						<attack></attack>
						<evidence></evidence>
						<otherinfo></otherinfo>
					</instance>


					<instance>
						<uri>https://public-firing-range.appspot.com/leakedcookie/leakedinresource</uri>
						<method>GET</method>
						<param></param>
						<attack></attack>
						<evidence></evidence>
						<otherinfo></otherinfo>
					</instance>


					<instance>
						<uri>https://public-firing-range.appspot.com/mixedcontent/index.html</uri>
						<method>GET</method>
						<param></param>
						<attack></attack>
						<evidence></evidence>
						<otherinfo></otherinfo>
					</instance>


					<instance>
						<uri>https://public-firing-range.appspot.com/pression</uri>
						<method>GET</method>
						<param></param>
						<attack></attack>
						<evidence></evidence>
						<otherinfo></otherinfo>
					</instance>


					<instance>
						<uri>https://public-firing-range.appspot.com/redirect/index.html</uri>
						<method>GET</method>
						<param></param>
						<attack></attack>
						<evidence></evidence>
						<otherinfo></otherinfo>
					</instance>


					<instance>
						<uri>https://public-firing-range.appspot.com/redirect/meta?q=/</uri>
						<method>GET</method>
						<param></param>
						<attack></attack>
						<evidence></evidence>
						<otherinfo></otherinfo>
					</instance>


					<instance>
						<uri>
							https://public-firing-range.appspot.com/reflected/contentsniffing/json?q=a</uri>
						<method>GET</method>
						<param></param>
						<attack></attack>
						<evidence></evidence>
						<otherinfo></otherinfo>
					</instance>


					<instance>
						<uri>
							https://public-firing-range.appspot.com/reflected/contentsniffing/plaintext?q=a</uri>
						<method>GET</method>
						<param></param>
						<attack></attack>
						<evidence></evidence>
						<otherinfo></otherinfo>
					</instance>


					<instance>
						<uri>
							https://public-firing-range.appspot.com/reflected/escapedparameter/js_eventhandler_quoted/DOUBLE_QUOTED_ATTRIBUTE?q=a</uri>
						<method>GET</method>
						<param></param>
						<attack></attack>
						<evidence></evidence>
						<otherinfo></otherinfo>
					</instance>


					<instance>
						<uri>
							https://public-firing-range.appspot.com/reflected/escapedparameter/js_eventhandler_singlequoted/SINGLE_QUOTED_ATTRIBUTE?q=a</uri>
						<method>GET</method>
						<param></param>
						<attack></attack>
						<evidence></evidence>
						<otherinfo></otherinfo>
					</instance>


					<instance>
						<uri>
							https://public-firing-range.appspot.com/reflected/escapedparameter/js_eventhandler_unquoted/UNQUOTED_ATTRIBUTE?q=a</uri>
						<method>GET</method>
						<param></param>
						<attack></attack>
						<evidence></evidence>
						<otherinfo></otherinfo>
					</instance>


					<instance>
						<uri>
							https://public-firing-range.appspot.com/reflected/filteredcharsets/attribute_unquoted/DoubleQuoteSinglequote?q=a</uri>
						<method>GET</method>
						<param></param>
						<attack></attack>
						<evidence></evidence>
						<otherinfo></otherinfo>
					</instance>


					<instance>
						<uri>
							https://public-firing-range.appspot.com/reflected/filteredcharsets/body/SpaceDoubleQuoteSlashEquals?q=a</uri>
						<method>GET</method>
						<param></param>
						<attack></attack>
						<evidence></evidence>
						<otherinfo></otherinfo>
					</instance>


					<instance>
						<uri>
							https://public-firing-range.appspot.com/reflected/filteredstrings/body/caseInsensitive/script?q=a</uri>
						<method>GET</method>
						<param></param>
						<attack></attack>
						<evidence></evidence>
						<otherinfo></otherinfo>
					</instance>


					<instance>
						<uri>
							https://public-firing-range.appspot.com/reflected/filteredstrings/body/caseSensitive/script?q=a</uri>
						<method>GET</method>
						<param></param>
						<attack></attack>
						<evidence></evidence>
						<otherinfo></otherinfo>
					</instance>


					<instance>
						<uri>https://public-firing-range.appspot.com/reflected/index.html</uri>
						<method>GET</method>
						<param></param>
						<attack></attack>
						<evidence></evidence>
						<otherinfo></otherinfo>
					</instance>


					<instance>
						<uri>https://public-firing-range.appspot.com/reflected/jsoncallback</uri>
						<method>GET</method>
						<param></param>
						<attack></attack>
						<evidence></evidence>
						<otherinfo></otherinfo>
					</instance>


					<instance>
						<uri>
							https://public-firing-range.appspot.com/reflected/parameter/attribute_name?q=a</uri>
						<method>GET</method>
						<param></param>
						<attack></attack>
						<evidence></evidence>
						<otherinfo></otherinfo>
					</instance>


					<instance>
						<uri>
							https://public-firing-range.appspot.com/reflected/parameter/attribute_quoted?q=a</uri>
						<method>GET</method>
						<param></param>
						<attack></attack>
						<evidence></evidence>
						<otherinfo></otherinfo>
					</instance>


					<instance>
						<uri>
							https://public-firing-range.appspot.com/reflected/parameter/attribute_script?q=a</uri>
						<method>GET</method>
						<param></param>
						<attack></attack>
						<evidence></evidence>
						<otherinfo></otherinfo>
					</instance>


					<instance>
						<uri>
							https://public-firing-range.appspot.com/reflected/parameter/attribute_singlequoted?q=a</uri>
						<method>GET</method>
						<param></param>
						<attack></attack>
						<evidence></evidence>
						<otherinfo></otherinfo>
					</instance>


					<instance>
						<uri>
							https://public-firing-range.appspot.com/reflected/parameter/attribute_unquoted?q=a</uri>
						<method>GET</method>
						<param></param>
						<attack></attack>
						<evidence></evidence>
						<otherinfo></otherinfo>
					</instance>


					<instance>
						<uri>
							https://public-firing-range.appspot.com/reflected/parameter/body/400?q=a</uri>
						<method>GET</method>
						<param></param>
						<attack></attack>
						<evidence></evidence>
						<otherinfo></otherinfo>
					</instance>


					<instance>
						<uri>
							https://public-firing-range.appspot.com/reflected/parameter/body/401?q=a</uri>
						<method>GET</method>
						<param></param>
						<attack></attack>
						<evidence></evidence>
						<otherinfo></otherinfo>
					</instance>


					<instance>
						<uri>
							https://public-firing-range.appspot.com/reflected/parameter/body/403?q=a</uri>
						<method>GET</method>
						<param></param>
						<attack></attack>
						<evidence></evidence>
						<otherinfo></otherinfo>
					</instance>


					<instance>
						<uri>
							https://public-firing-range.appspot.com/reflected/parameter/body/404?q=a</uri>
						<method>GET</method>
						<param></param>
						<attack></attack>
						<evidence></evidence>
						<otherinfo></otherinfo>
					</instance>


					<instance>
						<uri>
							https://public-firing-range.appspot.com/reflected/parameter/body/500?q=a</uri>
						<method>GET</method>
						<param></param>
						<attack></attack>
						<evidence></evidence>
						<otherinfo></otherinfo>
					</instance>


					<instance>
						<uri>https://public-firing-range.appspot.com/reflected/parameter/body?q=a</uri>
						<method>GET</method>
						<param></param>
						<attack></attack>
						<evidence></evidence>
						<otherinfo></otherinfo>
					</instance>


					<instance>
						<uri>
							https://public-firing-range.appspot.com/reflected/parameter/body_comment?q=a</uri>
						<method>GET</method>
						<param></param>
						<attack></attack>
						<evidence></evidence>
						<otherinfo></otherinfo>
					</instance>


					<instance>
						<uri>
							https://public-firing-range.appspot.com/reflected/parameter/css_style?q=a</uri>
						<method>GET</method>
						<param></param>
						<attack></attack>
						<evidence></evidence>
						<otherinfo></otherinfo>
					</instance>


					<instance>
						<uri>
							https://public-firing-range.appspot.com/reflected/parameter/css_style_font_value?q=a</uri>
						<method>GET</method>
						<param></param>
						<attack></attack>
						<evidence></evidence>
						<otherinfo></otherinfo>
					</instance>


					<instance>
						<uri>
							https://public-firing-range.appspot.com/reflected/parameter/css_style_value?q=a</uri>
						<method>GET</method>
						<param></param>
						<attack></attack>
						<evidence></evidence>
						<otherinfo></otherinfo>
					</instance>


					<instance>
						<uri>https://public-firing-range.appspot.com/reflected/parameter/form</uri>
						<method>GET</method>
						<param></param>
						<attack></attack>
						<evidence></evidence>
						<otherinfo></otherinfo>
					</instance>


					<instance>
						<uri>https://public-firing-range.appspot.com/reflected/parameter/head?q=a</uri>
						<method>GET</method>
						<param></param>
						<attack></attack>
						<evidence></evidence>
						<otherinfo></otherinfo>
					</instance>


					<instance>
						<uri>
							https://public-firing-range.appspot.com/reflected/parameter/iframe_attribute_value?q=a</uri>
						<method>GET</method>
						<param></param>
						<attack></attack>
						<evidence></evidence>
						<otherinfo></otherinfo>
					</instance>


					<instance>
						<uri>
							https://public-firing-range.appspot.com/reflected/parameter/iframe_srcdoc?q=a</uri>
						<method>GET</method>
						<param></param>
						<attack></attack>
						<evidence></evidence>
						<otherinfo></otherinfo>
					</instance>


					<instance>
						<uri>
							https://public-firing-range.appspot.com/reflected/parameter/js_assignment?q=a</uri>
						<method>GET</method>
						<param></param>
						<attack></attack>
						<evidence></evidence>
						<otherinfo></otherinfo>
					</instance>


					<instance>
						<uri>
							https://public-firing-range.appspot.com/reflected/parameter/js_comment?q=a</uri>
						<method>GET</method>
						<param></param>
						<attack></attack>
						<evidence></evidence>
						<otherinfo></otherinfo>
					</instance>


					<instance>
						<uri>https://public-firing-range.appspot.com/reflected/parameter/js_eval?q=a</uri>
						<method>GET</method>
						<param></param>
						<attack></attack>
						<evidence></evidence>
						<otherinfo></otherinfo>
					</instance>


					<instance>
						<uri>
							https://public-firing-range.appspot.com/reflected/parameter/js_quoted_string?q=a</uri>
						<method>GET</method>
						<param></param>
						<attack></attack>
						<evidence></evidence>
						<otherinfo></otherinfo>
					</instance>


					<instance>
						<uri>
							https://public-firing-range.appspot.com/reflected/parameter/js_singlequoted_string?q=a</uri>
						<method>GET</method>
						<param></param>
						<attack></attack>
						<evidence></evidence>
						<otherinfo></otherinfo>
					</instance>


					<instance>
						<uri>
							https://public-firing-range.appspot.com/reflected/parameter/js_slashquoted_string?q=a</uri>
						<method>GET</method>
						<param></param>
						<attack></attack>
						<evidence></evidence>
						<otherinfo></otherinfo>
					</instance>


					<instance>
						<uri>https://public-firing-range.appspot.com/reflected/parameter/json?q=a</uri>
						<method>GET</method>
						<param></param>
						<attack></attack>
						<evidence></evidence>
						<otherinfo></otherinfo>
					</instance>


					<instance>
						<uri>
							https://public-firing-range.appspot.com/reflected/parameter/noscript?q=a</uri>
						<method>GET</method>
						<param></param>
						<attack></attack>
						<evidence></evidence>
						<otherinfo></otherinfo>
					</instance>


					<instance>
						<uri>
							https://public-firing-range.appspot.com/reflected/parameter/style_attribute_value?q=a</uri>
						<method>GET</method>
						<param></param>
						<attack></attack>
						<evidence></evidence>
						<otherinfo></otherinfo>
					</instance>


					<instance>
						<uri>https://public-firing-range.appspot.com/reflected/parameter/tagname?q=a</uri>
						<method>GET</method>
						<param></param>
						<attack></attack>
						<evidence></evidence>
						<otherinfo></otherinfo>
					</instance>


					<instance>
						<uri>
							https://public-firing-range.appspot.com/reflected/parameter/textarea?q=a</uri>
						<method>GET</method>
						<param></param>
						<attack></attack>
						<evidence></evidence>
						<otherinfo></otherinfo>
					</instance>


					<instance>
						<uri>
							https://public-firing-range.appspot.com/reflected/parameter/textarea_attribute_value?q=a</uri>
						<method>GET</method>
						<param></param>
						<attack></attack>
						<evidence></evidence>
						<otherinfo></otherinfo>
					</instance>


					<instance>
						<uri>https://public-firing-range.appspot.com/reflected/parameter/title?q=a</uri>
						<method>GET</method>
						<param></param>
						<attack></attack>
						<evidence></evidence>
						<otherinfo></otherinfo>
					</instance>


					<instance>
						<uri>https://public-firing-range.appspot.com/reflected/url/a</uri>
						<method>GET</method>
						<param></param>
						<attack></attack>
						<evidence></evidence>
						<otherinfo></otherinfo>
					</instance>


					<instance>
						<uri>https://public-firing-range.appspot.com/reflected/url/css_import?q=a</uri>
						<method>GET</method>
						<param></param>
						<attack></attack>
						<evidence></evidence>
						<otherinfo></otherinfo>
					</instance>


					<instance>
						<uri>https://public-firing-range.appspot.com/reflected/url/href?q=a</uri>
						<method>GET</method>
						<param></param>
						<attack></attack>
						<evidence></evidence>
						<otherinfo></otherinfo>
					</instance>


					<instance>
						<uri>https://public-firing-range.appspot.com/reflected/url/object_data?q=a</uri>
						<method>GET</method>
						<param></param>
						<attack></attack>
						<evidence></evidence>
						<otherinfo></otherinfo>
					</instance>


					<instance>
						<uri>https://public-firing-range.appspot.com/reflected/url/object_param?q=a</uri>
						<method>GET</method>
						<param></param>
						<attack></attack>
						<evidence></evidence>
						<otherinfo></otherinfo>
					</instance>


					<instance>
						<uri>https://public-firing-range.appspot.com/reflected/url/script_src?q=a</uri>
						<method>GET</method>
						<param></param>
						<attack></attack>
						<evidence></evidence>
						<otherinfo></otherinfo>
					</instance>


					<instance>
						<uri>https://public-firing-range.appspot.com/remoteinclude/index.html</uri>
						<method>GET</method>
						<param></param>
						<attack></attack>
						<evidence></evidence>
						<otherinfo></otherinfo>
					</instance>


					<instance>
						<uri>https://public-firing-range.appspot.com/remoteinclude/object_hash.html</uri>
						<method>GET</method>
						<param></param>
						<attack></attack>
						<evidence></evidence>
						<otherinfo></otherinfo>
					</instance>


					<instance>
						<uri>
							https://public-firing-range.appspot.com/remoteinclude/parameter/object/application_x-shockwave-flash?q=https://google.com</uri>
						<method>GET</method>
						<param></param>
						<attack></attack>
						<evidence></evidence>
						<otherinfo></otherinfo>
					</instance>


					<instance>
						<uri>
							https://public-firing-range.appspot.com/remoteinclude/parameter/object_raw?q=https://google.com</uri>
						<method>GET</method>
						<param></param>
						<attack></attack>
						<evidence></evidence>
						<otherinfo></otherinfo>
					</instance>


					<instance>
						<uri>
							https://public-firing-range.appspot.com/remoteinclude/parameter/script?q=http://127.0.0.2/localhost_import.js</uri>
						<method>GET</method>
						<param></param>
						<attack></attack>
						<evidence></evidence>
						<otherinfo></otherinfo>
					</instance>


					<instance>
						<uri>
							https://public-firing-range.appspot.com/remoteinclude/parameter/script?q=http://192.168.1.2/private_network_import.js</uri>
						<method>GET</method>
						<param></param>
						<attack></attack>
						<evidence></evidence>
						<otherinfo></otherinfo>
					</instance>


					<instance>
						<uri>
							https://public-firing-range.appspot.com/remoteinclude/parameter/script?q=http://g00gle.com/typosquatting_domain.js</uri>
						<method>GET</method>
						<param></param>
						<attack></attack>
						<evidence></evidence>
						<otherinfo></otherinfo>
					</instance>


					<instance>
						<uri>
							https://public-firing-range.appspot.com/remoteinclude/parameter/script?q=https://google.com</uri>
						<method>GET</method>
						<param></param>
						<attack></attack>
						<evidence></evidence>
						<otherinfo></otherinfo>
					</instance>


					<instance>
						<uri>https://public-firing-range.appspot.com/remoteinclude/script_hash.html</uri>
						<method>GET</method>
						<param></param>
						<attack></attack>
						<evidence></evidence>
						<otherinfo></otherinfo>
					</instance>


					<instance>
						<uri>https://public-firing-range.appspot.com/reverseclickjacking/</uri>
						<method>GET</method>
						<param></param>
						<attack></attack>
						<evidence></evidence>
						<otherinfo></otherinfo>
					</instance>


					<instance>
						<uri>
							https://public-firing-range.appspot.com/reverseclickjacking/jsonpendpoint?callback=foo&amp;q</uri>
						<method>GET</method>
						<param></param>
						<attack></attack>
						<evidence></evidence>
						<otherinfo></otherinfo>
					</instance>


					<instance>
						<uri>
							https://public-firing-range.appspot.com/reverseclickjacking/jsonpendpoint?callback=urc_button.click&amp;q</uri>
						<method>GET</method>
						<param></param>
						<attack></attack>
						<evidence></evidence>
						<otherinfo></otherinfo>
					</instance>


					<instance>
						<uri>
							https://public-firing-range.appspot.com/reverseclickjacking/multipage/ParameterInFragment/InCallback/WithoutXFO/</uri>
						<method>GET</method>
						<param></param>
						<attack></attack>
						<evidence></evidence>
						<otherinfo></otherinfo>
					</instance>


					<instance>
						<uri>
							https://public-firing-range.appspot.com/reverseclickjacking/multipage/ParameterInFragment/InCallback/WithXFO/</uri>
						<method>GET</method>
						<param></param>
						<attack></attack>
						<evidence></evidence>
						<otherinfo></otherinfo>
					</instance>


					<instance>
						<uri>
							https://public-firing-range.appspot.com/reverseclickjacking/multipage/ParameterInFragment/OtherParameter/WithoutXFO/</uri>
						<method>GET</method>
						<param></param>
						<attack></attack>
						<evidence></evidence>
						<otherinfo></otherinfo>
					</instance>


					<instance>
						<uri>
							https://public-firing-range.appspot.com/reverseclickjacking/multipage/ParameterInFragment/OtherParameter/WithXFO/</uri>
						<method>GET</method>
						<param></param>
						<attack></attack>
						<evidence></evidence>
						<otherinfo></otherinfo>
					</instance>


					<instance>
						<uri>
							https://public-firing-range.appspot.com/reverseclickjacking/multipage/ParameterInQuery/InCallback/WithoutXFO/?q=foo</uri>
						<method>GET</method>
						<param></param>
						<attack></attack>
						<evidence></evidence>
						<otherinfo></otherinfo>
					</instance>


					<instance>
						<uri>
							https://public-firing-range.appspot.com/reverseclickjacking/multipage/ParameterInQuery/InCallback/WithXFO/?q=foo</uri>
						<method>GET</method>
						<param></param>
						<attack></attack>
						<evidence></evidence>
						<otherinfo></otherinfo>
					</instance>


					<instance>
						<uri>
							https://public-firing-range.appspot.com/reverseclickjacking/multipage/ParameterInQuery/OtherParameter/WithoutXFO/?q=%26callback%3Dfoo%23</uri>
						<method>GET</method>
						<param></param>
						<attack></attack>
						<evidence></evidence>
						<otherinfo></otherinfo>
					</instance>


					<instance>
						<uri>
							https://public-firing-range.appspot.com/reverseclickjacking/multipage/ParameterInQuery/OtherParameter/WithXFO/?q=%26callback%3Dfoo%23</uri>
						<method>GET</method>
						<param></param>
						<attack></attack>
						<evidence></evidence>
						<otherinfo></otherinfo>
					</instance>


					<instance>
						<uri>
							https://public-firing-range.appspot.com/reverseclickjacking/singlepage/ParameterInFragment/InCallback/</uri>
						<method>GET</method>
						<param></param>
						<attack></attack>
						<evidence></evidence>
						<otherinfo></otherinfo>
					</instance>


					<instance>
						<uri>
							https://public-firing-range.appspot.com/reverseclickjacking/singlepage/ParameterInFragment/OtherParameter/</uri>
						<method>GET</method>
						<param></param>
						<attack></attack>
						<evidence></evidence>
						<otherinfo></otherinfo>
					</instance>


					<instance>
						<uri>
							https://public-firing-range.appspot.com/reverseclickjacking/singlepage/ParameterInQuery/InCallback/?q=urc_button.click</uri>
						<method>GET</method>
						<param></param>
						<attack></attack>
						<evidence></evidence>
						<otherinfo></otherinfo>
					</instance>


					<instance>
						<uri>
							https://public-firing-range.appspot.com/reverseclickjacking/singlepage/ParameterInQuery/OtherParameter/?q=%26callback%3Durc_button.click%23</uri>
						<method>GET</method>
						<param></param>
						<attack></attack>
						<evidence></evidence>
						<otherinfo></otherinfo>
					</instance>


					<instance>
						<uri>https://public-firing-range.appspot.com/robots.txt</uri>
						<method>GET</method>
						<param></param>
						<attack></attack>
						<evidence></evidence>
						<otherinfo></otherinfo>
					</instance>


					<instance>
						<uri>https://public-firing-range.appspot.com/script</uri>
						<method>GET</method>
						<param></param>
						<attack></attack>
						<evidence></evidence>
						<otherinfo></otherinfo>
					</instance>


					<instance>
						<uri>https://public-firing-range.appspot.com/sitemap.xml</uri>
						<method>GET</method>
						<param></param>
						<attack></attack>
						<evidence></evidence>
						<otherinfo></otherinfo>
					</instance>


					<instance>
						<uri>https://public-firing-range.appspot.com/tags/a/href?q=a</uri>
						<method>GET</method>
						<param></param>
						<attack></attack>
						<evidence></evidence>
						<otherinfo></otherinfo>
					</instance>


					<instance>
						<uri>https://public-firing-range.appspot.com/tags/a/style?q=a</uri>
						<method>GET</method>
						<param></param>
						<attack></attack>
						<evidence></evidence>
						<otherinfo></otherinfo>
					</instance>


					<instance>
						<uri>https://public-firing-range.appspot.com/tags/body/onload?q=a</uri>
						<method>GET</method>
						<param></param>
						<attack></attack>
						<evidence></evidence>
						<otherinfo></otherinfo>
					</instance>


					<instance>
						<uri>https://public-firing-range.appspot.com/tags/div/style?q=a</uri>
						<method>GET</method>
						<param></param>
						<attack></attack>
						<evidence></evidence>
						<otherinfo></otherinfo>
					</instance>


					<instance>
						<uri>https://public-firing-range.appspot.com/tags/div?q=a</uri>
						<method>GET</method>
						<param></param>
						<attack></attack>
						<evidence></evidence>
						<otherinfo></otherinfo>
					</instance>


					<instance>
						<uri>https://public-firing-range.appspot.com/tags/expression?q=a</uri>
						<method>GET</method>
						<param></param>
						<attack></attack>
						<evidence></evidence>
						<otherinfo></otherinfo>
					</instance>


					<instance>
						<uri>https://public-firing-range.appspot.com/tags/iframe?q=a</uri>
						<method>GET</method>
						<param></param>
						<attack></attack>
						<evidence></evidence>
						<otherinfo></otherinfo>
					</instance>


					<instance>
						<uri>https://public-firing-range.appspot.com/tags/img?q=a</uri>
						<method>GET</method>
						<param></param>
						<attack></attack>
						<evidence></evidence>
						<otherinfo></otherinfo>
					</instance>


					<instance>
						<uri>https://public-firing-range.appspot.com/tags/index.html</uri>
						<method>GET</method>
						<param></param>
						<attack></attack>
						<evidence></evidence>
						<otherinfo></otherinfo>
					</instance>


					<instance>
						<uri>https://public-firing-range.appspot.com/tags/meta?q=a</uri>
						<method>GET</method>
						<param></param>
						<attack></attack>
						<evidence></evidence>
						<otherinfo></otherinfo>
					</instance>


					<instance>
						<uri>https://public-firing-range.appspot.com/tags/multiline?q=a</uri>
						<method>GET</method>
						<param></param>
						<attack></attack>
						<evidence></evidence>
						<otherinfo></otherinfo>
					</instance>


					<instance>
						<uri>https://public-firing-range.appspot.com/tags/script/src?q=a</uri>
						<method>GET</method>
						<param></param>
						<attack></attack>
						<evidence></evidence>
						<otherinfo></otherinfo>
					</instance>


					<instance>
						<uri>https://public-firing-range.appspot.com/tags/style?q=a</uri>
						<method>GET</method>
						<param></param>
						<attack></attack>
						<evidence></evidence>
						<otherinfo></otherinfo>
					</instance>


					<instance>
						<uri>https://public-firing-range.appspot.com/tags?q=a</uri>
						<method>GET</method>
						<param></param>
						<attack></attack>
						<evidence></evidence>
						<otherinfo></otherinfo>
					</instance>


					<instance>
						<uri>https://public-firing-range.appspot.com/urldom/index.html</uri>
						<method>GET</method>
						<param></param>
						<attack></attack>
						<evidence></evidence>
						<otherinfo></otherinfo>
					</instance>


					<instance>
						<uri>https://public-firing-range.appspot.com/urldom/jsonp?callback=foo</uri>
						<method>GET</method>
						<param></param>
						<attack></attack>
						<evidence></evidence>
						<otherinfo></otherinfo>
					</instance>


					<instance>
						<uri>https://public-firing-range.appspot.com/urldom/jsonp?callback=foobar</uri>
						<method>GET</method>
						<param></param>
						<attack></attack>
						<evidence></evidence>
						<otherinfo></otherinfo>
					</instance>


					<instance>
						<uri>https://public-firing-range.appspot.com/urldom/location/hash/a.href</uri>
						<method>GET</method>
						<param></param>
						<attack></attack>
						<evidence></evidence>
						<otherinfo></otherinfo>
					</instance>


					<instance>
						<uri>https://public-firing-range.appspot.com/urldom/location/hash/base.href</uri>
						<method>GET</method>
						<param></param>
						<attack></attack>
						<evidence></evidence>
						<otherinfo></otherinfo>
					</instance>


					<instance>
						<uri>
							https://public-firing-range.appspot.com/urldom/location/hash/document.location</uri>
						<method>GET</method>
						<param></param>
						<attack></attack>
						<evidence></evidence>
						<otherinfo></otherinfo>
					</instance>


					<instance>
						<uri>https://public-firing-range.appspot.com/urldom/location/hash/embed.src</uri>
						<method>GET</method>
						<param></param>
						<attack></attack>
						<evidence></evidence>
						<otherinfo></otherinfo>
					</instance>


					<instance>
						<uri>https://public-firing-range.appspot.com/urldom/location/hash/fetch</uri>
						<method>GET</method>
						<param></param>
						<attack></attack>
						<evidence></evidence>
						<otherinfo></otherinfo>
					</instance>


					<instance>
						<uri>
							https://public-firing-range.appspot.com/urldom/location/hash/form.action</uri>
						<method>GET</method>
						<param></param>
						<attack></attack>
						<evidence></evidence>
						<otherinfo></otherinfo>
					</instance>


					<instance>
						<uri>https://public-firing-range.appspot.com/urldom/location/hash/iframe.src</uri>
						<method>GET</method>
						<param></param>
						<attack></attack>
						<evidence></evidence>
						<otherinfo></otherinfo>
					</instance>


					<instance>
						<uri>
							https://public-firing-range.appspot.com/urldom/location/hash/input.formaction</uri>
						<method>GET</method>
						<param></param>
						<attack></attack>
						<evidence></evidence>
						<otherinfo></otherinfo>
					</instance>


					<instance>
						<uri>https://public-firing-range.appspot.com/urldom/location/hash/link.href</uri>
						<method>GET</method>
						<param></param>
						<attack></attack>
						<evidence></evidence>
						<otherinfo></otherinfo>
					</instance>


					<instance>
						<uri>
							https://public-firing-range.appspot.com/urldom/location/hash/object.data</uri>
						<method>GET</method>
						<param></param>
						<attack></attack>
						<evidence></evidence>
						<otherinfo></otherinfo>
					</instance>


					<instance>
						<uri>
							https://public-firing-range.appspot.com/urldom/location/hash/param.code.value</uri>
						<method>GET</method>
						<param></param>
						<attack></attack>
						<evidence></evidence>
						<otherinfo></otherinfo>
					</instance>


					<instance>
						<uri>
							https://public-firing-range.appspot.com/urldom/location/hash/param.movie.value</uri>
						<method>GET</method>
						<param></param>
						<attack></attack>
						<evidence></evidence>
						<otherinfo></otherinfo>
					</instance>


					<instance>
						<uri>
							https://public-firing-range.appspot.com/urldom/location/hash/param.src.value</uri>
						<method>GET</method>
						<param></param>
						<attack></attack>
						<evidence></evidence>
						<otherinfo></otherinfo>
					</instance>


					<instance>
						<uri>
							https://public-firing-range.appspot.com/urldom/location/hash/param.url.value</uri>
						<method>GET</method>
						<param></param>
						<attack></attack>
						<evidence></evidence>
						<otherinfo></otherinfo>
					</instance>


					<instance>
						<uri>
							https://public-firing-range.appspot.com/urldom/location/hash/script.href</uri>
						<method>GET</method>
						<param></param>
						<attack></attack>
						<evidence></evidence>
						<otherinfo></otherinfo>
					</instance>


					<instance>
						<uri>https://public-firing-range.appspot.com/urldom/location/hash/script.src</uri>
						<method>GET</method>
						<param></param>
						<attack></attack>
						<evidence></evidence>
						<otherinfo></otherinfo>
					</instance>


					<instance>
						<uri>
							https://public-firing-range.appspot.com/urldom/location/hash/script.src.partial_domain</uri>
						<method>GET</method>
						<param></param>
						<attack></attack>
						<evidence></evidence>
						<otherinfo></otherinfo>
					</instance>


					<instance>
						<uri>
							https://public-firing-range.appspot.com/urldom/location/hash/script.src.partial_path</uri>
						<method>GET</method>
						<param></param>
						<attack></attack>
						<evidence></evidence>
						<otherinfo></otherinfo>
					</instance>


					<instance>
						<uri>
							https://public-firing-range.appspot.com/urldom/location/hash/script.src.partial_query</uri>
						<method>GET</method>
						<param></param>
						<attack></attack>
						<evidence></evidence>
						<otherinfo></otherinfo>
					</instance>


					<instance>
						<uri>
							https://public-firing-range.appspot.com/urldom/location/hash/window.open</uri>
						<method>GET</method>
						<param></param>
						<attack></attack>
						<evidence></evidence>
						<otherinfo></otherinfo>
					</instance>


					<instance>
						<uri>https://public-firing-range.appspot.com/urldom/location/hash/xhr.open</uri>
						<method>GET</method>
						<param></param>
						<attack></attack>
						<evidence></evidence>
						<otherinfo></otherinfo>
					</instance>


					<instance>
						<uri>
							https://public-firing-range.appspot.com/urldom/location/search/area.href?//example.org</uri>
						<method>GET</method>
						<param></param>
						<attack></attack>
						<evidence></evidence>
						<otherinfo></otherinfo>
					</instance>


					<instance>
						<uri>
							https://public-firing-range.appspot.com/urldom/location/search/button.formaction?//example.org</uri>
						<method>GET</method>
						<param></param>
						<attack></attack>
						<evidence></evidence>
						<otherinfo></otherinfo>
					</instance>


					<instance>
						<uri>
							https://public-firing-range.appspot.com/urldom/location/search/frame.src?//example.org</uri>
						<method>GET</method>
						<param></param>
						<attack></attack>
						<evidence></evidence>
						<otherinfo></otherinfo>
					</instance>


					<instance>
						<uri>
							https://public-firing-range.appspot.com/urldom/location/search/location.assign?//example.org</uri>
						<method>GET</method>
						<param></param>
						<attack></attack>
						<evidence></evidence>
						<otherinfo></otherinfo>
					</instance>


					<instance>
						<uri>
							https://public-firing-range.appspot.com/urldom/location/search/svg.a?//example.org</uri>
						<method>GET</method>
						<param></param>
						<attack></attack>
						<evidence></evidence>
						<otherinfo></otherinfo>
					</instance>


					<instance>
						<uri>
							https://public-firing-range.appspot.com/urldom/redirect?url=http://example.com</uri>
						<method>GET</method>
						<param></param>
						<attack></attack>
						<evidence></evidence>
						<otherinfo></otherinfo>
					</instance>


					<instance>
						<uri>https://public-firing-range.appspot.com/vulnerablelibraries/index.html</uri>
						<method>GET</method>
						<param></param>
						<attack></attack>
						<evidence></evidence>
						<otherinfo></otherinfo>
					</instance>


					<instance>
						<uri>https://public-firing-range.appspot.com/vulnerablelibraries/jquery.html</uri>
						<method>GET</method>
						<param></param>
						<attack></attack>
						<evidence></evidence>
						<otherinfo></otherinfo>
					</instance>


					<instance>
						<uri>https://public-firing-range.appspot.com/vulnerablelibraries/x</uri>
						<method>GET</method>
						<param></param>
						<attack></attack>
						<evidence></evidence>
						<otherinfo></otherinfo>
					</instance>


					<instance>
						<uri>
							https://public-firing-range.appspot.com/angular/angular_body_raw_post/1.6.0</uri>
						<method>POST</method>
						<param></param>
						<attack></attack>
						<evidence></evidence>
						<otherinfo></otherinfo>
					</instance>


					<instance>
						<uri>https://public-firing-range.appspot.com/reflected/parameter/form</uri>
						<method>POST</method>
						<param></param>
						<attack></attack>
						<evidence></evidence>
						<otherinfo></otherinfo>
					</instance>

				</instances>
				<count>309</count>
				<solution>&lt;p&gt;Ensure that your web server, application server, load balancer,
					etc. is configured to enforce Strict-Transport-Security.&lt;/p&gt;</solution>
				<otherinfo></otherinfo>
				<reference>
					&lt;p&gt;https://cheatsheetseries.owasp.org/cheatsheets/HTTP_Strict_Transport_Security_Cheat_Sheet.html&lt;/p&gt;&lt;p&gt;https://owasp.org/www-community/Security_Headers&lt;/p&gt;&lt;p&gt;http://en.wikipedia.org/wiki/HTTP_Strict_Transport_Security&lt;/p&gt;&lt;p&gt;http://caniuse.com/stricttransportsecurity&lt;/p&gt;&lt;p&gt;http://tools.ietf.org/html/rfc6797&lt;/p&gt;</reference>
				<cweid>319</cweid>
				<wascid>15</wascid>
				<sourceid>6</sourceid>
			</alertitem>


			<alertitem>
				<pluginid>10021</pluginid>
				<alertRef>10021</alertRef>
				<alert>X-Content-Type-Options Header Missing</alert>
				<name>X-Content-Type-Options Header Missing</name>
				<riskcode>1</riskcode>
				<confidence>2</confidence>
				<riskdesc>Low (Medium)</riskdesc>
				<confidencedesc>Medium</confidencedesc>
				<desc>&lt;p&gt;The Anti-MIME-Sniffing header X-Content-Type-Options was not set to
					&apos;nosniff&apos;. This allows older versions of Internet Explorer and Chrome
					to perform MIME-sniffing on the response body, potentially causing the response
					body to be interpreted and displayed as a content type other than the declared
					content type. Current (early 2014) and legacy versions of Firefox will use the
					declared content type (if one is set), rather than performing
					MIME-sniffing.&lt;/p&gt;</desc>
				<instances>

					<instance>
						<uri>https://public-firing-range.appspot.com</uri>
						<method>GET</method>
						<param>X-Content-Type-Options</param>
						<attack></attack>
						<evidence></evidence>
						<otherinfo>This issue still applies to error type pages (401, 403, 500,
							etc.) as those pages are often still affected by injection issues, in
							which case there is still concern for browsers sniffing pages away from
							their actual content type.
							At &quot;High&quot; threshold this scan rule will not alert on client or
							server error responses.</otherinfo>
					</instance>


					<instance>
						<uri>https://public-firing-range.appspot.com/</uri>
						<method>GET</method>
						<param>X-Content-Type-Options</param>
						<attack></attack>
						<evidence></evidence>
						<otherinfo>This issue still applies to error type pages (401, 403, 500,
							etc.) as those pages are often still affected by injection issues, in
							which case there is still concern for browsers sniffing pages away from
							their actual content type.
							At &quot;High&quot; threshold this scan rule will not alert on client or
							server error responses.</otherinfo>
					</instance>


					<instance>
						<uri>https://public-firing-range.appspot.com/address/baseURI/documentwrite</uri>
						<method>GET</method>
						<param>X-Content-Type-Options</param>
						<attack></attack>
						<evidence></evidence>
						<otherinfo>This issue still applies to error type pages (401, 403, 500,
							etc.) as those pages are often still affected by injection issues, in
							which case there is still concern for browsers sniffing pages away from
							their actual content type.
							At &quot;High&quot; threshold this scan rule will not alert on client or
							server error responses.</otherinfo>
					</instance>


					<instance>
						<uri>
							https://public-firing-range.appspot.com/address/documentURI/documentwrite</uri>
						<method>GET</method>
						<param>X-Content-Type-Options</param>
						<attack></attack>
						<evidence></evidence>
						<otherinfo>This issue still applies to error type pages (401, 403, 500,
							etc.) as those pages are often still affected by injection issues, in
							which case there is still concern for browsers sniffing pages away from
							their actual content type.
							At &quot;High&quot; threshold this scan rule will not alert on client or
							server error responses.</otherinfo>
					</instance>


					<instance>
						<uri>https://public-firing-range.appspot.com/address/index.html</uri>
						<method>GET</method>
						<param>X-Content-Type-Options</param>
						<attack></attack>
						<evidence></evidence>
						<otherinfo>This issue still applies to error type pages (401, 403, 500,
							etc.) as those pages are often still affected by injection issues, in
							which case there is still concern for browsers sniffing pages away from
							their actual content type.
							At &quot;High&quot; threshold this scan rule will not alert on client or
							server error responses.</otherinfo>
					</instance>


					<instance>
						<uri>https://public-firing-range.appspot.com/address/location.hash/assign</uri>
						<method>GET</method>
						<param>X-Content-Type-Options</param>
						<attack></attack>
						<evidence></evidence>
						<otherinfo>This issue still applies to error type pages (401, 403, 500,
							etc.) as those pages are often still affected by injection issues, in
							which case there is still concern for browsers sniffing pages away from
							their actual content type.
							At &quot;High&quot; threshold this scan rule will not alert on client or
							server error responses.</otherinfo>
					</instance>


					<instance>
						<uri>
							https://public-firing-range.appspot.com/address/location.hash/documentwrite</uri>
						<method>GET</method>
						<param>X-Content-Type-Options</param>
						<attack></attack>
						<evidence></evidence>
						<otherinfo>This issue still applies to error type pages (401, 403, 500,
							etc.) as those pages are often still affected by injection issues, in
							which case there is still concern for browsers sniffing pages away from
							their actual content type.
							At &quot;High&quot; threshold this scan rule will not alert on client or
							server error responses.</otherinfo>
					</instance>


					<instance>
						<uri>
							https://public-firing-range.appspot.com/address/location.hash/documentwriteln</uri>
						<method>GET</method>
						<param>X-Content-Type-Options</param>
						<attack></attack>
						<evidence></evidence>
						<otherinfo>This issue still applies to error type pages (401, 403, 500,
							etc.) as those pages are often still affected by injection issues, in
							which case there is still concern for browsers sniffing pages away from
							their actual content type.
							At &quot;High&quot; threshold this scan rule will not alert on client or
							server error responses.</otherinfo>
					</instance>


					<instance>
						<uri>https://public-firing-range.appspot.com/address/location.hash/eval</uri>
						<method>GET</method>
						<param>X-Content-Type-Options</param>
						<attack></attack>
						<evidence></evidence>
						<otherinfo>This issue still applies to error type pages (401, 403, 500,
							etc.) as those pages are often still affected by injection issues, in
							which case there is still concern for browsers sniffing pages away from
							their actual content type.
							At &quot;High&quot; threshold this scan rule will not alert on client or
							server error responses.</otherinfo>
					</instance>


					<instance>
						<uri>
							https://public-firing-range.appspot.com/address/location.hash/formaction</uri>
						<method>GET</method>
						<param>X-Content-Type-Options</param>
						<attack></attack>
						<evidence></evidence>
						<otherinfo>This issue still applies to error type pages (401, 403, 500,
							etc.) as those pages are often still affected by injection issues, in
							which case there is still concern for browsers sniffing pages away from
							their actual content type.
							At &quot;High&quot; threshold this scan rule will not alert on client or
							server error responses.</otherinfo>
					</instance>


					<instance>
						<uri>https://public-firing-range.appspot.com/address/location.hash/function</uri>
						<method>GET</method>
						<param>X-Content-Type-Options</param>
						<attack></attack>
						<evidence></evidence>
						<otherinfo>This issue still applies to error type pages (401, 403, 500,
							etc.) as those pages are often still affected by injection issues, in
							which case there is still concern for browsers sniffing pages away from
							their actual content type.
							At &quot;High&quot; threshold this scan rule will not alert on client or
							server error responses.</otherinfo>
					</instance>


					<instance>
						<uri>
							https://public-firing-range.appspot.com/address/location.hash/inlineevent</uri>
						<method>GET</method>
						<param>X-Content-Type-Options</param>
						<attack></attack>
						<evidence></evidence>
						<otherinfo>This issue still applies to error type pages (401, 403, 500,
							etc.) as those pages are often still affected by injection issues, in
							which case there is still concern for browsers sniffing pages away from
							their actual content type.
							At &quot;High&quot; threshold this scan rule will not alert on client or
							server error responses.</otherinfo>
					</instance>


					<instance>
						<uri>https://public-firing-range.appspot.com/address/location.hash/innerHtml</uri>
						<method>GET</method>
						<param>X-Content-Type-Options</param>
						<attack></attack>
						<evidence></evidence>
						<otherinfo>This issue still applies to error type pages (401, 403, 500,
							etc.) as those pages are often still affected by injection issues, in
							which case there is still concern for browsers sniffing pages away from
							their actual content type.
							At &quot;High&quot; threshold this scan rule will not alert on client or
							server error responses.</otherinfo>
					</instance>


					<instance>
						<uri>https://public-firing-range.appspot.com/address/location.hash/jshref</uri>
						<method>GET</method>
						<param>X-Content-Type-Options</param>
						<attack></attack>
						<evidence></evidence>
						<otherinfo>This issue still applies to error type pages (401, 403, 500,
							etc.) as those pages are often still affected by injection issues, in
							which case there is still concern for browsers sniffing pages away from
							their actual content type.
							At &quot;High&quot; threshold this scan rule will not alert on client or
							server error responses.</otherinfo>
					</instance>


					<instance>
						<uri>
							https://public-firing-range.appspot.com/address/location.hash/onclickAddEventListener</uri>
						<method>GET</method>
						<param>X-Content-Type-Options</param>
						<attack></attack>
						<evidence></evidence>
						<otherinfo>This issue still applies to error type pages (401, 403, 500,
							etc.) as those pages are often still affected by injection issues, in
							which case there is still concern for browsers sniffing pages away from
							their actual content type.
							At &quot;High&quot; threshold this scan rule will not alert on client or
							server error responses.</otherinfo>
					</instance>


					<instance>
						<uri>
							https://public-firing-range.appspot.com/address/location.hash/onclickSetAttribute</uri>
						<method>GET</method>
						<param>X-Content-Type-Options</param>
						<attack></attack>
						<evidence></evidence>
						<otherinfo>This issue still applies to error type pages (401, 403, 500,
							etc.) as those pages are often still affected by injection issues, in
							which case there is still concern for browsers sniffing pages away from
							their actual content type.
							At &quot;High&quot; threshold this scan rule will not alert on client or
							server error responses.</otherinfo>
					</instance>


					<instance>
						<uri>
							https://public-firing-range.appspot.com/address/location.hash/rangeCreateContextualFragment</uri>
						<method>GET</method>
						<param>X-Content-Type-Options</param>
						<attack></attack>
						<evidence></evidence>
						<otherinfo>This issue still applies to error type pages (401, 403, 500,
							etc.) as those pages are often still affected by injection issues, in
							which case there is still concern for browsers sniffing pages away from
							their actual content type.
							At &quot;High&quot; threshold this scan rule will not alert on client or
							server error responses.</otherinfo>
					</instance>


					<instance>
						<uri>https://public-firing-range.appspot.com/address/location.hash/replace</uri>
						<method>GET</method>
						<param>X-Content-Type-Options</param>
						<attack></attack>
						<evidence></evidence>
						<otherinfo>This issue still applies to error type pages (401, 403, 500,
							etc.) as those pages are often still affected by injection issues, in
							which case there is still concern for browsers sniffing pages away from
							their actual content type.
							At &quot;High&quot; threshold this scan rule will not alert on client or
							server error responses.</otherinfo>
					</instance>


					<instance>
						<uri>
							https://public-firing-range.appspot.com/address/location.hash/setTimeout</uri>
						<method>GET</method>
						<param>X-Content-Type-Options</param>
						<attack></attack>
						<evidence></evidence>
						<otherinfo>This issue still applies to error type pages (401, 403, 500,
							etc.) as those pages are often still affected by injection issues, in
							which case there is still concern for browsers sniffing pages away from
							their actual content type.
							At &quot;High&quot; threshold this scan rule will not alert on client or
							server error responses.</otherinfo>
					</instance>


					<instance>
						<uri>https://public-firing-range.appspot.com/address/location/assign</uri>
						<method>GET</method>
						<param>X-Content-Type-Options</param>
						<attack></attack>
						<evidence></evidence>
						<otherinfo>This issue still applies to error type pages (401, 403, 500,
							etc.) as those pages are often still affected by injection issues, in
							which case there is still concern for browsers sniffing pages away from
							their actual content type.
							At &quot;High&quot; threshold this scan rule will not alert on client or
							server error responses.</otherinfo>
					</instance>


					<instance>
						<uri>https://public-firing-range.appspot.com/address/location/documentwrite</uri>
						<method>GET</method>
						<param>X-Content-Type-Options</param>
						<attack></attack>
						<evidence></evidence>
						<otherinfo>This issue still applies to error type pages (401, 403, 500,
							etc.) as those pages are often still affected by injection issues, in
							which case there is still concern for browsers sniffing pages away from
							their actual content type.
							At &quot;High&quot; threshold this scan rule will not alert on client or
							server error responses.</otherinfo>
					</instance>


					<instance>
						<uri>
							https://public-firing-range.appspot.com/address/location/documentwriteln</uri>
						<method>GET</method>
						<param>X-Content-Type-Options</param>
						<attack></attack>
						<evidence></evidence>
						<otherinfo>This issue still applies to error type pages (401, 403, 500,
							etc.) as those pages are often still affected by injection issues, in
							which case there is still concern for browsers sniffing pages away from
							their actual content type.
							At &quot;High&quot; threshold this scan rule will not alert on client or
							server error responses.</otherinfo>
					</instance>


					<instance>
						<uri>https://public-firing-range.appspot.com/address/location/eval</uri>
						<method>GET</method>
						<param>X-Content-Type-Options</param>
						<attack></attack>
						<evidence></evidence>
						<otherinfo>This issue still applies to error type pages (401, 403, 500,
							etc.) as those pages are often still affected by injection issues, in
							which case there is still concern for browsers sniffing pages away from
							their actual content type.
							At &quot;High&quot; threshold this scan rule will not alert on client or
							server error responses.</otherinfo>
					</instance>


					<instance>
						<uri>https://public-firing-range.appspot.com/address/location/innerHtml</uri>
						<method>GET</method>
						<param>X-Content-Type-Options</param>
						<attack></attack>
						<evidence></evidence>
						<otherinfo>This issue still applies to error type pages (401, 403, 500,
							etc.) as those pages are often still affected by injection issues, in
							which case there is still concern for browsers sniffing pages away from
							their actual content type.
							At &quot;High&quot; threshold this scan rule will not alert on client or
							server error responses.</otherinfo>
					</instance>


					<instance>
						<uri>
							https://public-firing-range.appspot.com/address/location/rangeCreateContextualFragment</uri>
						<method>GET</method>
						<param>X-Content-Type-Options</param>
						<attack></attack>
						<evidence></evidence>
						<otherinfo>This issue still applies to error type pages (401, 403, 500,
							etc.) as those pages are often still affected by injection issues, in
							which case there is still concern for browsers sniffing pages away from
							their actual content type.
							At &quot;High&quot; threshold this scan rule will not alert on client or
							server error responses.</otherinfo>
					</instance>


					<instance>
						<uri>https://public-firing-range.appspot.com/address/location/replace</uri>
						<method>GET</method>
						<param>X-Content-Type-Options</param>
						<attack></attack>
						<evidence></evidence>
						<otherinfo>This issue still applies to error type pages (401, 403, 500,
							etc.) as those pages are often still affected by injection issues, in
							which case there is still concern for browsers sniffing pages away from
							their actual content type.
							At &quot;High&quot; threshold this scan rule will not alert on client or
							server error responses.</otherinfo>
					</instance>


					<instance>
						<uri>https://public-firing-range.appspot.com/address/location/setTimeout</uri>
						<method>GET</method>
						<param>X-Content-Type-Options</param>
						<attack></attack>
						<evidence></evidence>
						<otherinfo>This issue still applies to error type pages (401, 403, 500,
							etc.) as those pages are often still affected by injection issues, in
							which case there is still concern for browsers sniffing pages away from
							their actual content type.
							At &quot;High&quot; threshold this scan rule will not alert on client or
							server error responses.</otherinfo>
					</instance>


					<instance>
						<uri>
							https://public-firing-range.appspot.com/address/locationhref/documentwrite</uri>
						<method>GET</method>
						<param>X-Content-Type-Options</param>
						<attack></attack>
						<evidence></evidence>
						<otherinfo>This issue still applies to error type pages (401, 403, 500,
							etc.) as those pages are often still affected by injection issues, in
							which case there is still concern for browsers sniffing pages away from
							their actual content type.
							At &quot;High&quot; threshold this scan rule will not alert on client or
							server error responses.</otherinfo>
					</instance>


					<instance>
						<uri>
							https://public-firing-range.appspot.com/address/locationpathname/documentwrite</uri>
						<method>GET</method>
						<param>X-Content-Type-Options</param>
						<attack></attack>
						<evidence></evidence>
						<otherinfo>This issue still applies to error type pages (401, 403, 500,
							etc.) as those pages are often still affected by injection issues, in
							which case there is still concern for browsers sniffing pages away from
							their actual content type.
							At &quot;High&quot; threshold this scan rule will not alert on client or
							server error responses.</otherinfo>
					</instance>


					<instance>
						<uri>
							https://public-firing-range.appspot.com/address/locationsearch/documentwrite</uri>
						<method>GET</method>
						<param>X-Content-Type-Options</param>
						<attack></attack>
						<evidence></evidence>
						<otherinfo>This issue still applies to error type pages (401, 403, 500,
							etc.) as those pages are often still affected by injection issues, in
							which case there is still concern for browsers sniffing pages away from
							their actual content type.
							At &quot;High&quot; threshold this scan rule will not alert on client or
							server error responses.</otherinfo>
					</instance>


					<instance>
						<uri>https://public-firing-range.appspot.com/address/URL/documentwrite</uri>
						<method>GET</method>
						<param>X-Content-Type-Options</param>
						<attack></attack>
						<evidence></evidence>
						<otherinfo>This issue still applies to error type pages (401, 403, 500,
							etc.) as those pages are often still affected by injection issues, in
							which case there is still concern for browsers sniffing pages away from
							their actual content type.
							At &quot;High&quot; threshold this scan rule will not alert on client or
							server error responses.</otherinfo>
					</instance>


					<instance>
						<uri>
							https://public-firing-range.appspot.com/address/URLUnencoded/documentwrite</uri>
						<method>GET</method>
						<param>X-Content-Type-Options</param>
						<attack></attack>
						<evidence></evidence>
						<otherinfo>This issue still applies to error type pages (401, 403, 500,
							etc.) as those pages are often still affected by injection issues, in
							which case there is still concern for browsers sniffing pages away from
							their actual content type.
							At &quot;High&quot; threshold this scan rule will not alert on client or
							server error responses.</otherinfo>
					</instance>


					<instance>
						<uri>
							https://public-firing-range.appspot.com/angular/angular_body/1.1.5?q=test</uri>
						<method>GET</method>
						<param>X-Content-Type-Options</param>
						<attack></attack>
						<evidence></evidence>
						<otherinfo>This issue still applies to error type pages (401, 403, 500,
							etc.) as those pages are often still affected by injection issues, in
							which case there is still concern for browsers sniffing pages away from
							their actual content type.
							At &quot;High&quot; threshold this scan rule will not alert on client or
							server error responses.</otherinfo>
					</instance>


					<instance>
						<uri>
							https://public-firing-range.appspot.com/angular/angular_body/1.2.0?q=test</uri>
						<method>GET</method>
						<param>X-Content-Type-Options</param>
						<attack></attack>
						<evidence></evidence>
						<otherinfo>This issue still applies to error type pages (401, 403, 500,
							etc.) as those pages are often still affected by injection issues, in
							which case there is still concern for browsers sniffing pages away from
							their actual content type.
							At &quot;High&quot; threshold this scan rule will not alert on client or
							server error responses.</otherinfo>
					</instance>


					<instance>
						<uri>
							https://public-firing-range.appspot.com/angular/angular_body/1.2.18?q=test</uri>
						<method>GET</method>
						<param>X-Content-Type-Options</param>
						<attack></attack>
						<evidence></evidence>
						<otherinfo>This issue still applies to error type pages (401, 403, 500,
							etc.) as those pages are often still affected by injection issues, in
							which case there is still concern for browsers sniffing pages away from
							their actual content type.
							At &quot;High&quot; threshold this scan rule will not alert on client or
							server error responses.</otherinfo>
					</instance>


					<instance>
						<uri>
							https://public-firing-range.appspot.com/angular/angular_body/1.2.19?q=test</uri>
						<method>GET</method>
						<param>X-Content-Type-Options</param>
						<attack></attack>
						<evidence></evidence>
						<otherinfo>This issue still applies to error type pages (401, 403, 500,
							etc.) as those pages are often still affected by injection issues, in
							which case there is still concern for browsers sniffing pages away from
							their actual content type.
							At &quot;High&quot; threshold this scan rule will not alert on client or
							server error responses.</otherinfo>
					</instance>


					<instance>
						<uri>
							https://public-firing-range.appspot.com/angular/angular_body/1.2.24?q=test</uri>
						<method>GET</method>
						<param>X-Content-Type-Options</param>
						<attack></attack>
						<evidence></evidence>
						<otherinfo>This issue still applies to error type pages (401, 403, 500,
							etc.) as those pages are often still affected by injection issues, in
							which case there is still concern for browsers sniffing pages away from
							their actual content type.
							At &quot;High&quot; threshold this scan rule will not alert on client or
							server error responses.</otherinfo>
					</instance>


					<instance>
						<uri>
							https://public-firing-range.appspot.com/angular/angular_body/1.4.0?q=test</uri>
						<method>GET</method>
						<param>X-Content-Type-Options</param>
						<attack></attack>
						<evidence></evidence>
						<otherinfo>This issue still applies to error type pages (401, 403, 500,
							etc.) as those pages are often still affected by injection issues, in
							which case there is still concern for browsers sniffing pages away from
							their actual content type.
							At &quot;High&quot; threshold this scan rule will not alert on client or
							server error responses.</otherinfo>
					</instance>


					<instance>
						<uri>
							https://public-firing-range.appspot.com/angular/angular_body/1.6.0?q=test</uri>
						<method>GET</method>
						<param>X-Content-Type-Options</param>
						<attack></attack>
						<evidence></evidence>
						<otherinfo>This issue still applies to error type pages (401, 403, 500,
							etc.) as those pages are often still affected by injection issues, in
							which case there is still concern for browsers sniffing pages away from
							their actual content type.
							At &quot;High&quot; threshold this scan rule will not alert on client or
							server error responses.</otherinfo>
					</instance>


					<instance>
						<uri>
							https://public-firing-range.appspot.com/angular/angular_body_alt_symbols/1.4.0?q=test</uri>
						<method>GET</method>
						<param>X-Content-Type-Options</param>
						<attack></attack>
						<evidence></evidence>
						<otherinfo>This issue still applies to error type pages (401, 403, 500,
							etc.) as those pages are often still affected by injection issues, in
							which case there is still concern for browsers sniffing pages away from
							their actual content type.
							At &quot;High&quot; threshold this scan rule will not alert on client or
							server error responses.</otherinfo>
					</instance>


					<instance>
						<uri>
							https://public-firing-range.appspot.com/angular/angular_body_alt_symbols_raw/1.6.0?q=test</uri>
						<method>GET</method>
						<param>X-Content-Type-Options</param>
						<attack></attack>
						<evidence></evidence>
						<otherinfo>This issue still applies to error type pages (401, 403, 500,
							etc.) as those pages are often still affected by injection issues, in
							which case there is still concern for browsers sniffing pages away from
							their actual content type.
							At &quot;High&quot; threshold this scan rule will not alert on client or
							server error responses.</otherinfo>
					</instance>


					<instance>
						<uri>
							https://public-firing-range.appspot.com/angular/angular_body_attribute_ng/1.4.0?q=test</uri>
						<method>GET</method>
						<param>X-Content-Type-Options</param>
						<attack></attack>
						<evidence></evidence>
						<otherinfo>This issue still applies to error type pages (401, 403, 500,
							etc.) as those pages are often still affected by injection issues, in
							which case there is still concern for browsers sniffing pages away from
							their actual content type.
							At &quot;High&quot; threshold this scan rule will not alert on client or
							server error responses.</otherinfo>
					</instance>


					<instance>
						<uri>
							https://public-firing-range.appspot.com/angular/angular_body_attribute_non_ng/1.4.0?q=test</uri>
						<method>GET</method>
						<param>X-Content-Type-Options</param>
						<attack></attack>
						<evidence></evidence>
						<otherinfo>This issue still applies to error type pages (401, 403, 500,
							etc.) as those pages are often still affected by injection issues, in
							which case there is still concern for browsers sniffing pages away from
							their actual content type.
							At &quot;High&quot; threshold this scan rule will not alert on client or
							server error responses.</otherinfo>
					</instance>


					<instance>
						<uri>
							https://public-firing-range.appspot.com/angular/angular_body_attribute_non_ng_raw/1.4.0?q=test</uri>
						<method>GET</method>
						<param>X-Content-Type-Options</param>
						<attack></attack>
						<evidence></evidence>
						<otherinfo>This issue still applies to error type pages (401, 403, 500,
							etc.) as those pages are often still affected by injection issues, in
							which case there is still concern for browsers sniffing pages away from
							their actual content type.
							At &quot;High&quot; threshold this scan rule will not alert on client or
							server error responses.</otherinfo>
					</instance>


					<instance>
						<uri>
							https://public-firing-range.appspot.com/angular/angular_body_raw/1.4.0?q=test</uri>
						<method>GET</method>
						<param>X-Content-Type-Options</param>
						<attack></attack>
						<evidence></evidence>
						<otherinfo>This issue still applies to error type pages (401, 403, 500,
							etc.) as those pages are often still affected by injection issues, in
							which case there is still concern for browsers sniffing pages away from
							their actual content type.
							At &quot;High&quot; threshold this scan rule will not alert on client or
							server error responses.</otherinfo>
					</instance>


					<instance>
						<uri>
							https://public-firing-range.appspot.com/angular/angular_body_raw_escaped/1.4.0?q=test</uri>
						<method>GET</method>
						<param>X-Content-Type-Options</param>
						<attack></attack>
						<evidence></evidence>
						<otherinfo>This issue still applies to error type pages (401, 403, 500,
							etc.) as those pages are often still affected by injection issues, in
							which case there is still concern for browsers sniffing pages away from
							their actual content type.
							At &quot;High&quot; threshold this scan rule will not alert on client or
							server error responses.</otherinfo>
					</instance>


					<instance>
						<uri>
							https://public-firing-range.appspot.com/angular/angular_body_raw_escaped_alt_symbols/1.4.0?q=test</uri>
						<method>GET</method>
						<param>X-Content-Type-Options</param>
						<attack></attack>
						<evidence></evidence>
						<otherinfo>This issue still applies to error type pages (401, 403, 500,
							etc.) as those pages are often still affected by injection issues, in
							which case there is still concern for browsers sniffing pages away from
							their actual content type.
							At &quot;High&quot; threshold this scan rule will not alert on client or
							server error responses.</otherinfo>
					</instance>


					<instance>
						<uri>
							https://public-firing-range.appspot.com/angular/angular_body_raw_post/1.6.0</uri>
						<method>GET</method>
						<param>X-Content-Type-Options</param>
						<attack></attack>
						<evidence></evidence>
						<otherinfo>This issue still applies to error type pages (401, 403, 500,
							etc.) as those pages are often still affected by injection issues, in
							which case there is still concern for browsers sniffing pages away from
							their actual content type.
							At &quot;High&quot; threshold this scan rule will not alert on client or
							server error responses.</otherinfo>
					</instance>


					<instance>
						<uri>
							https://public-firing-range.appspot.com/angular/angular_cookie_parse/1.6.0</uri>
						<method>GET</method>
						<param>X-Content-Type-Options</param>
						<attack></attack>
						<evidence></evidence>
						<otherinfo>This issue still applies to error type pages (401, 403, 500,
							etc.) as those pages are often still affected by injection issues, in
							which case there is still concern for browsers sniffing pages away from
							their actual content type.
							At &quot;High&quot; threshold this scan rule will not alert on client or
							server error responses.</otherinfo>
					</instance>


					<instance>
						<uri>
							https://public-firing-range.appspot.com/angular/angular_form_parse/1.6.0</uri>
						<method>GET</method>
						<param>X-Content-Type-Options</param>
						<attack></attack>
						<evidence></evidence>
						<otherinfo>This issue still applies to error type pages (401, 403, 500,
							etc.) as those pages are often still affected by injection issues, in
							which case there is still concern for browsers sniffing pages away from
							their actual content type.
							At &quot;High&quot; threshold this scan rule will not alert on client or
							server error responses.</otherinfo>
					</instance>


					<instance>
						<uri>
							https://public-firing-range.appspot.com/angular/angular_post_message_parse/1.6.0</uri>
						<method>GET</method>
						<param>X-Content-Type-Options</param>
						<attack></attack>
						<evidence></evidence>
						<otherinfo>This issue still applies to error type pages (401, 403, 500,
							etc.) as those pages are often still affected by injection issues, in
							which case there is still concern for browsers sniffing pages away from
							their actual content type.
							At &quot;High&quot; threshold this scan rule will not alert on client or
							server error responses.</otherinfo>
					</instance>


					<instance>
						<uri>
							https://public-firing-range.appspot.com/angular/angular_storage_parse/1.6.0</uri>
						<method>GET</method>
						<param>X-Content-Type-Options</param>
						<attack></attack>
						<evidence></evidence>
						<otherinfo>This issue still applies to error type pages (401, 403, 500,
							etc.) as those pages are often still affected by injection issues, in
							which case there is still concern for browsers sniffing pages away from
							their actual content type.
							At &quot;High&quot; threshold this scan rule will not alert on client or
							server error responses.</otherinfo>
					</instance>


					<instance>
						<uri>https://public-firing-range.appspot.com/angular/index.html</uri>
						<method>GET</method>
						<param>X-Content-Type-Options</param>
						<attack></attack>
						<evidence></evidence>
						<otherinfo>This issue still applies to error type pages (401, 403, 500,
							etc.) as those pages are often still affected by injection issues, in
							which case there is still concern for browsers sniffing pages away from
							their actual content type.
							At &quot;High&quot; threshold this scan rule will not alert on client or
							server error responses.</otherinfo>
					</instance>


					<instance>
						<uri>https://public-firing-range.appspot.com/badscriptimport/index.html</uri>
						<method>GET</method>
						<param>X-Content-Type-Options</param>
						<attack></attack>
						<evidence></evidence>
						<otherinfo>This issue still applies to error type pages (401, 403, 500,
							etc.) as those pages are often still affected by injection issues, in
							which case there is still concern for browsers sniffing pages away from
							their actual content type.
							At &quot;High&quot; threshold this scan rule will not alert on client or
							server error responses.</otherinfo>
					</instance>


					<instance>
						<uri>
							https://public-firing-range.appspot.com/cors/alloworigin/allowInsecureScheme</uri>
						<method>GET</method>
						<param>X-Content-Type-Options</param>
						<attack></attack>
						<evidence></evidence>
						<otherinfo>This issue still applies to error type pages (401, 403, 500,
							etc.) as those pages are often still affected by injection issues, in
							which case there is still concern for browsers sniffing pages away from
							their actual content type.
							At &quot;High&quot; threshold this scan rule will not alert on client or
							server error responses.</otherinfo>
					</instance>


					<instance>
						<uri>
							https://public-firing-range.appspot.com/cors/alloworigin/allowNullOrigin</uri>
						<method>GET</method>
						<param>X-Content-Type-Options</param>
						<attack></attack>
						<evidence></evidence>
						<otherinfo>This issue still applies to error type pages (401, 403, 500,
							etc.) as those pages are often still affected by injection issues, in
							which case there is still concern for browsers sniffing pages away from
							their actual content type.
							At &quot;High&quot; threshold this scan rule will not alert on client or
							server error responses.</otherinfo>
					</instance>


					<instance>
						<uri>
							https://public-firing-range.appspot.com/cors/alloworigin/dynamicAllowOrigin</uri>
						<method>GET</method>
						<param>X-Content-Type-Options</param>
						<attack></attack>
						<evidence></evidence>
						<otherinfo>This issue still applies to error type pages (401, 403, 500,
							etc.) as those pages are often still affected by injection issues, in
							which case there is still concern for browsers sniffing pages away from
							their actual content type.
							At &quot;High&quot; threshold this scan rule will not alert on client or
							server error responses.</otherinfo>
					</instance>


					<instance>
						<uri>https://public-firing-range.appspot.com/cors/index.html</uri>
						<method>GET</method>
						<param>X-Content-Type-Options</param>
						<attack></attack>
						<evidence></evidence>
						<otherinfo>This issue still applies to error type pages (401, 403, 500,
							etc.) as those pages are often still affected by injection issues, in
							which case there is still concern for browsers sniffing pages away from
							their actual content type.
							At &quot;High&quot; threshold this scan rule will not alert on client or
							server error responses.</otherinfo>
					</instance>


					<instance>
						<uri>https://public-firing-range.appspot.com/dom/dompropagation/</uri>
						<method>GET</method>
						<param>X-Content-Type-Options</param>
						<attack></attack>
						<evidence></evidence>
						<otherinfo>This issue still applies to error type pages (401, 403, 500,
							etc.) as those pages are often still affected by injection issues, in
							which case there is still concern for browsers sniffing pages away from
							their actual content type.
							At &quot;High&quot; threshold this scan rule will not alert on client or
							server error responses.</otherinfo>
					</instance>


					<instance>
						<uri>
							https://public-firing-range.appspot.com/dom/eventtriggering/document/formSubmission/documentWrite</uri>
						<method>GET</method>
						<param>X-Content-Type-Options</param>
						<attack></attack>
						<evidence></evidence>
						<otherinfo>This issue still applies to error type pages (401, 403, 500,
							etc.) as those pages are often still affected by injection issues, in
							which case there is still concern for browsers sniffing pages away from
							their actual content type.
							At &quot;High&quot; threshold this scan rule will not alert on client or
							server error responses.</otherinfo>
					</instance>


					<instance>
						<uri>
							https://public-firing-range.appspot.com/dom/eventtriggering/document/formSubmission/eval</uri>
						<method>GET</method>
						<param>X-Content-Type-Options</param>
						<attack></attack>
						<evidence></evidence>
						<otherinfo>This issue still applies to error type pages (401, 403, 500,
							etc.) as those pages are often still affected by injection issues, in
							which case there is still concern for browsers sniffing pages away from
							their actual content type.
							At &quot;High&quot; threshold this scan rule will not alert on client or
							server error responses.</otherinfo>
					</instance>


					<instance>
						<uri>
							https://public-firing-range.appspot.com/dom/eventtriggering/document/formSubmission/innerHtml</uri>
						<method>GET</method>
						<param>X-Content-Type-Options</param>
						<attack></attack>
						<evidence></evidence>
						<otherinfo>This issue still applies to error type pages (401, 403, 500,
							etc.) as those pages are often still affected by injection issues, in
							which case there is still concern for browsers sniffing pages away from
							their actual content type.
							At &quot;High&quot; threshold this scan rule will not alert on client or
							server error responses.</otherinfo>
					</instance>


					<instance>
						<uri>
							https://public-firing-range.appspot.com/dom/eventtriggering/document/inputTyping/documentWrite</uri>
						<method>GET</method>
						<param>X-Content-Type-Options</param>
						<attack></attack>
						<evidence></evidence>
						<otherinfo>This issue still applies to error type pages (401, 403, 500,
							etc.) as those pages are often still affected by injection issues, in
							which case there is still concern for browsers sniffing pages away from
							their actual content type.
							At &quot;High&quot; threshold this scan rule will not alert on client or
							server error responses.</otherinfo>
					</instance>


					<instance>
						<uri>
							https://public-firing-range.appspot.com/dom/eventtriggering/document/inputTyping/eval</uri>
						<method>GET</method>
						<param>X-Content-Type-Options</param>
						<attack></attack>
						<evidence></evidence>
						<otherinfo>This issue still applies to error type pages (401, 403, 500,
							etc.) as those pages are often still affected by injection issues, in
							which case there is still concern for browsers sniffing pages away from
							their actual content type.
							At &quot;High&quot; threshold this scan rule will not alert on client or
							server error responses.</otherinfo>
					</instance>


					<instance>
						<uri>
							https://public-firing-range.appspot.com/dom/eventtriggering/document/inputTyping/innerHtml</uri>
						<method>GET</method>
						<param>X-Content-Type-Options</param>
						<attack></attack>
						<evidence></evidence>
						<otherinfo>This issue still applies to error type pages (401, 403, 500,
							etc.) as those pages are often still affected by injection issues, in
							which case there is still concern for browsers sniffing pages away from
							their actual content type.
							At &quot;High&quot; threshold this scan rule will not alert on client or
							server error responses.</otherinfo>
					</instance>


					<instance>
						<uri>https://public-firing-range.appspot.com/dom/index.html</uri>
						<method>GET</method>
						<param>X-Content-Type-Options</param>
						<attack></attack>
						<evidence></evidence>
						<otherinfo>This issue still applies to error type pages (401, 403, 500,
							etc.) as those pages are often still affected by injection issues, in
							which case there is still concern for browsers sniffing pages away from
							their actual content type.
							At &quot;High&quot; threshold this scan rule will not alert on client or
							server error responses.</otherinfo>
					</instance>


					<instance>
						<uri>https://public-firing-range.appspot.com/dom/javascripturi.html</uri>
						<method>GET</method>
						<param>X-Content-Type-Options</param>
						<attack></attack>
						<evidence></evidence>
						<otherinfo>This issue still applies to error type pages (401, 403, 500,
							etc.) as those pages are often still affected by injection issues, in
							which case there is still concern for browsers sniffing pages away from
							their actual content type.
							At &quot;High&quot; threshold this scan rule will not alert on client or
							server error responses.</otherinfo>
					</instance>


					<instance>
						<uri>
							https://public-firing-range.appspot.com/dom/toxicdom/document/cookie/eval</uri>
						<method>GET</method>
						<param>X-Content-Type-Options</param>
						<attack></attack>
						<evidence></evidence>
						<otherinfo>This issue still applies to error type pages (401, 403, 500,
							etc.) as those pages are often still affected by injection issues, in
							which case there is still concern for browsers sniffing pages away from
							their actual content type.
							At &quot;High&quot; threshold this scan rule will not alert on client or
							server error responses.</otherinfo>
					</instance>


					<instance>
						<uri>
							https://public-firing-range.appspot.com/dom/toxicdom/document/cookie_set/documentWrite</uri>
						<method>GET</method>
						<param>X-Content-Type-Options</param>
						<attack></attack>
						<evidence></evidence>
						<otherinfo>This issue still applies to error type pages (401, 403, 500,
							etc.) as those pages are often still affected by injection issues, in
							which case there is still concern for browsers sniffing pages away from
							their actual content type.
							At &quot;High&quot; threshold this scan rule will not alert on client or
							server error responses.</otherinfo>
					</instance>


					<instance>
						<uri>
							https://public-firing-range.appspot.com/dom/toxicdom/document/cookie_set/eval</uri>
						<method>GET</method>
						<param>X-Content-Type-Options</param>
						<attack></attack>
						<evidence></evidence>
						<otherinfo>This issue still applies to error type pages (401, 403, 500,
							etc.) as those pages are often still affected by injection issues, in
							which case there is still concern for browsers sniffing pages away from
							their actual content type.
							At &quot;High&quot; threshold this scan rule will not alert on client or
							server error responses.</otherinfo>
					</instance>


					<instance>
						<uri>
							https://public-firing-range.appspot.com/dom/toxicdom/document/cookie_set/innerHtml</uri>
						<method>GET</method>
						<param>X-Content-Type-Options</param>
						<attack></attack>
						<evidence></evidence>
						<otherinfo>This issue still applies to error type pages (401, 403, 500,
							etc.) as those pages are often still affected by injection issues, in
							which case there is still concern for browsers sniffing pages away from
							their actual content type.
							At &quot;High&quot; threshold this scan rule will not alert on client or
							server error responses.</otherinfo>
					</instance>


					<instance>
						<uri>
							https://public-firing-range.appspot.com/dom/toxicdom/document/referrer/documentWrite</uri>
						<method>GET</method>
						<param>X-Content-Type-Options</param>
						<attack></attack>
						<evidence></evidence>
						<otherinfo>This issue still applies to error type pages (401, 403, 500,
							etc.) as those pages are often still affected by injection issues, in
							which case there is still concern for browsers sniffing pages away from
							their actual content type.
							At &quot;High&quot; threshold this scan rule will not alert on client or
							server error responses.</otherinfo>
					</instance>


					<instance>
						<uri>
							https://public-firing-range.appspot.com/dom/toxicdom/document/referrer/eval</uri>
						<method>GET</method>
						<param>X-Content-Type-Options</param>
						<attack></attack>
						<evidence></evidence>
						<otherinfo>This issue still applies to error type pages (401, 403, 500,
							etc.) as those pages are often still affected by injection issues, in
							which case there is still concern for browsers sniffing pages away from
							their actual content type.
							At &quot;High&quot; threshold this scan rule will not alert on client or
							server error responses.</otherinfo>
					</instance>


					<instance>
						<uri>
							https://public-firing-range.appspot.com/dom/toxicdom/document/referrer/innerHtml</uri>
						<method>GET</method>
						<param>X-Content-Type-Options</param>
						<attack></attack>
						<evidence></evidence>
						<otherinfo>This issue still applies to error type pages (401, 403, 500,
							etc.) as those pages are often still affected by injection issues, in
							which case there is still concern for browsers sniffing pages away from
							their actual content type.
							At &quot;High&quot; threshold this scan rule will not alert on client or
							server error responses.</otherinfo>
					</instance>


					<instance>
						<uri>
							https://public-firing-range.appspot.com/dom/toxicdom/external/localStorage/array/eval</uri>
						<method>GET</method>
						<param>X-Content-Type-Options</param>
						<attack></attack>
						<evidence></evidence>
						<otherinfo>This issue still applies to error type pages (401, 403, 500,
							etc.) as those pages are often still affected by injection issues, in
							which case there is still concern for browsers sniffing pages away from
							their actual content type.
							At &quot;High&quot; threshold this scan rule will not alert on client or
							server error responses.</otherinfo>
					</instance>


					<instance>
						<uri>
							https://public-firing-range.appspot.com/dom/toxicdom/external/localStorage/function/documentWrite</uri>
						<method>GET</method>
						<param>X-Content-Type-Options</param>
						<attack></attack>
						<evidence></evidence>
						<otherinfo>This issue still applies to error type pages (401, 403, 500,
							etc.) as those pages are often still affected by injection issues, in
							which case there is still concern for browsers sniffing pages away from
							their actual content type.
							At &quot;High&quot; threshold this scan rule will not alert on client or
							server error responses.</otherinfo>
					</instance>


					<instance>
						<uri>
							https://public-firing-range.appspot.com/dom/toxicdom/external/localStorage/function/eval</uri>
						<method>GET</method>
						<param>X-Content-Type-Options</param>
						<attack></attack>
						<evidence></evidence>
						<otherinfo>This issue still applies to error type pages (401, 403, 500,
							etc.) as those pages are often still affected by injection issues, in
							which case there is still concern for browsers sniffing pages away from
							their actual content type.
							At &quot;High&quot; threshold this scan rule will not alert on client or
							server error responses.</otherinfo>
					</instance>


					<instance>
						<uri>
							https://public-firing-range.appspot.com/dom/toxicdom/external/localStorage/function/innerHtml</uri>
						<method>GET</method>
						<param>X-Content-Type-Options</param>
						<attack></attack>
						<evidence></evidence>
						<otherinfo>This issue still applies to error type pages (401, 403, 500,
							etc.) as those pages are often still affected by injection issues, in
							which case there is still concern for browsers sniffing pages away from
							their actual content type.
							At &quot;High&quot; threshold this scan rule will not alert on client or
							server error responses.</otherinfo>
					</instance>


					<instance>
						<uri>
							https://public-firing-range.appspot.com/dom/toxicdom/external/localStorage/property/documentWrite</uri>
						<method>GET</method>
						<param>X-Content-Type-Options</param>
						<attack></attack>
						<evidence></evidence>
						<otherinfo>This issue still applies to error type pages (401, 403, 500,
							etc.) as those pages are often still affected by injection issues, in
							which case there is still concern for browsers sniffing pages away from
							their actual content type.
							At &quot;High&quot; threshold this scan rule will not alert on client or
							server error responses.</otherinfo>
					</instance>


					<instance>
						<uri>
							https://public-firing-range.appspot.com/dom/toxicdom/external/sessionStorage/array/eval</uri>
						<method>GET</method>
						<param>X-Content-Type-Options</param>
						<attack></attack>
						<evidence></evidence>
						<otherinfo>This issue still applies to error type pages (401, 403, 500,
							etc.) as those pages are often still affected by injection issues, in
							which case there is still concern for browsers sniffing pages away from
							their actual content type.
							At &quot;High&quot; threshold this scan rule will not alert on client or
							server error responses.</otherinfo>
					</instance>


					<instance>
						<uri>
							https://public-firing-range.appspot.com/dom/toxicdom/external/sessionStorage/function/documentWrite</uri>
						<method>GET</method>
						<param>X-Content-Type-Options</param>
						<attack></attack>
						<evidence></evidence>
						<otherinfo>This issue still applies to error type pages (401, 403, 500,
							etc.) as those pages are often still affected by injection issues, in
							which case there is still concern for browsers sniffing pages away from
							their actual content type.
							At &quot;High&quot; threshold this scan rule will not alert on client or
							server error responses.</otherinfo>
					</instance>


					<instance>
						<uri>
							https://public-firing-range.appspot.com/dom/toxicdom/external/sessionStorage/function/eval</uri>
						<method>GET</method>
						<param>X-Content-Type-Options</param>
						<attack></attack>
						<evidence></evidence>
						<otherinfo>This issue still applies to error type pages (401, 403, 500,
							etc.) as those pages are often still affected by injection issues, in
							which case there is still concern for browsers sniffing pages away from
							their actual content type.
							At &quot;High&quot; threshold this scan rule will not alert on client or
							server error responses.</otherinfo>
					</instance>


					<instance>
						<uri>
							https://public-firing-range.appspot.com/dom/toxicdom/external/sessionStorage/function/innerHtml</uri>
						<method>GET</method>
						<param>X-Content-Type-Options</param>
						<attack></attack>
						<evidence></evidence>
						<otherinfo>This issue still applies to error type pages (401, 403, 500,
							etc.) as those pages are often still affected by injection issues, in
							which case there is still concern for browsers sniffing pages away from
							their actual content type.
							At &quot;High&quot; threshold this scan rule will not alert on client or
							server error responses.</otherinfo>
					</instance>


					<instance>
						<uri>
							https://public-firing-range.appspot.com/dom/toxicdom/external/sessionStorage/property/documentWrite</uri>
						<method>GET</method>
						<param>X-Content-Type-Options</param>
						<attack></attack>
						<evidence></evidence>
						<otherinfo>This issue still applies to error type pages (401, 403, 500,
							etc.) as those pages are often still affected by injection issues, in
							which case there is still concern for browsers sniffing pages away from
							their actual content type.
							At &quot;High&quot; threshold this scan rule will not alert on client or
							server error responses.</otherinfo>
					</instance>


					<instance>
						<uri>
							https://public-firing-range.appspot.com/dom/toxicdom/localStorage/array/eval</uri>
						<method>GET</method>
						<param>X-Content-Type-Options</param>
						<attack></attack>
						<evidence></evidence>
						<otherinfo>This issue still applies to error type pages (401, 403, 500,
							etc.) as those pages are often still affected by injection issues, in
							which case there is still concern for browsers sniffing pages away from
							their actual content type.
							At &quot;High&quot; threshold this scan rule will not alert on client or
							server error responses.</otherinfo>
					</instance>


					<instance>
						<uri>
							https://public-firing-range.appspot.com/dom/toxicdom/localStorage/function/documentWrite</uri>
						<method>GET</method>
						<param>X-Content-Type-Options</param>
						<attack></attack>
						<evidence></evidence>
						<otherinfo>This issue still applies to error type pages (401, 403, 500,
							etc.) as those pages are often still affected by injection issues, in
							which case there is still concern for browsers sniffing pages away from
							their actual content type.
							At &quot;High&quot; threshold this scan rule will not alert on client or
							server error responses.</otherinfo>
					</instance>


					<instance>
						<uri>
							https://public-firing-range.appspot.com/dom/toxicdom/localStorage/function/eval</uri>
						<method>GET</method>
						<param>X-Content-Type-Options</param>
						<attack></attack>
						<evidence></evidence>
						<otherinfo>This issue still applies to error type pages (401, 403, 500,
							etc.) as those pages are often still affected by injection issues, in
							which case there is still concern for browsers sniffing pages away from
							their actual content type.
							At &quot;High&quot; threshold this scan rule will not alert on client or
							server error responses.</otherinfo>
					</instance>


					<instance>
						<uri>
							https://public-firing-range.appspot.com/dom/toxicdom/localStorage/function/innerHtml</uri>
						<method>GET</method>
						<param>X-Content-Type-Options</param>
						<attack></attack>
						<evidence></evidence>
						<otherinfo>This issue still applies to error type pages (401, 403, 500,
							etc.) as those pages are often still affected by injection issues, in
							which case there is still concern for browsers sniffing pages away from
							their actual content type.
							At &quot;High&quot; threshold this scan rule will not alert on client or
							server error responses.</otherinfo>
					</instance>


					<instance>
						<uri>
							https://public-firing-range.appspot.com/dom/toxicdom/localStorage/property/documentWrite</uri>
						<method>GET</method>
						<param>X-Content-Type-Options</param>
						<attack></attack>
						<evidence></evidence>
						<otherinfo>This issue still applies to error type pages (401, 403, 500,
							etc.) as those pages are often still affected by injection issues, in
							which case there is still concern for browsers sniffing pages away from
							their actual content type.
							At &quot;High&quot; threshold this scan rule will not alert on client or
							server error responses.</otherinfo>
					</instance>


					<instance>
						<uri>
							https://public-firing-range.appspot.com/dom/toxicdom/postMessage/complexMessageDocumentWriteEval</uri>
						<method>GET</method>
						<param>X-Content-Type-Options</param>
						<attack></attack>
						<evidence></evidence>
						<otherinfo>This issue still applies to error type pages (401, 403, 500,
							etc.) as those pages are often still affected by injection issues, in
							which case there is still concern for browsers sniffing pages away from
							their actual content type.
							At &quot;High&quot; threshold this scan rule will not alert on client or
							server error responses.</otherinfo>
					</instance>


					<instance>
						<uri>
							https://public-firing-range.appspot.com/dom/toxicdom/postMessage/documentWrite</uri>
						<method>GET</method>
						<param>X-Content-Type-Options</param>
						<attack></attack>
						<evidence></evidence>
						<otherinfo>This issue still applies to error type pages (401, 403, 500,
							etc.) as those pages are often still affected by injection issues, in
							which case there is still concern for browsers sniffing pages away from
							their actual content type.
							At &quot;High&quot; threshold this scan rule will not alert on client or
							server error responses.</otherinfo>
					</instance>


					<instance>
						<uri>https://public-firing-range.appspot.com/dom/toxicdom/postMessage/eval</uri>
						<method>GET</method>
						<param>X-Content-Type-Options</param>
						<attack></attack>
						<evidence></evidence>
						<otherinfo>This issue still applies to error type pages (401, 403, 500,
							etc.) as those pages are often still affected by injection issues, in
							which case there is still concern for browsers sniffing pages away from
							their actual content type.
							At &quot;High&quot; threshold this scan rule will not alert on client or
							server error responses.</otherinfo>
					</instance>


					<instance>
						<uri>
							https://public-firing-range.appspot.com/dom/toxicdom/postMessage/improperOriginValidationWithPartialStringComparison</uri>
						<method>GET</method>
						<param>X-Content-Type-Options</param>
						<attack></attack>
						<evidence></evidence>
						<otherinfo>This issue still applies to error type pages (401, 403, 500,
							etc.) as those pages are often still affected by injection issues, in
							which case there is still concern for browsers sniffing pages away from
							their actual content type.
							At &quot;High&quot; threshold this scan rule will not alert on client or
							server error responses.</otherinfo>
					</instance>


					<instance>
						<uri>
							https://public-firing-range.appspot.com/dom/toxicdom/postMessage/improperOriginValidationWithRegExp</uri>
						<method>GET</method>
						<param>X-Content-Type-Options</param>
						<attack></attack>
						<evidence></evidence>
						<otherinfo>This issue still applies to error type pages (401, 403, 500,
							etc.) as those pages are often still affected by injection issues, in
							which case there is still concern for browsers sniffing pages away from
							their actual content type.
							At &quot;High&quot; threshold this scan rule will not alert on client or
							server error responses.</otherinfo>
					</instance>


					<instance>
						<uri>
							https://public-firing-range.appspot.com/dom/toxicdom/postMessage/innerHtml</uri>
						<method>GET</method>
						<param>X-Content-Type-Options</param>
						<attack></attack>
						<evidence></evidence>
						<otherinfo>This issue still applies to error type pages (401, 403, 500,
							etc.) as those pages are often still affected by injection issues, in
							which case there is still concern for browsers sniffing pages away from
							their actual content type.
							At &quot;High&quot; threshold this scan rule will not alert on client or
							server error responses.</otherinfo>
					</instance>


					<instance>
						<uri>
							https://public-firing-range.appspot.com/dom/toxicdom/sessionStorage/array/eval</uri>
						<method>GET</method>
						<param>X-Content-Type-Options</param>
						<attack></attack>
						<evidence></evidence>
						<otherinfo>This issue still applies to error type pages (401, 403, 500,
							etc.) as those pages are often still affected by injection issues, in
							which case there is still concern for browsers sniffing pages away from
							their actual content type.
							At &quot;High&quot; threshold this scan rule will not alert on client or
							server error responses.</otherinfo>
					</instance>


					<instance>
						<uri>
							https://public-firing-range.appspot.com/dom/toxicdom/sessionStorage/function/documentWrite</uri>
						<method>GET</method>
						<param>X-Content-Type-Options</param>
						<attack></attack>
						<evidence></evidence>
						<otherinfo>This issue still applies to error type pages (401, 403, 500,
							etc.) as those pages are often still affected by injection issues, in
							which case there is still concern for browsers sniffing pages away from
							their actual content type.
							At &quot;High&quot; threshold this scan rule will not alert on client or
							server error responses.</otherinfo>
					</instance>


					<instance>
						<uri>
							https://public-firing-range.appspot.com/dom/toxicdom/sessionStorage/function/eval</uri>
						<method>GET</method>
						<param>X-Content-Type-Options</param>
						<attack></attack>
						<evidence></evidence>
						<otherinfo>This issue still applies to error type pages (401, 403, 500,
							etc.) as those pages are often still affected by injection issues, in
							which case there is still concern for browsers sniffing pages away from
							their actual content type.
							At &quot;High&quot; threshold this scan rule will not alert on client or
							server error responses.</otherinfo>
					</instance>


					<instance>
						<uri>
							https://public-firing-range.appspot.com/dom/toxicdom/sessionStorage/function/innerHtml</uri>
						<method>GET</method>
						<param>X-Content-Type-Options</param>
						<attack></attack>
						<evidence></evidence>
						<otherinfo>This issue still applies to error type pages (401, 403, 500,
							etc.) as those pages are often still affected by injection issues, in
							which case there is still concern for browsers sniffing pages away from
							their actual content type.
							At &quot;High&quot; threshold this scan rule will not alert on client or
							server error responses.</otherinfo>
					</instance>


					<instance>
						<uri>
							https://public-firing-range.appspot.com/dom/toxicdom/sessionStorage/property/documentWrite</uri>
						<method>GET</method>
						<param>X-Content-Type-Options</param>
						<attack></attack>
						<evidence></evidence>
						<otherinfo>This issue still applies to error type pages (401, 403, 500,
							etc.) as those pages are often still affected by injection issues, in
							which case there is still concern for browsers sniffing pages away from
							their actual content type.
							At &quot;High&quot; threshold this scan rule will not alert on client or
							server error responses.</otherinfo>
					</instance>


					<instance>
						<uri>
							https://public-firing-range.appspot.com/dom/toxicdom/window/name/documentWrite</uri>
						<method>GET</method>
						<param>X-Content-Type-Options</param>
						<attack></attack>
						<evidence></evidence>
						<otherinfo>This issue still applies to error type pages (401, 403, 500,
							etc.) as those pages are often still affected by injection issues, in
							which case there is still concern for browsers sniffing pages away from
							their actual content type.
							At &quot;High&quot; threshold this scan rule will not alert on client or
							server error responses.</otherinfo>
					</instance>


					<instance>
						<uri>https://public-firing-range.appspot.com/dom/toxicdom/window/name/eval</uri>
						<method>GET</method>
						<param>X-Content-Type-Options</param>
						<attack></attack>
						<evidence></evidence>
						<otherinfo>This issue still applies to error type pages (401, 403, 500,
							etc.) as those pages are often still affected by injection issues, in
							which case there is still concern for browsers sniffing pages away from
							their actual content type.
							At &quot;High&quot; threshold this scan rule will not alert on client or
							server error responses.</otherinfo>
					</instance>


					<instance>
						<uri>
							https://public-firing-range.appspot.com/dom/toxicdom/window/name/innerHtml</uri>
						<method>GET</method>
						<param>X-Content-Type-Options</param>
						<attack></attack>
						<evidence></evidence>
						<otherinfo>This issue still applies to error type pages (401, 403, 500,
							etc.) as those pages are often still affected by injection issues, in
							which case there is still concern for browsers sniffing pages away from
							their actual content type.
							At &quot;High&quot; threshold this scan rule will not alert on client or
							server error responses.</otherinfo>
					</instance>


					<instance>
						<uri>
							https://public-firing-range.appspot.com/dom/toxicdomscripts/localStorage/array/eval</uri>
						<method>GET</method>
						<param>X-Content-Type-Options</param>
						<attack></attack>
						<evidence></evidence>
						<otherinfo>This issue still applies to error type pages (401, 403, 500,
							etc.) as those pages are often still affected by injection issues, in
							which case there is still concern for browsers sniffing pages away from
							their actual content type.
							At &quot;High&quot; threshold this scan rule will not alert on client or
							server error responses.</otherinfo>
					</instance>


					<instance>
						<uri>
							https://public-firing-range.appspot.com/dom/toxicdomscripts/localStorage/function/documentWrite</uri>
						<method>GET</method>
						<param>X-Content-Type-Options</param>
						<attack></attack>
						<evidence></evidence>
						<otherinfo>This issue still applies to error type pages (401, 403, 500,
							etc.) as those pages are often still affected by injection issues, in
							which case there is still concern for browsers sniffing pages away from
							their actual content type.
							At &quot;High&quot; threshold this scan rule will not alert on client or
							server error responses.</otherinfo>
					</instance>


					<instance>
						<uri>
							https://public-firing-range.appspot.com/dom/toxicdomscripts/localStorage/function/eval</uri>
						<method>GET</method>
						<param>X-Content-Type-Options</param>
						<attack></attack>
						<evidence></evidence>
						<otherinfo>This issue still applies to error type pages (401, 403, 500,
							etc.) as those pages are often still affected by injection issues, in
							which case there is still concern for browsers sniffing pages away from
							their actual content type.
							At &quot;High&quot; threshold this scan rule will not alert on client or
							server error responses.</otherinfo>
					</instance>


					<instance>
						<uri>
							https://public-firing-range.appspot.com/dom/toxicdomscripts/localStorage/function/innerHtml</uri>
						<method>GET</method>
						<param>X-Content-Type-Options</param>
						<attack></attack>
						<evidence></evidence>
						<otherinfo>This issue still applies to error type pages (401, 403, 500,
							etc.) as those pages are often still affected by injection issues, in
							which case there is still concern for browsers sniffing pages away from
							their actual content type.
							At &quot;High&quot; threshold this scan rule will not alert on client or
							server error responses.</otherinfo>
					</instance>


					<instance>
						<uri>
							https://public-firing-range.appspot.com/dom/toxicdomscripts/localStorage/property/documentWrite</uri>
						<method>GET</method>
						<param>X-Content-Type-Options</param>
						<attack></attack>
						<evidence></evidence>
						<otherinfo>This issue still applies to error type pages (401, 403, 500,
							etc.) as those pages are often still affected by injection issues, in
							which case there is still concern for browsers sniffing pages away from
							their actual content type.
							At &quot;High&quot; threshold this scan rule will not alert on client or
							server error responses.</otherinfo>
					</instance>


					<instance>
						<uri>
							https://public-firing-range.appspot.com/dom/toxicdomscripts/sessionStorage/array/eval</uri>
						<method>GET</method>
						<param>X-Content-Type-Options</param>
						<attack></attack>
						<evidence></evidence>
						<otherinfo>This issue still applies to error type pages (401, 403, 500,
							etc.) as those pages are often still affected by injection issues, in
							which case there is still concern for browsers sniffing pages away from
							their actual content type.
							At &quot;High&quot; threshold this scan rule will not alert on client or
							server error responses.</otherinfo>
					</instance>


					<instance>
						<uri>
							https://public-firing-range.appspot.com/dom/toxicdomscripts/sessionStorage/function/documentWrite</uri>
						<method>GET</method>
						<param>X-Content-Type-Options</param>
						<attack></attack>
						<evidence></evidence>
						<otherinfo>This issue still applies to error type pages (401, 403, 500,
							etc.) as those pages are often still affected by injection issues, in
							which case there is still concern for browsers sniffing pages away from
							their actual content type.
							At &quot;High&quot; threshold this scan rule will not alert on client or
							server error responses.</otherinfo>
					</instance>


					<instance>
						<uri>
							https://public-firing-range.appspot.com/dom/toxicdomscripts/sessionStorage/function/eval</uri>
						<method>GET</method>
						<param>X-Content-Type-Options</param>
						<attack></attack>
						<evidence></evidence>
						<otherinfo>This issue still applies to error type pages (401, 403, 500,
							etc.) as those pages are often still affected by injection issues, in
							which case there is still concern for browsers sniffing pages away from
							their actual content type.
							At &quot;High&quot; threshold this scan rule will not alert on client or
							server error responses.</otherinfo>
					</instance>


					<instance>
						<uri>
							https://public-firing-range.appspot.com/dom/toxicdomscripts/sessionStorage/function/innerHtml</uri>
						<method>GET</method>
						<param>X-Content-Type-Options</param>
						<attack></attack>
						<evidence></evidence>
						<otherinfo>This issue still applies to error type pages (401, 403, 500,
							etc.) as those pages are often still affected by injection issues, in
							which case there is still concern for browsers sniffing pages away from
							their actual content type.
							At &quot;High&quot; threshold this scan rule will not alert on client or
							server error responses.</otherinfo>
					</instance>


					<instance>
						<uri>
							https://public-firing-range.appspot.com/dom/toxicdomscripts/sessionStorage/property/documentWrite</uri>
						<method>GET</method>
						<param>X-Content-Type-Options</param>
						<attack></attack>
						<evidence></evidence>
						<otherinfo>This issue still applies to error type pages (401, 403, 500,
							etc.) as those pages are often still affected by injection issues, in
							which case there is still concern for browsers sniffing pages away from
							their actual content type.
							At &quot;High&quot; threshold this scan rule will not alert on client or
							server error responses.</otherinfo>
					</instance>


					<instance>
						<uri>https://public-firing-range.appspot.com/escape/index.html</uri>
						<method>GET</method>
						<param>X-Content-Type-Options</param>
						<attack></attack>
						<evidence></evidence>
						<otherinfo>This issue still applies to error type pages (401, 403, 500,
							etc.) as those pages are often still affected by injection issues, in
							which case there is still concern for browsers sniffing pages away from
							their actual content type.
							At &quot;High&quot; threshold this scan rule will not alert on client or
							server error responses.</otherinfo>
					</instance>


					<instance>
						<uri>
							https://public-firing-range.appspot.com/escape/js/encodeURIComponent?q=a</uri>
						<method>GET</method>
						<param>X-Content-Type-Options</param>
						<attack></attack>
						<evidence></evidence>
						<otherinfo>This issue still applies to error type pages (401, 403, 500,
							etc.) as those pages are often still affected by injection issues, in
							which case there is still concern for browsers sniffing pages away from
							their actual content type.
							At &quot;High&quot; threshold this scan rule will not alert on client or
							server error responses.</otherinfo>
					</instance>


					<instance>
						<uri>https://public-firing-range.appspot.com/escape/js/escape?q=a</uri>
						<method>GET</method>
						<param>X-Content-Type-Options</param>
						<attack></attack>
						<evidence></evidence>
						<otherinfo>This issue still applies to error type pages (401, 403, 500,
							etc.) as those pages are often still affected by injection issues, in
							which case there is still concern for browsers sniffing pages away from
							their actual content type.
							At &quot;High&quot; threshold this scan rule will not alert on client or
							server error responses.</otherinfo>
					</instance>


					<instance>
						<uri>https://public-firing-range.appspot.com/escape/js/html_escape?q=a</uri>
						<method>GET</method>
						<param>X-Content-Type-Options</param>
						<attack></attack>
						<evidence></evidence>
						<otherinfo>This issue still applies to error type pages (401, 403, 500,
							etc.) as those pages are often still affected by injection issues, in
							which case there is still concern for browsers sniffing pages away from
							their actual content type.
							At &quot;High&quot; threshold this scan rule will not alert on client or
							server error responses.</otherinfo>
					</instance>


					<instance>
						<uri>
							https://public-firing-range.appspot.com/escape/serverside/encodeUrl/attribute_name?q=a</uri>
						<method>GET</method>
						<param>X-Content-Type-Options</param>
						<attack></attack>
						<evidence></evidence>
						<otherinfo>This issue still applies to error type pages (401, 403, 500,
							etc.) as those pages are often still affected by injection issues, in
							which case there is still concern for browsers sniffing pages away from
							their actual content type.
							At &quot;High&quot; threshold this scan rule will not alert on client or
							server error responses.</otherinfo>
					</instance>


					<instance>
						<uri>
							https://public-firing-range.appspot.com/escape/serverside/encodeUrl/attribute_quoted?q=a</uri>
						<method>GET</method>
						<param>X-Content-Type-Options</param>
						<attack></attack>
						<evidence></evidence>
						<otherinfo>This issue still applies to error type pages (401, 403, 500,
							etc.) as those pages are often still affected by injection issues, in
							which case there is still concern for browsers sniffing pages away from
							their actual content type.
							At &quot;High&quot; threshold this scan rule will not alert on client or
							server error responses.</otherinfo>
					</instance>


					<instance>
						<uri>
							https://public-firing-range.appspot.com/escape/serverside/encodeUrl/attribute_script?q=a</uri>
						<method>GET</method>
						<param>X-Content-Type-Options</param>
						<attack></attack>
						<evidence></evidence>
						<otherinfo>This issue still applies to error type pages (401, 403, 500,
							etc.) as those pages are often still affected by injection issues, in
							which case there is still concern for browsers sniffing pages away from
							their actual content type.
							At &quot;High&quot; threshold this scan rule will not alert on client or
							server error responses.</otherinfo>
					</instance>


					<instance>
						<uri>
							https://public-firing-range.appspot.com/escape/serverside/encodeUrl/attribute_singlequoted?q=a</uri>
						<method>GET</method>
						<param>X-Content-Type-Options</param>
						<attack></attack>
						<evidence></evidence>
						<otherinfo>This issue still applies to error type pages (401, 403, 500,
							etc.) as those pages are often still affected by injection issues, in
							which case there is still concern for browsers sniffing pages away from
							their actual content type.
							At &quot;High&quot; threshold this scan rule will not alert on client or
							server error responses.</otherinfo>
					</instance>


					<instance>
						<uri>
							https://public-firing-range.appspot.com/escape/serverside/encodeUrl/attribute_unquoted?q=a</uri>
						<method>GET</method>
						<param>X-Content-Type-Options</param>
						<attack></attack>
						<evidence></evidence>
						<otherinfo>This issue still applies to error type pages (401, 403, 500,
							etc.) as those pages are often still affected by injection issues, in
							which case there is still concern for browsers sniffing pages away from
							their actual content type.
							At &quot;High&quot; threshold this scan rule will not alert on client or
							server error responses.</otherinfo>
					</instance>


					<instance>
						<uri>
							https://public-firing-range.appspot.com/escape/serverside/encodeUrl/body?q=a</uri>
						<method>GET</method>
						<param>X-Content-Type-Options</param>
						<attack></attack>
						<evidence></evidence>
						<otherinfo>This issue still applies to error type pages (401, 403, 500,
							etc.) as those pages are often still affected by injection issues, in
							which case there is still concern for browsers sniffing pages away from
							their actual content type.
							At &quot;High&quot; threshold this scan rule will not alert on client or
							server error responses.</otherinfo>
					</instance>


					<instance>
						<uri>
							https://public-firing-range.appspot.com/escape/serverside/encodeUrl/body_comment?q=a</uri>
						<method>GET</method>
						<param>X-Content-Type-Options</param>
						<attack></attack>
						<evidence></evidence>
						<otherinfo>This issue still applies to error type pages (401, 403, 500,
							etc.) as those pages are often still affected by injection issues, in
							which case there is still concern for browsers sniffing pages away from
							their actual content type.
							At &quot;High&quot; threshold this scan rule will not alert on client or
							server error responses.</otherinfo>
					</instance>


					<instance>
						<uri>
							https://public-firing-range.appspot.com/escape/serverside/encodeUrl/css_import?q=a</uri>
						<method>GET</method>
						<param>X-Content-Type-Options</param>
						<attack></attack>
						<evidence></evidence>
						<otherinfo>This issue still applies to error type pages (401, 403, 500,
							etc.) as those pages are often still affected by injection issues, in
							which case there is still concern for browsers sniffing pages away from
							their actual content type.
							At &quot;High&quot; threshold this scan rule will not alert on client or
							server error responses.</otherinfo>
					</instance>


					<instance>
						<uri>
							https://public-firing-range.appspot.com/escape/serverside/encodeUrl/css_style?q=a</uri>
						<method>GET</method>
						<param>X-Content-Type-Options</param>
						<attack></attack>
						<evidence></evidence>
						<otherinfo>This issue still applies to error type pages (401, 403, 500,
							etc.) as those pages are often still affected by injection issues, in
							which case there is still concern for browsers sniffing pages away from
							their actual content type.
							At &quot;High&quot; threshold this scan rule will not alert on client or
							server error responses.</otherinfo>
					</instance>


					<instance>
						<uri>
							https://public-firing-range.appspot.com/escape/serverside/encodeUrl/css_style_font_value?q=a</uri>
						<method>GET</method>
						<param>X-Content-Type-Options</param>
						<attack></attack>
						<evidence></evidence>
						<otherinfo>This issue still applies to error type pages (401, 403, 500,
							etc.) as those pages are often still affected by injection issues, in
							which case there is still concern for browsers sniffing pages away from
							their actual content type.
							At &quot;High&quot; threshold this scan rule will not alert on client or
							server error responses.</otherinfo>
					</instance>


					<instance>
						<uri>
							https://public-firing-range.appspot.com/escape/serverside/encodeUrl/css_style_value?q=a</uri>
						<method>GET</method>
						<param>X-Content-Type-Options</param>
						<attack></attack>
						<evidence></evidence>
						<otherinfo>This issue still applies to error type pages (401, 403, 500,
							etc.) as those pages are often still affected by injection issues, in
							which case there is still concern for browsers sniffing pages away from
							their actual content type.
							At &quot;High&quot; threshold this scan rule will not alert on client or
							server error responses.</otherinfo>
					</instance>


					<instance>
						<uri>
							https://public-firing-range.appspot.com/escape/serverside/encodeUrl/head?q=a</uri>
						<method>GET</method>
						<param>X-Content-Type-Options</param>
						<attack></attack>
						<evidence></evidence>
						<otherinfo>This issue still applies to error type pages (401, 403, 500,
							etc.) as those pages are often still affected by injection issues, in
							which case there is still concern for browsers sniffing pages away from
							their actual content type.
							At &quot;High&quot; threshold this scan rule will not alert on client or
							server error responses.</otherinfo>
					</instance>


					<instance>
						<uri>
							https://public-firing-range.appspot.com/escape/serverside/encodeUrl/js_assignment?q=a</uri>
						<method>GET</method>
						<param>X-Content-Type-Options</param>
						<attack></attack>
						<evidence></evidence>
						<otherinfo>This issue still applies to error type pages (401, 403, 500,
							etc.) as those pages are often still affected by injection issues, in
							which case there is still concern for browsers sniffing pages away from
							their actual content type.
							At &quot;High&quot; threshold this scan rule will not alert on client or
							server error responses.</otherinfo>
					</instance>


					<instance>
						<uri>
							https://public-firing-range.appspot.com/escape/serverside/encodeUrl/js_comment?q=a</uri>
						<method>GET</method>
						<param>X-Content-Type-Options</param>
						<attack></attack>
						<evidence></evidence>
						<otherinfo>This issue still applies to error type pages (401, 403, 500,
							etc.) as those pages are often still affected by injection issues, in
							which case there is still concern for browsers sniffing pages away from
							their actual content type.
							At &quot;High&quot; threshold this scan rule will not alert on client or
							server error responses.</otherinfo>
					</instance>


					<instance>
						<uri>
							https://public-firing-range.appspot.com/escape/serverside/encodeUrl/js_eval?q=a</uri>
						<method>GET</method>
						<param>X-Content-Type-Options</param>
						<attack></attack>
						<evidence></evidence>
						<otherinfo>This issue still applies to error type pages (401, 403, 500,
							etc.) as those pages are often still affected by injection issues, in
							which case there is still concern for browsers sniffing pages away from
							their actual content type.
							At &quot;High&quot; threshold this scan rule will not alert on client or
							server error responses.</otherinfo>
					</instance>


					<instance>
						<uri>
							https://public-firing-range.appspot.com/escape/serverside/encodeUrl/js_quoted_string?q=a</uri>
						<method>GET</method>
						<param>X-Content-Type-Options</param>
						<attack></attack>
						<evidence></evidence>
						<otherinfo>This issue still applies to error type pages (401, 403, 500,
							etc.) as those pages are often still affected by injection issues, in
							which case there is still concern for browsers sniffing pages away from
							their actual content type.
							At &quot;High&quot; threshold this scan rule will not alert on client or
							server error responses.</otherinfo>
					</instance>


					<instance>
						<uri>
							https://public-firing-range.appspot.com/escape/serverside/encodeUrl/js_singlequoted_string?q=a</uri>
						<method>GET</method>
						<param>X-Content-Type-Options</param>
						<attack></attack>
						<evidence></evidence>
						<otherinfo>This issue still applies to error type pages (401, 403, 500,
							etc.) as those pages are often still affected by injection issues, in
							which case there is still concern for browsers sniffing pages away from
							their actual content type.
							At &quot;High&quot; threshold this scan rule will not alert on client or
							server error responses.</otherinfo>
					</instance>


					<instance>
						<uri>
							https://public-firing-range.appspot.com/escape/serverside/encodeUrl/js_slashquoted_string?q=a</uri>
						<method>GET</method>
						<param>X-Content-Type-Options</param>
						<attack></attack>
						<evidence></evidence>
						<otherinfo>This issue still applies to error type pages (401, 403, 500,
							etc.) as those pages are often still affected by injection issues, in
							which case there is still concern for browsers sniffing pages away from
							their actual content type.
							At &quot;High&quot; threshold this scan rule will not alert on client or
							server error responses.</otherinfo>
					</instance>


					<instance>
						<uri>
							https://public-firing-range.appspot.com/escape/serverside/encodeUrl/tagname?q=a</uri>
						<method>GET</method>
						<param>X-Content-Type-Options</param>
						<attack></attack>
						<evidence></evidence>
						<otherinfo>This issue still applies to error type pages (401, 403, 500,
							etc.) as those pages are often still affected by injection issues, in
							which case there is still concern for browsers sniffing pages away from
							their actual content type.
							At &quot;High&quot; threshold this scan rule will not alert on client or
							server error responses.</otherinfo>
					</instance>


					<instance>
						<uri>
							https://public-firing-range.appspot.com/escape/serverside/encodeUrl/textarea?q=a</uri>
						<method>GET</method>
						<param>X-Content-Type-Options</param>
						<attack></attack>
						<evidence></evidence>
						<otherinfo>This issue still applies to error type pages (401, 403, 500,
							etc.) as those pages are often still affected by injection issues, in
							which case there is still concern for browsers sniffing pages away from
							their actual content type.
							At &quot;High&quot; threshold this scan rule will not alert on client or
							server error responses.</otherinfo>
					</instance>


					<instance>
						<uri>
							https://public-firing-range.appspot.com/escape/serverside/escapeHtml/attribute_name?q=a</uri>
						<method>GET</method>
						<param>X-Content-Type-Options</param>
						<attack></attack>
						<evidence></evidence>
						<otherinfo>This issue still applies to error type pages (401, 403, 500,
							etc.) as those pages are often still affected by injection issues, in
							which case there is still concern for browsers sniffing pages away from
							their actual content type.
							At &quot;High&quot; threshold this scan rule will not alert on client or
							server error responses.</otherinfo>
					</instance>


					<instance>
						<uri>
							https://public-firing-range.appspot.com/escape/serverside/escapeHtml/attribute_quoted?q=a</uri>
						<method>GET</method>
						<param>X-Content-Type-Options</param>
						<attack></attack>
						<evidence></evidence>
						<otherinfo>This issue still applies to error type pages (401, 403, 500,
							etc.) as those pages are often still affected by injection issues, in
							which case there is still concern for browsers sniffing pages away from
							their actual content type.
							At &quot;High&quot; threshold this scan rule will not alert on client or
							server error responses.</otherinfo>
					</instance>


					<instance>
						<uri>
							https://public-firing-range.appspot.com/escape/serverside/escapeHtml/attribute_script?q=a</uri>
						<method>GET</method>
						<param>X-Content-Type-Options</param>
						<attack></attack>
						<evidence></evidence>
						<otherinfo>This issue still applies to error type pages (401, 403, 500,
							etc.) as those pages are often still affected by injection issues, in
							which case there is still concern for browsers sniffing pages away from
							their actual content type.
							At &quot;High&quot; threshold this scan rule will not alert on client or
							server error responses.</otherinfo>
					</instance>


					<instance>
						<uri>
							https://public-firing-range.appspot.com/escape/serverside/escapeHtml/attribute_singlequoted?q=a</uri>
						<method>GET</method>
						<param>X-Content-Type-Options</param>
						<attack></attack>
						<evidence></evidence>
						<otherinfo>This issue still applies to error type pages (401, 403, 500,
							etc.) as those pages are often still affected by injection issues, in
							which case there is still concern for browsers sniffing pages away from
							their actual content type.
							At &quot;High&quot; threshold this scan rule will not alert on client or
							server error responses.</otherinfo>
					</instance>


					<instance>
						<uri>
							https://public-firing-range.appspot.com/escape/serverside/escapeHtml/attribute_unquoted?q=a</uri>
						<method>GET</method>
						<param>X-Content-Type-Options</param>
						<attack></attack>
						<evidence></evidence>
						<otherinfo>This issue still applies to error type pages (401, 403, 500,
							etc.) as those pages are often still affected by injection issues, in
							which case there is still concern for browsers sniffing pages away from
							their actual content type.
							At &quot;High&quot; threshold this scan rule will not alert on client or
							server error responses.</otherinfo>
					</instance>


					<instance>
						<uri>
							https://public-firing-range.appspot.com/escape/serverside/escapeHtml/body?q=a</uri>
						<method>GET</method>
						<param>X-Content-Type-Options</param>
						<attack></attack>
						<evidence></evidence>
						<otherinfo>This issue still applies to error type pages (401, 403, 500,
							etc.) as those pages are often still affected by injection issues, in
							which case there is still concern for browsers sniffing pages away from
							their actual content type.
							At &quot;High&quot; threshold this scan rule will not alert on client or
							server error responses.</otherinfo>
					</instance>


					<instance>
						<uri>
							https://public-firing-range.appspot.com/escape/serverside/escapeHtml/body_comment?q=a</uri>
						<method>GET</method>
						<param>X-Content-Type-Options</param>
						<attack></attack>
						<evidence></evidence>
						<otherinfo>This issue still applies to error type pages (401, 403, 500,
							etc.) as those pages are often still affected by injection issues, in
							which case there is still concern for browsers sniffing pages away from
							their actual content type.
							At &quot;High&quot; threshold this scan rule will not alert on client or
							server error responses.</otherinfo>
					</instance>


					<instance>
						<uri>
							https://public-firing-range.appspot.com/escape/serverside/escapeHtml/css_import?q=a</uri>
						<method>GET</method>
						<param>X-Content-Type-Options</param>
						<attack></attack>
						<evidence></evidence>
						<otherinfo>This issue still applies to error type pages (401, 403, 500,
							etc.) as those pages are often still affected by injection issues, in
							which case there is still concern for browsers sniffing pages away from
							their actual content type.
							At &quot;High&quot; threshold this scan rule will not alert on client or
							server error responses.</otherinfo>
					</instance>


					<instance>
						<uri>
							https://public-firing-range.appspot.com/escape/serverside/escapeHtml/css_style?q=a</uri>
						<method>GET</method>
						<param>X-Content-Type-Options</param>
						<attack></attack>
						<evidence></evidence>
						<otherinfo>This issue still applies to error type pages (401, 403, 500,
							etc.) as those pages are often still affected by injection issues, in
							which case there is still concern for browsers sniffing pages away from
							their actual content type.
							At &quot;High&quot; threshold this scan rule will not alert on client or
							server error responses.</otherinfo>
					</instance>


					<instance>
						<uri>
							https://public-firing-range.appspot.com/escape/serverside/escapeHtml/css_style_font_value?q=a</uri>
						<method>GET</method>
						<param>X-Content-Type-Options</param>
						<attack></attack>
						<evidence></evidence>
						<otherinfo>This issue still applies to error type pages (401, 403, 500,
							etc.) as those pages are often still affected by injection issues, in
							which case there is still concern for browsers sniffing pages away from
							their actual content type.
							At &quot;High&quot; threshold this scan rule will not alert on client or
							server error responses.</otherinfo>
					</instance>


					<instance>
						<uri>
							https://public-firing-range.appspot.com/escape/serverside/escapeHtml/css_style_value?escape=HTML_ESCAPE&amp;q=a</uri>
						<method>GET</method>
						<param>X-Content-Type-Options</param>
						<attack></attack>
						<evidence></evidence>
						<otherinfo>This issue still applies to error type pages (401, 403, 500,
							etc.) as those pages are often still affected by injection issues, in
							which case there is still concern for browsers sniffing pages away from
							their actual content type.
							At &quot;High&quot; threshold this scan rule will not alert on client or
							server error responses.</otherinfo>
					</instance>


					<instance>
						<uri>
							https://public-firing-range.appspot.com/escape/serverside/escapeHtml/head?q=a</uri>
						<method>GET</method>
						<param>X-Content-Type-Options</param>
						<attack></attack>
						<evidence></evidence>
						<otherinfo>This issue still applies to error type pages (401, 403, 500,
							etc.) as those pages are often still affected by injection issues, in
							which case there is still concern for browsers sniffing pages away from
							their actual content type.
							At &quot;High&quot; threshold this scan rule will not alert on client or
							server error responses.</otherinfo>
					</instance>


					<instance>
						<uri>
							https://public-firing-range.appspot.com/escape/serverside/escapeHtml/js_assignment?q=a</uri>
						<method>GET</method>
						<param>X-Content-Type-Options</param>
						<attack></attack>
						<evidence></evidence>
						<otherinfo>This issue still applies to error type pages (401, 403, 500,
							etc.) as those pages are often still affected by injection issues, in
							which case there is still concern for browsers sniffing pages away from
							their actual content type.
							At &quot;High&quot; threshold this scan rule will not alert on client or
							server error responses.</otherinfo>
					</instance>


					<instance>
						<uri>
							https://public-firing-range.appspot.com/escape/serverside/escapeHtml/js_comment?q=a</uri>
						<method>GET</method>
						<param>X-Content-Type-Options</param>
						<attack></attack>
						<evidence></evidence>
						<otherinfo>This issue still applies to error type pages (401, 403, 500,
							etc.) as those pages are often still affected by injection issues, in
							which case there is still concern for browsers sniffing pages away from
							their actual content type.
							At &quot;High&quot; threshold this scan rule will not alert on client or
							server error responses.</otherinfo>
					</instance>


					<instance>
						<uri>
							https://public-firing-range.appspot.com/escape/serverside/escapeHtml/js_eval?q=a</uri>
						<method>GET</method>
						<param>X-Content-Type-Options</param>
						<attack></attack>
						<evidence></evidence>
						<otherinfo>This issue still applies to error type pages (401, 403, 500,
							etc.) as those pages are often still affected by injection issues, in
							which case there is still concern for browsers sniffing pages away from
							their actual content type.
							At &quot;High&quot; threshold this scan rule will not alert on client or
							server error responses.</otherinfo>
					</instance>


					<instance>
						<uri>
							https://public-firing-range.appspot.com/escape/serverside/escapeHtml/js_quoted_string?q=a</uri>
						<method>GET</method>
						<param>X-Content-Type-Options</param>
						<attack></attack>
						<evidence></evidence>
						<otherinfo>This issue still applies to error type pages (401, 403, 500,
							etc.) as those pages are often still affected by injection issues, in
							which case there is still concern for browsers sniffing pages away from
							their actual content type.
							At &quot;High&quot; threshold this scan rule will not alert on client or
							server error responses.</otherinfo>
					</instance>


					<instance>
						<uri>
							https://public-firing-range.appspot.com/escape/serverside/escapeHtml/js_singlequoted_string?q=a</uri>
						<method>GET</method>
						<param>X-Content-Type-Options</param>
						<attack></attack>
						<evidence></evidence>
						<otherinfo>This issue still applies to error type pages (401, 403, 500,
							etc.) as those pages are often still affected by injection issues, in
							which case there is still concern for browsers sniffing pages away from
							their actual content type.
							At &quot;High&quot; threshold this scan rule will not alert on client or
							server error responses.</otherinfo>
					</instance>


					<instance>
						<uri>
							https://public-firing-range.appspot.com/escape/serverside/escapeHtml/js_slashquoted_string?q=a</uri>
						<method>GET</method>
						<param>X-Content-Type-Options</param>
						<attack></attack>
						<evidence></evidence>
						<otherinfo>This issue still applies to error type pages (401, 403, 500,
							etc.) as those pages are often still affected by injection issues, in
							which case there is still concern for browsers sniffing pages away from
							their actual content type.
							At &quot;High&quot; threshold this scan rule will not alert on client or
							server error responses.</otherinfo>
					</instance>


					<instance>
						<uri>
							https://public-firing-range.appspot.com/escape/serverside/escapeHtml/tagname?q=a</uri>
						<method>GET</method>
						<param>X-Content-Type-Options</param>
						<attack></attack>
						<evidence></evidence>
						<otherinfo>This issue still applies to error type pages (401, 403, 500,
							etc.) as those pages are often still affected by injection issues, in
							which case there is still concern for browsers sniffing pages away from
							their actual content type.
							At &quot;High&quot; threshold this scan rule will not alert on client or
							server error responses.</otherinfo>
					</instance>


					<instance>
						<uri>
							https://public-firing-range.appspot.com/escape/serverside/escapeHtml/textarea?q=a</uri>
						<method>GET</method>
						<param>X-Content-Type-Options</param>
						<attack></attack>
						<evidence></evidence>
						<otherinfo>This issue still applies to error type pages (401, 403, 500,
							etc.) as those pages are often still affected by injection issues, in
							which case there is still concern for browsers sniffing pages away from
							their actual content type.
							At &quot;High&quot; threshold this scan rule will not alert on client or
							server error responses.</otherinfo>
					</instance>


					<instance>
						<uri>
							https://public-firing-range.appspot.com/flashinjection/callbackIsEchoedBack?callback=func</uri>
						<method>GET</method>
						<param>X-Content-Type-Options</param>
						<attack></attack>
						<evidence></evidence>
						<otherinfo>This issue still applies to error type pages (401, 403, 500,
							etc.) as those pages are often still affected by injection issues, in
							which case there is still concern for browsers sniffing pages away from
							their actual content type.
							At &quot;High&quot; threshold this scan rule will not alert on client or
							server error responses.</otherinfo>
					</instance>


					<instance>
						<uri>
							https://public-firing-range.appspot.com/flashinjection/callbackParameterDoesNothing?callback=func</uri>
						<method>GET</method>
						<param>X-Content-Type-Options</param>
						<attack></attack>
						<evidence></evidence>
						<otherinfo>This issue still applies to error type pages (401, 403, 500,
							etc.) as those pages are often still affected by injection issues, in
							which case there is still concern for browsers sniffing pages away from
							their actual content type.
							At &quot;High&quot; threshold this scan rule will not alert on client or
							server error responses.</otherinfo>
					</instance>


					<instance>
						<uri>https://public-firing-range.appspot.com/flashinjection/index.html</uri>
						<method>GET</method>
						<param>X-Content-Type-Options</param>
						<attack></attack>
						<evidence></evidence>
						<otherinfo>This issue still applies to error type pages (401, 403, 500,
							etc.) as those pages are often still affected by injection issues, in
							which case there is still concern for browsers sniffing pages away from
							their actual content type.
							At &quot;High&quot; threshold this scan rule will not alert on client or
							server error responses.</otherinfo>
					</instance>


					<instance>
						<uri>
							https://public-firing-range.appspot.com/invalidframingconfig/frameancestorsnonenoxfodeny</uri>
						<method>GET</method>
						<param>X-Content-Type-Options</param>
						<attack></attack>
						<evidence></evidence>
						<otherinfo>This issue still applies to error type pages (401, 403, 500,
							etc.) as those pages are often still affected by injection issues, in
							which case there is still concern for browsers sniffing pages away from
							their actual content type.
							At &quot;High&quot; threshold this scan rule will not alert on client or
							server error responses.</otherinfo>
					</instance>


					<instance>
						<uri>
							https://public-firing-range.appspot.com/invalidframingconfig/frameancestorsnoxfoallowfrom</uri>
						<method>GET</method>
						<param>X-Content-Type-Options</param>
						<attack></attack>
						<evidence></evidence>
						<otherinfo>This issue still applies to error type pages (401, 403, 500,
							etc.) as those pages are often still affected by injection issues, in
							which case there is still concern for browsers sniffing pages away from
							their actual content type.
							At &quot;High&quot; threshold this scan rule will not alert on client or
							server error responses.</otherinfo>
					</instance>


					<instance>
						<uri>
							https://public-firing-range.appspot.com/invalidframingconfig/frameancestorsselfnoxfosameorigin</uri>
						<method>GET</method>
						<param>X-Content-Type-Options</param>
						<attack></attack>
						<evidence></evidence>
						<otherinfo>This issue still applies to error type pages (401, 403, 500,
							etc.) as those pages are often still affected by injection issues, in
							which case there is still concern for browsers sniffing pages away from
							their actual content type.
							At &quot;High&quot; threshold this scan rule will not alert on client or
							server error responses.</otherinfo>
					</instance>


					<instance>
						<uri>https://public-firing-range.appspot.com/invalidframingconfig/index.html</uri>
						<method>GET</method>
						<param>X-Content-Type-Options</param>
						<attack></attack>
						<evidence></evidence>
						<otherinfo>This issue still applies to error type pages (401, 403, 500,
							etc.) as those pages are often still affected by injection issues, in
							which case there is still concern for browsers sniffing pages away from
							their actual content type.
							At &quot;High&quot; threshold this scan rule will not alert on client or
							server error responses.</otherinfo>
					</instance>


					<instance>
						<uri>
							https://public-firing-range.appspot.com/invalidframingconfig/xfoallowfromnocoverdomain</uri>
						<method>GET</method>
						<param>X-Content-Type-Options</param>
						<attack></attack>
						<evidence></evidence>
						<otherinfo>This issue still applies to error type pages (401, 403, 500,
							etc.) as those pages are often still affected by injection issues, in
							which case there is still concern for browsers sniffing pages away from
							their actual content type.
							At &quot;High&quot; threshold this scan rule will not alert on client or
							server error responses.</otherinfo>
					</instance>


					<instance>
						<uri>
							https://public-firing-range.appspot.com/invalidframingconfig/xfoallowfromnoframeancestors</uri>
						<method>GET</method>
						<param>X-Content-Type-Options</param>
						<attack></attack>
						<evidence></evidence>
						<otherinfo>This issue still applies to error type pages (401, 403, 500,
							etc.) as those pages are often still affected by injection issues, in
							which case there is still concern for browsers sniffing pages away from
							their actual content type.
							At &quot;High&quot; threshold this scan rule will not alert on client or
							server error responses.</otherinfo>
					</instance>


					<instance>
						<uri>
							https://public-firing-range.appspot.com/invalidframingconfig/xfodenynoframeancestorsnone</uri>
						<method>GET</method>
						<param>X-Content-Type-Options</param>
						<attack></attack>
						<evidence></evidence>
						<otherinfo>This issue still applies to error type pages (401, 403, 500,
							etc.) as those pages are often still affected by injection issues, in
							which case there is still concern for browsers sniffing pages away from
							their actual content type.
							At &quot;High&quot; threshold this scan rule will not alert on client or
							server error responses.</otherinfo>
					</instance>


					<instance>
						<uri>
							https://public-firing-range.appspot.com/invalidframingconfig/xfosameoriginnoframeancestorsself</uri>
						<method>GET</method>
						<param>X-Content-Type-Options</param>
						<attack></attack>
						<evidence></evidence>
						<otherinfo>This issue still applies to error type pages (401, 403, 500,
							etc.) as those pages are often still affected by injection issues, in
							which case there is still concern for browsers sniffing pages away from
							their actual content type.
							At &quot;High&quot; threshold this scan rule will not alert on client or
							server error responses.</otherinfo>
					</instance>


					<instance>
						<uri>https://public-firing-range.appspot.com/leakedcookie/index.html</uri>
						<method>GET</method>
						<param>X-Content-Type-Options</param>
						<attack></attack>
						<evidence></evidence>
						<otherinfo>This issue still applies to error type pages (401, 403, 500,
							etc.) as those pages are often still affected by injection issues, in
							which case there is still concern for browsers sniffing pages away from
							their actual content type.
							At &quot;High&quot; threshold this scan rule will not alert on client or
							server error responses.</otherinfo>
					</instance>


					<instance>
						<uri>https://public-firing-range.appspot.com/leakedcookie/leakedcookie</uri>
						<method>GET</method>
						<param>X-Content-Type-Options</param>
						<attack></attack>
						<evidence></evidence>
						<otherinfo>This issue still applies to error type pages (401, 403, 500,
							etc.) as those pages are often still affected by injection issues, in
							which case there is still concern for browsers sniffing pages away from
							their actual content type.
							At &quot;High&quot; threshold this scan rule will not alert on client or
							server error responses.</otherinfo>
					</instance>


					<instance>
						<uri>https://public-firing-range.appspot.com/leakedcookie/leakedcookie.js</uri>
						<method>GET</method>
						<param>X-Content-Type-Options</param>
						<attack></attack>
						<evidence></evidence>
						<otherinfo>This issue still applies to error type pages (401, 403, 500,
							etc.) as those pages are often still affected by injection issues, in
							which case there is still concern for browsers sniffing pages away from
							their actual content type.
							At &quot;High&quot; threshold this scan rule will not alert on client or
							server error responses.</otherinfo>
					</instance>


					<instance>
						<uri>https://public-firing-range.appspot.com/leakedcookie/leakedinresource</uri>
						<method>GET</method>
						<param>X-Content-Type-Options</param>
						<attack></attack>
						<evidence></evidence>
						<otherinfo>This issue still applies to error type pages (401, 403, 500,
							etc.) as those pages are often still affected by injection issues, in
							which case there is still concern for browsers sniffing pages away from
							their actual content type.
							At &quot;High&quot; threshold this scan rule will not alert on client or
							server error responses.</otherinfo>
					</instance>


					<instance>
						<uri>https://public-firing-range.appspot.com/mixedcontent/index.html</uri>
						<method>GET</method>
						<param>X-Content-Type-Options</param>
						<attack></attack>
						<evidence></evidence>
						<otherinfo>This issue still applies to error type pages (401, 403, 500,
							etc.) as those pages are often still affected by injection issues, in
							which case there is still concern for browsers sniffing pages away from
							their actual content type.
							At &quot;High&quot; threshold this scan rule will not alert on client or
							server error responses.</otherinfo>
					</instance>


					<instance>
						<uri>https://public-firing-range.appspot.com/redirect/index.html</uri>
						<method>GET</method>
						<param>X-Content-Type-Options</param>
						<attack></attack>
						<evidence></evidence>
						<otherinfo>This issue still applies to error type pages (401, 403, 500,
							etc.) as those pages are often still affected by injection issues, in
							which case there is still concern for browsers sniffing pages away from
							their actual content type.
							At &quot;High&quot; threshold this scan rule will not alert on client or
							server error responses.</otherinfo>
					</instance>


					<instance>
						<uri>https://public-firing-range.appspot.com/redirect/meta?q=/</uri>
						<method>GET</method>
						<param>X-Content-Type-Options</param>
						<attack></attack>
						<evidence></evidence>
						<otherinfo>This issue still applies to error type pages (401, 403, 500,
							etc.) as those pages are often still affected by injection issues, in
							which case there is still concern for browsers sniffing pages away from
							their actual content type.
							At &quot;High&quot; threshold this scan rule will not alert on client or
							server error responses.</otherinfo>
					</instance>


					<instance>
						<uri>
							https://public-firing-range.appspot.com/reflected/contentsniffing/json?q=a</uri>
						<method>GET</method>
						<param>X-Content-Type-Options</param>
						<attack></attack>
						<evidence></evidence>
						<otherinfo>This issue still applies to error type pages (401, 403, 500,
							etc.) as those pages are often still affected by injection issues, in
							which case there is still concern for browsers sniffing pages away from
							their actual content type.
							At &quot;High&quot; threshold this scan rule will not alert on client or
							server error responses.</otherinfo>
					</instance>


					<instance>
						<uri>
							https://public-firing-range.appspot.com/reflected/contentsniffing/plaintext?q=a</uri>
						<method>GET</method>
						<param>X-Content-Type-Options</param>
						<attack></attack>
						<evidence></evidence>
						<otherinfo>This issue still applies to error type pages (401, 403, 500,
							etc.) as those pages are often still affected by injection issues, in
							which case there is still concern for browsers sniffing pages away from
							their actual content type.
							At &quot;High&quot; threshold this scan rule will not alert on client or
							server error responses.</otherinfo>
					</instance>


					<instance>
						<uri>
							https://public-firing-range.appspot.com/reflected/escapedparameter/js_eventhandler_quoted/DOUBLE_QUOTED_ATTRIBUTE?q=a</uri>
						<method>GET</method>
						<param>X-Content-Type-Options</param>
						<attack></attack>
						<evidence></evidence>
						<otherinfo>This issue still applies to error type pages (401, 403, 500,
							etc.) as those pages are often still affected by injection issues, in
							which case there is still concern for browsers sniffing pages away from
							their actual content type.
							At &quot;High&quot; threshold this scan rule will not alert on client or
							server error responses.</otherinfo>
					</instance>


					<instance>
						<uri>
							https://public-firing-range.appspot.com/reflected/escapedparameter/js_eventhandler_singlequoted/SINGLE_QUOTED_ATTRIBUTE?q=a</uri>
						<method>GET</method>
						<param>X-Content-Type-Options</param>
						<attack></attack>
						<evidence></evidence>
						<otherinfo>This issue still applies to error type pages (401, 403, 500,
							etc.) as those pages are often still affected by injection issues, in
							which case there is still concern for browsers sniffing pages away from
							their actual content type.
							At &quot;High&quot; threshold this scan rule will not alert on client or
							server error responses.</otherinfo>
					</instance>


					<instance>
						<uri>
							https://public-firing-range.appspot.com/reflected/escapedparameter/js_eventhandler_unquoted/UNQUOTED_ATTRIBUTE?q=a</uri>
						<method>GET</method>
						<param>X-Content-Type-Options</param>
						<attack></attack>
						<evidence></evidence>
						<otherinfo>This issue still applies to error type pages (401, 403, 500,
							etc.) as those pages are often still affected by injection issues, in
							which case there is still concern for browsers sniffing pages away from
							their actual content type.
							At &quot;High&quot; threshold this scan rule will not alert on client or
							server error responses.</otherinfo>
					</instance>


					<instance>
						<uri>
							https://public-firing-range.appspot.com/reflected/filteredcharsets/attribute_unquoted/DoubleQuoteSinglequote?q=a</uri>
						<method>GET</method>
						<param>X-Content-Type-Options</param>
						<attack></attack>
						<evidence></evidence>
						<otherinfo>This issue still applies to error type pages (401, 403, 500,
							etc.) as those pages are often still affected by injection issues, in
							which case there is still concern for browsers sniffing pages away from
							their actual content type.
							At &quot;High&quot; threshold this scan rule will not alert on client or
							server error responses.</otherinfo>
					</instance>


					<instance>
						<uri>
							https://public-firing-range.appspot.com/reflected/filteredcharsets/body/SpaceDoubleQuoteSlashEquals?q=a</uri>
						<method>GET</method>
						<param>X-Content-Type-Options</param>
						<attack></attack>
						<evidence></evidence>
						<otherinfo>This issue still applies to error type pages (401, 403, 500,
							etc.) as those pages are often still affected by injection issues, in
							which case there is still concern for browsers sniffing pages away from
							their actual content type.
							At &quot;High&quot; threshold this scan rule will not alert on client or
							server error responses.</otherinfo>
					</instance>


					<instance>
						<uri>
							https://public-firing-range.appspot.com/reflected/filteredstrings/body/caseInsensitive/script?q=a</uri>
						<method>GET</method>
						<param>X-Content-Type-Options</param>
						<attack></attack>
						<evidence></evidence>
						<otherinfo>This issue still applies to error type pages (401, 403, 500,
							etc.) as those pages are often still affected by injection issues, in
							which case there is still concern for browsers sniffing pages away from
							their actual content type.
							At &quot;High&quot; threshold this scan rule will not alert on client or
							server error responses.</otherinfo>
					</instance>


					<instance>
						<uri>
							https://public-firing-range.appspot.com/reflected/filteredstrings/body/caseSensitive/script?q=a</uri>
						<method>GET</method>
						<param>X-Content-Type-Options</param>
						<attack></attack>
						<evidence></evidence>
						<otherinfo>This issue still applies to error type pages (401, 403, 500,
							etc.) as those pages are often still affected by injection issues, in
							which case there is still concern for browsers sniffing pages away from
							their actual content type.
							At &quot;High&quot; threshold this scan rule will not alert on client or
							server error responses.</otherinfo>
					</instance>


					<instance>
						<uri>https://public-firing-range.appspot.com/reflected/index.html</uri>
						<method>GET</method>
						<param>X-Content-Type-Options</param>
						<attack></attack>
						<evidence></evidence>
						<otherinfo>This issue still applies to error type pages (401, 403, 500,
							etc.) as those pages are often still affected by injection issues, in
							which case there is still concern for browsers sniffing pages away from
							their actual content type.
							At &quot;High&quot; threshold this scan rule will not alert on client or
							server error responses.</otherinfo>
					</instance>


					<instance>
						<uri>https://public-firing-range.appspot.com/reflected/jsoncallback</uri>
						<method>GET</method>
						<param>X-Content-Type-Options</param>
						<attack></attack>
						<evidence></evidence>
						<otherinfo>This issue still applies to error type pages (401, 403, 500,
							etc.) as those pages are often still affected by injection issues, in
							which case there is still concern for browsers sniffing pages away from
							their actual content type.
							At &quot;High&quot; threshold this scan rule will not alert on client or
							server error responses.</otherinfo>
					</instance>


					<instance>
						<uri>
							https://public-firing-range.appspot.com/reflected/parameter/attribute_name?q=a</uri>
						<method>GET</method>
						<param>X-Content-Type-Options</param>
						<attack></attack>
						<evidence></evidence>
						<otherinfo>This issue still applies to error type pages (401, 403, 500,
							etc.) as those pages are often still affected by injection issues, in
							which case there is still concern for browsers sniffing pages away from
							their actual content type.
							At &quot;High&quot; threshold this scan rule will not alert on client or
							server error responses.</otherinfo>
					</instance>


					<instance>
						<uri>
							https://public-firing-range.appspot.com/reflected/parameter/attribute_quoted?q=a</uri>
						<method>GET</method>
						<param>X-Content-Type-Options</param>
						<attack></attack>
						<evidence></evidence>
						<otherinfo>This issue still applies to error type pages (401, 403, 500,
							etc.) as those pages are often still affected by injection issues, in
							which case there is still concern for browsers sniffing pages away from
							their actual content type.
							At &quot;High&quot; threshold this scan rule will not alert on client or
							server error responses.</otherinfo>
					</instance>


					<instance>
						<uri>
							https://public-firing-range.appspot.com/reflected/parameter/attribute_script?q=a</uri>
						<method>GET</method>
						<param>X-Content-Type-Options</param>
						<attack></attack>
						<evidence></evidence>
						<otherinfo>This issue still applies to error type pages (401, 403, 500,
							etc.) as those pages are often still affected by injection issues, in
							which case there is still concern for browsers sniffing pages away from
							their actual content type.
							At &quot;High&quot; threshold this scan rule will not alert on client or
							server error responses.</otherinfo>
					</instance>


					<instance>
						<uri>
							https://public-firing-range.appspot.com/reflected/parameter/attribute_singlequoted?q=a</uri>
						<method>GET</method>
						<param>X-Content-Type-Options</param>
						<attack></attack>
						<evidence></evidence>
						<otherinfo>This issue still applies to error type pages (401, 403, 500,
							etc.) as those pages are often still affected by injection issues, in
							which case there is still concern for browsers sniffing pages away from
							their actual content type.
							At &quot;High&quot; threshold this scan rule will not alert on client or
							server error responses.</otherinfo>
					</instance>


					<instance>
						<uri>
							https://public-firing-range.appspot.com/reflected/parameter/attribute_unquoted?q=a</uri>
						<method>GET</method>
						<param>X-Content-Type-Options</param>
						<attack></attack>
						<evidence></evidence>
						<otherinfo>This issue still applies to error type pages (401, 403, 500,
							etc.) as those pages are often still affected by injection issues, in
							which case there is still concern for browsers sniffing pages away from
							their actual content type.
							At &quot;High&quot; threshold this scan rule will not alert on client or
							server error responses.</otherinfo>
					</instance>


					<instance>
						<uri>https://public-firing-range.appspot.com/reflected/parameter/body?q=a</uri>
						<method>GET</method>
						<param>X-Content-Type-Options</param>
						<attack></attack>
						<evidence></evidence>
						<otherinfo>This issue still applies to error type pages (401, 403, 500,
							etc.) as those pages are often still affected by injection issues, in
							which case there is still concern for browsers sniffing pages away from
							their actual content type.
							At &quot;High&quot; threshold this scan rule will not alert on client or
							server error responses.</otherinfo>
					</instance>


					<instance>
						<uri>
							https://public-firing-range.appspot.com/reflected/parameter/body_comment?q=a</uri>
						<method>GET</method>
						<param>X-Content-Type-Options</param>
						<attack></attack>
						<evidence></evidence>
						<otherinfo>This issue still applies to error type pages (401, 403, 500,
							etc.) as those pages are often still affected by injection issues, in
							which case there is still concern for browsers sniffing pages away from
							their actual content type.
							At &quot;High&quot; threshold this scan rule will not alert on client or
							server error responses.</otherinfo>
					</instance>


					<instance>
						<uri>
							https://public-firing-range.appspot.com/reflected/parameter/css_style?q=a</uri>
						<method>GET</method>
						<param>X-Content-Type-Options</param>
						<attack></attack>
						<evidence></evidence>
						<otherinfo>This issue still applies to error type pages (401, 403, 500,
							etc.) as those pages are often still affected by injection issues, in
							which case there is still concern for browsers sniffing pages away from
							their actual content type.
							At &quot;High&quot; threshold this scan rule will not alert on client or
							server error responses.</otherinfo>
					</instance>


					<instance>
						<uri>
							https://public-firing-range.appspot.com/reflected/parameter/css_style_font_value?q=a</uri>
						<method>GET</method>
						<param>X-Content-Type-Options</param>
						<attack></attack>
						<evidence></evidence>
						<otherinfo>This issue still applies to error type pages (401, 403, 500,
							etc.) as those pages are often still affected by injection issues, in
							which case there is still concern for browsers sniffing pages away from
							their actual content type.
							At &quot;High&quot; threshold this scan rule will not alert on client or
							server error responses.</otherinfo>
					</instance>


					<instance>
						<uri>
							https://public-firing-range.appspot.com/reflected/parameter/css_style_value?q=a</uri>
						<method>GET</method>
						<param>X-Content-Type-Options</param>
						<attack></attack>
						<evidence></evidence>
						<otherinfo>This issue still applies to error type pages (401, 403, 500,
							etc.) as those pages are often still affected by injection issues, in
							which case there is still concern for browsers sniffing pages away from
							their actual content type.
							At &quot;High&quot; threshold this scan rule will not alert on client or
							server error responses.</otherinfo>
					</instance>


					<instance>
						<uri>https://public-firing-range.appspot.com/reflected/parameter/form</uri>
						<method>GET</method>
						<param>X-Content-Type-Options</param>
						<attack></attack>
						<evidence></evidence>
						<otherinfo>This issue still applies to error type pages (401, 403, 500,
							etc.) as those pages are often still affected by injection issues, in
							which case there is still concern for browsers sniffing pages away from
							their actual content type.
							At &quot;High&quot; threshold this scan rule will not alert on client or
							server error responses.</otherinfo>
					</instance>


					<instance>
						<uri>https://public-firing-range.appspot.com/reflected/parameter/head?q=a</uri>
						<method>GET</method>
						<param>X-Content-Type-Options</param>
						<attack></attack>
						<evidence></evidence>
						<otherinfo>This issue still applies to error type pages (401, 403, 500,
							etc.) as those pages are often still affected by injection issues, in
							which case there is still concern for browsers sniffing pages away from
							their actual content type.
							At &quot;High&quot; threshold this scan rule will not alert on client or
							server error responses.</otherinfo>
					</instance>


					<instance>
						<uri>
							https://public-firing-range.appspot.com/reflected/parameter/iframe_attribute_value?q=a</uri>
						<method>GET</method>
						<param>X-Content-Type-Options</param>
						<attack></attack>
						<evidence></evidence>
						<otherinfo>This issue still applies to error type pages (401, 403, 500,
							etc.) as those pages are often still affected by injection issues, in
							which case there is still concern for browsers sniffing pages away from
							their actual content type.
							At &quot;High&quot; threshold this scan rule will not alert on client or
							server error responses.</otherinfo>
					</instance>


					<instance>
						<uri>
							https://public-firing-range.appspot.com/reflected/parameter/iframe_srcdoc?q=a</uri>
						<method>GET</method>
						<param>X-Content-Type-Options</param>
						<attack></attack>
						<evidence></evidence>
						<otherinfo>This issue still applies to error type pages (401, 403, 500,
							etc.) as those pages are often still affected by injection issues, in
							which case there is still concern for browsers sniffing pages away from
							their actual content type.
							At &quot;High&quot; threshold this scan rule will not alert on client or
							server error responses.</otherinfo>
					</instance>


					<instance>
						<uri>
							https://public-firing-range.appspot.com/reflected/parameter/js_assignment?q=a</uri>
						<method>GET</method>
						<param>X-Content-Type-Options</param>
						<attack></attack>
						<evidence></evidence>
						<otherinfo>This issue still applies to error type pages (401, 403, 500,
							etc.) as those pages are often still affected by injection issues, in
							which case there is still concern for browsers sniffing pages away from
							their actual content type.
							At &quot;High&quot; threshold this scan rule will not alert on client or
							server error responses.</otherinfo>
					</instance>


					<instance>
						<uri>
							https://public-firing-range.appspot.com/reflected/parameter/js_comment?q=a</uri>
						<method>GET</method>
						<param>X-Content-Type-Options</param>
						<attack></attack>
						<evidence></evidence>
						<otherinfo>This issue still applies to error type pages (401, 403, 500,
							etc.) as those pages are often still affected by injection issues, in
							which case there is still concern for browsers sniffing pages away from
							their actual content type.
							At &quot;High&quot; threshold this scan rule will not alert on client or
							server error responses.</otherinfo>
					</instance>


					<instance>
						<uri>https://public-firing-range.appspot.com/reflected/parameter/js_eval?q=a</uri>
						<method>GET</method>
						<param>X-Content-Type-Options</param>
						<attack></attack>
						<evidence></evidence>
						<otherinfo>This issue still applies to error type pages (401, 403, 500,
							etc.) as those pages are often still affected by injection issues, in
							which case there is still concern for browsers sniffing pages away from
							their actual content type.
							At &quot;High&quot; threshold this scan rule will not alert on client or
							server error responses.</otherinfo>
					</instance>


					<instance>
						<uri>
							https://public-firing-range.appspot.com/reflected/parameter/js_quoted_string?q=a</uri>
						<method>GET</method>
						<param>X-Content-Type-Options</param>
						<attack></attack>
						<evidence></evidence>
						<otherinfo>This issue still applies to error type pages (401, 403, 500,
							etc.) as those pages are often still affected by injection issues, in
							which case there is still concern for browsers sniffing pages away from
							their actual content type.
							At &quot;High&quot; threshold this scan rule will not alert on client or
							server error responses.</otherinfo>
					</instance>


					<instance>
						<uri>
							https://public-firing-range.appspot.com/reflected/parameter/js_singlequoted_string?q=a</uri>
						<method>GET</method>
						<param>X-Content-Type-Options</param>
						<attack></attack>
						<evidence></evidence>
						<otherinfo>This issue still applies to error type pages (401, 403, 500,
							etc.) as those pages are often still affected by injection issues, in
							which case there is still concern for browsers sniffing pages away from
							their actual content type.
							At &quot;High&quot; threshold this scan rule will not alert on client or
							server error responses.</otherinfo>
					</instance>


					<instance>
						<uri>
							https://public-firing-range.appspot.com/reflected/parameter/js_slashquoted_string?q=a</uri>
						<method>GET</method>
						<param>X-Content-Type-Options</param>
						<attack></attack>
						<evidence></evidence>
						<otherinfo>This issue still applies to error type pages (401, 403, 500,
							etc.) as those pages are often still affected by injection issues, in
							which case there is still concern for browsers sniffing pages away from
							their actual content type.
							At &quot;High&quot; threshold this scan rule will not alert on client or
							server error responses.</otherinfo>
					</instance>


					<instance>
						<uri>https://public-firing-range.appspot.com/reflected/parameter/json?q=a</uri>
						<method>GET</method>
						<param>X-Content-Type-Options</param>
						<attack></attack>
						<evidence></evidence>
						<otherinfo>This issue still applies to error type pages (401, 403, 500,
							etc.) as those pages are often still affected by injection issues, in
							which case there is still concern for browsers sniffing pages away from
							their actual content type.
							At &quot;High&quot; threshold this scan rule will not alert on client or
							server error responses.</otherinfo>
					</instance>


					<instance>
						<uri>
							https://public-firing-range.appspot.com/reflected/parameter/noscript?q=a</uri>
						<method>GET</method>
						<param>X-Content-Type-Options</param>
						<attack></attack>
						<evidence></evidence>
						<otherinfo>This issue still applies to error type pages (401, 403, 500,
							etc.) as those pages are often still affected by injection issues, in
							which case there is still concern for browsers sniffing pages away from
							their actual content type.
							At &quot;High&quot; threshold this scan rule will not alert on client or
							server error responses.</otherinfo>
					</instance>


					<instance>
						<uri>
							https://public-firing-range.appspot.com/reflected/parameter/style_attribute_value?q=a</uri>
						<method>GET</method>
						<param>X-Content-Type-Options</param>
						<attack></attack>
						<evidence></evidence>
						<otherinfo>This issue still applies to error type pages (401, 403, 500,
							etc.) as those pages are often still affected by injection issues, in
							which case there is still concern for browsers sniffing pages away from
							their actual content type.
							At &quot;High&quot; threshold this scan rule will not alert on client or
							server error responses.</otherinfo>
					</instance>


					<instance>
						<uri>https://public-firing-range.appspot.com/reflected/parameter/tagname?q=a</uri>
						<method>GET</method>
						<param>X-Content-Type-Options</param>
						<attack></attack>
						<evidence></evidence>
						<otherinfo>This issue still applies to error type pages (401, 403, 500,
							etc.) as those pages are often still affected by injection issues, in
							which case there is still concern for browsers sniffing pages away from
							their actual content type.
							At &quot;High&quot; threshold this scan rule will not alert on client or
							server error responses.</otherinfo>
					</instance>


					<instance>
						<uri>
							https://public-firing-range.appspot.com/reflected/parameter/textarea?q=a</uri>
						<method>GET</method>
						<param>X-Content-Type-Options</param>
						<attack></attack>
						<evidence></evidence>
						<otherinfo>This issue still applies to error type pages (401, 403, 500,
							etc.) as those pages are often still affected by injection issues, in
							which case there is still concern for browsers sniffing pages away from
							their actual content type.
							At &quot;High&quot; threshold this scan rule will not alert on client or
							server error responses.</otherinfo>
					</instance>


					<instance>
						<uri>
							https://public-firing-range.appspot.com/reflected/parameter/textarea_attribute_value?q=a</uri>
						<method>GET</method>
						<param>X-Content-Type-Options</param>
						<attack></attack>
						<evidence></evidence>
						<otherinfo>This issue still applies to error type pages (401, 403, 500,
							etc.) as those pages are often still affected by injection issues, in
							which case there is still concern for browsers sniffing pages away from
							their actual content type.
							At &quot;High&quot; threshold this scan rule will not alert on client or
							server error responses.</otherinfo>
					</instance>


					<instance>
						<uri>https://public-firing-range.appspot.com/reflected/parameter/title?q=a</uri>
						<method>GET</method>
						<param>X-Content-Type-Options</param>
						<attack></attack>
						<evidence></evidence>
						<otherinfo>This issue still applies to error type pages (401, 403, 500,
							etc.) as those pages are often still affected by injection issues, in
							which case there is still concern for browsers sniffing pages away from
							their actual content type.
							At &quot;High&quot; threshold this scan rule will not alert on client or
							server error responses.</otherinfo>
					</instance>


					<instance>
						<uri>https://public-firing-range.appspot.com/reflected/url/css_import?q=a</uri>
						<method>GET</method>
						<param>X-Content-Type-Options</param>
						<attack></attack>
						<evidence></evidence>
						<otherinfo>This issue still applies to error type pages (401, 403, 500,
							etc.) as those pages are often still affected by injection issues, in
							which case there is still concern for browsers sniffing pages away from
							their actual content type.
							At &quot;High&quot; threshold this scan rule will not alert on client or
							server error responses.</otherinfo>
					</instance>


					<instance>
						<uri>https://public-firing-range.appspot.com/reflected/url/href?q=a</uri>
						<method>GET</method>
						<param>X-Content-Type-Options</param>
						<attack></attack>
						<evidence></evidence>
						<otherinfo>This issue still applies to error type pages (401, 403, 500,
							etc.) as those pages are often still affected by injection issues, in
							which case there is still concern for browsers sniffing pages away from
							their actual content type.
							At &quot;High&quot; threshold this scan rule will not alert on client or
							server error responses.</otherinfo>
					</instance>


					<instance>
						<uri>https://public-firing-range.appspot.com/reflected/url/object_data?q=a</uri>
						<method>GET</method>
						<param>X-Content-Type-Options</param>
						<attack></attack>
						<evidence></evidence>
						<otherinfo>This issue still applies to error type pages (401, 403, 500,
							etc.) as those pages are often still affected by injection issues, in
							which case there is still concern for browsers sniffing pages away from
							their actual content type.
							At &quot;High&quot; threshold this scan rule will not alert on client or
							server error responses.</otherinfo>
					</instance>


					<instance>
						<uri>https://public-firing-range.appspot.com/reflected/url/object_param?q=a</uri>
						<method>GET</method>
						<param>X-Content-Type-Options</param>
						<attack></attack>
						<evidence></evidence>
						<otherinfo>This issue still applies to error type pages (401, 403, 500,
							etc.) as those pages are often still affected by injection issues, in
							which case there is still concern for browsers sniffing pages away from
							their actual content type.
							At &quot;High&quot; threshold this scan rule will not alert on client or
							server error responses.</otherinfo>
					</instance>


					<instance>
						<uri>https://public-firing-range.appspot.com/reflected/url/script_src?q=a</uri>
						<method>GET</method>
						<param>X-Content-Type-Options</param>
						<attack></attack>
						<evidence></evidence>
						<otherinfo>This issue still applies to error type pages (401, 403, 500,
							etc.) as those pages are often still affected by injection issues, in
							which case there is still concern for browsers sniffing pages away from
							their actual content type.
							At &quot;High&quot; threshold this scan rule will not alert on client or
							server error responses.</otherinfo>
					</instance>


					<instance>
						<uri>https://public-firing-range.appspot.com/remoteinclude/index.html</uri>
						<method>GET</method>
						<param>X-Content-Type-Options</param>
						<attack></attack>
						<evidence></evidence>
						<otherinfo>This issue still applies to error type pages (401, 403, 500,
							etc.) as those pages are often still affected by injection issues, in
							which case there is still concern for browsers sniffing pages away from
							their actual content type.
							At &quot;High&quot; threshold this scan rule will not alert on client or
							server error responses.</otherinfo>
					</instance>


					<instance>
						<uri>https://public-firing-range.appspot.com/remoteinclude/object_hash.html</uri>
						<method>GET</method>
						<param>X-Content-Type-Options</param>
						<attack></attack>
						<evidence></evidence>
						<otherinfo>This issue still applies to error type pages (401, 403, 500,
							etc.) as those pages are often still affected by injection issues, in
							which case there is still concern for browsers sniffing pages away from
							their actual content type.
							At &quot;High&quot; threshold this scan rule will not alert on client or
							server error responses.</otherinfo>
					</instance>


					<instance>
						<uri>
							https://public-firing-range.appspot.com/remoteinclude/parameter/object/application_x-shockwave-flash?q=https://google.com</uri>
						<method>GET</method>
						<param>X-Content-Type-Options</param>
						<attack></attack>
						<evidence></evidence>
						<otherinfo>This issue still applies to error type pages (401, 403, 500,
							etc.) as those pages are often still affected by injection issues, in
							which case there is still concern for browsers sniffing pages away from
							their actual content type.
							At &quot;High&quot; threshold this scan rule will not alert on client or
							server error responses.</otherinfo>
					</instance>


					<instance>
						<uri>
							https://public-firing-range.appspot.com/remoteinclude/parameter/object_raw?q=https://google.com</uri>
						<method>GET</method>
						<param>X-Content-Type-Options</param>
						<attack></attack>
						<evidence></evidence>
						<otherinfo>This issue still applies to error type pages (401, 403, 500,
							etc.) as those pages are often still affected by injection issues, in
							which case there is still concern for browsers sniffing pages away from
							their actual content type.
							At &quot;High&quot; threshold this scan rule will not alert on client or
							server error responses.</otherinfo>
					</instance>


					<instance>
						<uri>
							https://public-firing-range.appspot.com/remoteinclude/parameter/script?q=http://127.0.0.2/localhost_import.js</uri>
						<method>GET</method>
						<param>X-Content-Type-Options</param>
						<attack></attack>
						<evidence></evidence>
						<otherinfo>This issue still applies to error type pages (401, 403, 500,
							etc.) as those pages are often still affected by injection issues, in
							which case there is still concern for browsers sniffing pages away from
							their actual content type.
							At &quot;High&quot; threshold this scan rule will not alert on client or
							server error responses.</otherinfo>
					</instance>


					<instance>
						<uri>
							https://public-firing-range.appspot.com/remoteinclude/parameter/script?q=http://192.168.1.2/private_network_import.js</uri>
						<method>GET</method>
						<param>X-Content-Type-Options</param>
						<attack></attack>
						<evidence></evidence>
						<otherinfo>This issue still applies to error type pages (401, 403, 500,
							etc.) as those pages are often still affected by injection issues, in
							which case there is still concern for browsers sniffing pages away from
							their actual content type.
							At &quot;High&quot; threshold this scan rule will not alert on client or
							server error responses.</otherinfo>
					</instance>


					<instance>
						<uri>
							https://public-firing-range.appspot.com/remoteinclude/parameter/script?q=http://g00gle.com/typosquatting_domain.js</uri>
						<method>GET</method>
						<param>X-Content-Type-Options</param>
						<attack></attack>
						<evidence></evidence>
						<otherinfo>This issue still applies to error type pages (401, 403, 500,
							etc.) as those pages are often still affected by injection issues, in
							which case there is still concern for browsers sniffing pages away from
							their actual content type.
							At &quot;High&quot; threshold this scan rule will not alert on client or
							server error responses.</otherinfo>
					</instance>


					<instance>
						<uri>
							https://public-firing-range.appspot.com/remoteinclude/parameter/script?q=https://google.com</uri>
						<method>GET</method>
						<param>X-Content-Type-Options</param>
						<attack></attack>
						<evidence></evidence>
						<otherinfo>This issue still applies to error type pages (401, 403, 500,
							etc.) as those pages are often still affected by injection issues, in
							which case there is still concern for browsers sniffing pages away from
							their actual content type.
							At &quot;High&quot; threshold this scan rule will not alert on client or
							server error responses.</otherinfo>
					</instance>


					<instance>
						<uri>https://public-firing-range.appspot.com/remoteinclude/script_hash.html</uri>
						<method>GET</method>
						<param>X-Content-Type-Options</param>
						<attack></attack>
						<evidence></evidence>
						<otherinfo>This issue still applies to error type pages (401, 403, 500,
							etc.) as those pages are often still affected by injection issues, in
							which case there is still concern for browsers sniffing pages away from
							their actual content type.
							At &quot;High&quot; threshold this scan rule will not alert on client or
							server error responses.</otherinfo>
					</instance>


					<instance>
						<uri>https://public-firing-range.appspot.com/reverseclickjacking/</uri>
						<method>GET</method>
						<param>X-Content-Type-Options</param>
						<attack></attack>
						<evidence></evidence>
						<otherinfo>This issue still applies to error type pages (401, 403, 500,
							etc.) as those pages are often still affected by injection issues, in
							which case there is still concern for browsers sniffing pages away from
							their actual content type.
							At &quot;High&quot; threshold this scan rule will not alert on client or
							server error responses.</otherinfo>
					</instance>


					<instance>
						<uri>
							https://public-firing-range.appspot.com/reverseclickjacking/jsonpendpoint?callback=foo&amp;q</uri>
						<method>GET</method>
						<param>X-Content-Type-Options</param>
						<attack></attack>
						<evidence></evidence>
						<otherinfo>This issue still applies to error type pages (401, 403, 500,
							etc.) as those pages are often still affected by injection issues, in
							which case there is still concern for browsers sniffing pages away from
							their actual content type.
							At &quot;High&quot; threshold this scan rule will not alert on client or
							server error responses.</otherinfo>
					</instance>


					<instance>
						<uri>
							https://public-firing-range.appspot.com/reverseclickjacking/jsonpendpoint?callback=urc_button.click&amp;q</uri>
						<method>GET</method>
						<param>X-Content-Type-Options</param>
						<attack></attack>
						<evidence></evidence>
						<otherinfo>This issue still applies to error type pages (401, 403, 500,
							etc.) as those pages are often still affected by injection issues, in
							which case there is still concern for browsers sniffing pages away from
							their actual content type.
							At &quot;High&quot; threshold this scan rule will not alert on client or
							server error responses.</otherinfo>
					</instance>


					<instance>
						<uri>
							https://public-firing-range.appspot.com/reverseclickjacking/multipage/ParameterInFragment/InCallback/WithoutXFO/</uri>
						<method>GET</method>
						<param>X-Content-Type-Options</param>
						<attack></attack>
						<evidence></evidence>
						<otherinfo>This issue still applies to error type pages (401, 403, 500,
							etc.) as those pages are often still affected by injection issues, in
							which case there is still concern for browsers sniffing pages away from
							their actual content type.
							At &quot;High&quot; threshold this scan rule will not alert on client or
							server error responses.</otherinfo>
					</instance>


					<instance>
						<uri>
							https://public-firing-range.appspot.com/reverseclickjacking/multipage/ParameterInFragment/InCallback/WithXFO/</uri>
						<method>GET</method>
						<param>X-Content-Type-Options</param>
						<attack></attack>
						<evidence></evidence>
						<otherinfo>This issue still applies to error type pages (401, 403, 500,
							etc.) as those pages are often still affected by injection issues, in
							which case there is still concern for browsers sniffing pages away from
							their actual content type.
							At &quot;High&quot; threshold this scan rule will not alert on client or
							server error responses.</otherinfo>
					</instance>


					<instance>
						<uri>
							https://public-firing-range.appspot.com/reverseclickjacking/multipage/ParameterInFragment/OtherParameter/WithoutXFO/</uri>
						<method>GET</method>
						<param>X-Content-Type-Options</param>
						<attack></attack>
						<evidence></evidence>
						<otherinfo>This issue still applies to error type pages (401, 403, 500,
							etc.) as those pages are often still affected by injection issues, in
							which case there is still concern for browsers sniffing pages away from
							their actual content type.
							At &quot;High&quot; threshold this scan rule will not alert on client or
							server error responses.</otherinfo>
					</instance>


					<instance>
						<uri>
							https://public-firing-range.appspot.com/reverseclickjacking/multipage/ParameterInFragment/OtherParameter/WithXFO/</uri>
						<method>GET</method>
						<param>X-Content-Type-Options</param>
						<attack></attack>
						<evidence></evidence>
						<otherinfo>This issue still applies to error type pages (401, 403, 500,
							etc.) as those pages are often still affected by injection issues, in
							which case there is still concern for browsers sniffing pages away from
							their actual content type.
							At &quot;High&quot; threshold this scan rule will not alert on client or
							server error responses.</otherinfo>
					</instance>


					<instance>
						<uri>
							https://public-firing-range.appspot.com/reverseclickjacking/multipage/ParameterInQuery/InCallback/WithoutXFO/?q=foo</uri>
						<method>GET</method>
						<param>X-Content-Type-Options</param>
						<attack></attack>
						<evidence></evidence>
						<otherinfo>This issue still applies to error type pages (401, 403, 500,
							etc.) as those pages are often still affected by injection issues, in
							which case there is still concern for browsers sniffing pages away from
							their actual content type.
							At &quot;High&quot; threshold this scan rule will not alert on client or
							server error responses.</otherinfo>
					</instance>


					<instance>
						<uri>
							https://public-firing-range.appspot.com/reverseclickjacking/multipage/ParameterInQuery/InCallback/WithXFO/?q=foo</uri>
						<method>GET</method>
						<param>X-Content-Type-Options</param>
						<attack></attack>
						<evidence></evidence>
						<otherinfo>This issue still applies to error type pages (401, 403, 500,
							etc.) as those pages are often still affected by injection issues, in
							which case there is still concern for browsers sniffing pages away from
							their actual content type.
							At &quot;High&quot; threshold this scan rule will not alert on client or
							server error responses.</otherinfo>
					</instance>


					<instance>
						<uri>
							https://public-firing-range.appspot.com/reverseclickjacking/multipage/ParameterInQuery/OtherParameter/WithoutXFO/?q=%26callback%3Dfoo%23</uri>
						<method>GET</method>
						<param>X-Content-Type-Options</param>
						<attack></attack>
						<evidence></evidence>
						<otherinfo>This issue still applies to error type pages (401, 403, 500,
							etc.) as those pages are often still affected by injection issues, in
							which case there is still concern for browsers sniffing pages away from
							their actual content type.
							At &quot;High&quot; threshold this scan rule will not alert on client or
							server error responses.</otherinfo>
					</instance>


					<instance>
						<uri>
							https://public-firing-range.appspot.com/reverseclickjacking/multipage/ParameterInQuery/OtherParameter/WithXFO/?q=%26callback%3Dfoo%23</uri>
						<method>GET</method>
						<param>X-Content-Type-Options</param>
						<attack></attack>
						<evidence></evidence>
						<otherinfo>This issue still applies to error type pages (401, 403, 500,
							etc.) as those pages are often still affected by injection issues, in
							which case there is still concern for browsers sniffing pages away from
							their actual content type.
							At &quot;High&quot; threshold this scan rule will not alert on client or
							server error responses.</otherinfo>
					</instance>


					<instance>
						<uri>
							https://public-firing-range.appspot.com/reverseclickjacking/singlepage/ParameterInFragment/InCallback/</uri>
						<method>GET</method>
						<param>X-Content-Type-Options</param>
						<attack></attack>
						<evidence></evidence>
						<otherinfo>This issue still applies to error type pages (401, 403, 500,
							etc.) as those pages are often still affected by injection issues, in
							which case there is still concern for browsers sniffing pages away from
							their actual content type.
							At &quot;High&quot; threshold this scan rule will not alert on client or
							server error responses.</otherinfo>
					</instance>


					<instance>
						<uri>
							https://public-firing-range.appspot.com/reverseclickjacking/singlepage/ParameterInFragment/OtherParameter/</uri>
						<method>GET</method>
						<param>X-Content-Type-Options</param>
						<attack></attack>
						<evidence></evidence>
						<otherinfo>This issue still applies to error type pages (401, 403, 500,
							etc.) as those pages are often still affected by injection issues, in
							which case there is still concern for browsers sniffing pages away from
							their actual content type.
							At &quot;High&quot; threshold this scan rule will not alert on client or
							server error responses.</otherinfo>
					</instance>


					<instance>
						<uri>
							https://public-firing-range.appspot.com/reverseclickjacking/singlepage/ParameterInQuery/InCallback/?q=urc_button.click</uri>
						<method>GET</method>
						<param>X-Content-Type-Options</param>
						<attack></attack>
						<evidence></evidence>
						<otherinfo>This issue still applies to error type pages (401, 403, 500,
							etc.) as those pages are often still affected by injection issues, in
							which case there is still concern for browsers sniffing pages away from
							their actual content type.
							At &quot;High&quot; threshold this scan rule will not alert on client or
							server error responses.</otherinfo>
					</instance>


					<instance>
						<uri>
							https://public-firing-range.appspot.com/reverseclickjacking/singlepage/ParameterInQuery/OtherParameter/?q=%26callback%3Durc_button.click%23</uri>
						<method>GET</method>
						<param>X-Content-Type-Options</param>
						<attack></attack>
						<evidence></evidence>
						<otherinfo>This issue still applies to error type pages (401, 403, 500,
							etc.) as those pages are often still affected by injection issues, in
							which case there is still concern for browsers sniffing pages away from
							their actual content type.
							At &quot;High&quot; threshold this scan rule will not alert on client or
							server error responses.</otherinfo>
					</instance>


					<instance>
						<uri>https://public-firing-range.appspot.com/tags/index.html</uri>
						<method>GET</method>
						<param>X-Content-Type-Options</param>
						<attack></attack>
						<evidence></evidence>
						<otherinfo>This issue still applies to error type pages (401, 403, 500,
							etc.) as those pages are often still affected by injection issues, in
							which case there is still concern for browsers sniffing pages away from
							their actual content type.
							At &quot;High&quot; threshold this scan rule will not alert on client or
							server error responses.</otherinfo>
					</instance>


					<instance>
						<uri>https://public-firing-range.appspot.com/tags/multiline?q=a</uri>
						<method>GET</method>
						<param>X-Content-Type-Options</param>
						<attack></attack>
						<evidence></evidence>
						<otherinfo>This issue still applies to error type pages (401, 403, 500,
							etc.) as those pages are often still affected by injection issues, in
							which case there is still concern for browsers sniffing pages away from
							their actual content type.
							At &quot;High&quot; threshold this scan rule will not alert on client or
							server error responses.</otherinfo>
					</instance>


					<instance>
						<uri>https://public-firing-range.appspot.com/urldom/index.html</uri>
						<method>GET</method>
						<param>X-Content-Type-Options</param>
						<attack></attack>
						<evidence></evidence>
						<otherinfo>This issue still applies to error type pages (401, 403, 500,
							etc.) as those pages are often still affected by injection issues, in
							which case there is still concern for browsers sniffing pages away from
							their actual content type.
							At &quot;High&quot; threshold this scan rule will not alert on client or
							server error responses.</otherinfo>
					</instance>


					<instance>
						<uri>https://public-firing-range.appspot.com/urldom/jsonp?callback=foo</uri>
						<method>GET</method>
						<param>X-Content-Type-Options</param>
						<attack></attack>
						<evidence></evidence>
						<otherinfo>This issue still applies to error type pages (401, 403, 500,
							etc.) as those pages are often still affected by injection issues, in
							which case there is still concern for browsers sniffing pages away from
							their actual content type.
							At &quot;High&quot; threshold this scan rule will not alert on client or
							server error responses.</otherinfo>
					</instance>


					<instance>
						<uri>https://public-firing-range.appspot.com/urldom/jsonp?callback=foobar</uri>
						<method>GET</method>
						<param>X-Content-Type-Options</param>
						<attack></attack>
						<evidence></evidence>
						<otherinfo>This issue still applies to error type pages (401, 403, 500,
							etc.) as those pages are often still affected by injection issues, in
							which case there is still concern for browsers sniffing pages away from
							their actual content type.
							At &quot;High&quot; threshold this scan rule will not alert on client or
							server error responses.</otherinfo>
					</instance>


					<instance>
						<uri>https://public-firing-range.appspot.com/urldom/location/hash/a.href</uri>
						<method>GET</method>
						<param>X-Content-Type-Options</param>
						<attack></attack>
						<evidence></evidence>
						<otherinfo>This issue still applies to error type pages (401, 403, 500,
							etc.) as those pages are often still affected by injection issues, in
							which case there is still concern for browsers sniffing pages away from
							their actual content type.
							At &quot;High&quot; threshold this scan rule will not alert on client or
							server error responses.</otherinfo>
					</instance>


					<instance>
						<uri>https://public-firing-range.appspot.com/urldom/location/hash/base.href</uri>
						<method>GET</method>
						<param>X-Content-Type-Options</param>
						<attack></attack>
						<evidence></evidence>
						<otherinfo>This issue still applies to error type pages (401, 403, 500,
							etc.) as those pages are often still affected by injection issues, in
							which case there is still concern for browsers sniffing pages away from
							their actual content type.
							At &quot;High&quot; threshold this scan rule will not alert on client or
							server error responses.</otherinfo>
					</instance>


					<instance>
						<uri>
							https://public-firing-range.appspot.com/urldom/location/hash/document.location</uri>
						<method>GET</method>
						<param>X-Content-Type-Options</param>
						<attack></attack>
						<evidence></evidence>
						<otherinfo>This issue still applies to error type pages (401, 403, 500,
							etc.) as those pages are often still affected by injection issues, in
							which case there is still concern for browsers sniffing pages away from
							their actual content type.
							At &quot;High&quot; threshold this scan rule will not alert on client or
							server error responses.</otherinfo>
					</instance>


					<instance>
						<uri>https://public-firing-range.appspot.com/urldom/location/hash/embed.src</uri>
						<method>GET</method>
						<param>X-Content-Type-Options</param>
						<attack></attack>
						<evidence></evidence>
						<otherinfo>This issue still applies to error type pages (401, 403, 500,
							etc.) as those pages are often still affected by injection issues, in
							which case there is still concern for browsers sniffing pages away from
							their actual content type.
							At &quot;High&quot; threshold this scan rule will not alert on client or
							server error responses.</otherinfo>
					</instance>


					<instance>
						<uri>https://public-firing-range.appspot.com/urldom/location/hash/fetch</uri>
						<method>GET</method>
						<param>X-Content-Type-Options</param>
						<attack></attack>
						<evidence></evidence>
						<otherinfo>This issue still applies to error type pages (401, 403, 500,
							etc.) as those pages are often still affected by injection issues, in
							which case there is still concern for browsers sniffing pages away from
							their actual content type.
							At &quot;High&quot; threshold this scan rule will not alert on client or
							server error responses.</otherinfo>
					</instance>


					<instance>
						<uri>
							https://public-firing-range.appspot.com/urldom/location/hash/form.action</uri>
						<method>GET</method>
						<param>X-Content-Type-Options</param>
						<attack></attack>
						<evidence></evidence>
						<otherinfo>This issue still applies to error type pages (401, 403, 500,
							etc.) as those pages are often still affected by injection issues, in
							which case there is still concern for browsers sniffing pages away from
							their actual content type.
							At &quot;High&quot; threshold this scan rule will not alert on client or
							server error responses.</otherinfo>
					</instance>


					<instance>
						<uri>https://public-firing-range.appspot.com/urldom/location/hash/iframe.src</uri>
						<method>GET</method>
						<param>X-Content-Type-Options</param>
						<attack></attack>
						<evidence></evidence>
						<otherinfo>This issue still applies to error type pages (401, 403, 500,
							etc.) as those pages are often still affected by injection issues, in
							which case there is still concern for browsers sniffing pages away from
							their actual content type.
							At &quot;High&quot; threshold this scan rule will not alert on client or
							server error responses.</otherinfo>
					</instance>


					<instance>
						<uri>
							https://public-firing-range.appspot.com/urldom/location/hash/input.formaction</uri>
						<method>GET</method>
						<param>X-Content-Type-Options</param>
						<attack></attack>
						<evidence></evidence>
						<otherinfo>This issue still applies to error type pages (401, 403, 500,
							etc.) as those pages are often still affected by injection issues, in
							which case there is still concern for browsers sniffing pages away from
							their actual content type.
							At &quot;High&quot; threshold this scan rule will not alert on client or
							server error responses.</otherinfo>
					</instance>


					<instance>
						<uri>https://public-firing-range.appspot.com/urldom/location/hash/link.href</uri>
						<method>GET</method>
						<param>X-Content-Type-Options</param>
						<attack></attack>
						<evidence></evidence>
						<otherinfo>This issue still applies to error type pages (401, 403, 500,
							etc.) as those pages are often still affected by injection issues, in
							which case there is still concern for browsers sniffing pages away from
							their actual content type.
							At &quot;High&quot; threshold this scan rule will not alert on client or
							server error responses.</otherinfo>
					</instance>


					<instance>
						<uri>
							https://public-firing-range.appspot.com/urldom/location/hash/object.data</uri>
						<method>GET</method>
						<param>X-Content-Type-Options</param>
						<attack></attack>
						<evidence></evidence>
						<otherinfo>This issue still applies to error type pages (401, 403, 500,
							etc.) as those pages are often still affected by injection issues, in
							which case there is still concern for browsers sniffing pages away from
							their actual content type.
							At &quot;High&quot; threshold this scan rule will not alert on client or
							server error responses.</otherinfo>
					</instance>


					<instance>
						<uri>
							https://public-firing-range.appspot.com/urldom/location/hash/param.code.value</uri>
						<method>GET</method>
						<param>X-Content-Type-Options</param>
						<attack></attack>
						<evidence></evidence>
						<otherinfo>This issue still applies to error type pages (401, 403, 500,
							etc.) as those pages are often still affected by injection issues, in
							which case there is still concern for browsers sniffing pages away from
							their actual content type.
							At &quot;High&quot; threshold this scan rule will not alert on client or
							server error responses.</otherinfo>
					</instance>


					<instance>
						<uri>
							https://public-firing-range.appspot.com/urldom/location/hash/param.movie.value</uri>
						<method>GET</method>
						<param>X-Content-Type-Options</param>
						<attack></attack>
						<evidence></evidence>
						<otherinfo>This issue still applies to error type pages (401, 403, 500,
							etc.) as those pages are often still affected by injection issues, in
							which case there is still concern for browsers sniffing pages away from
							their actual content type.
							At &quot;High&quot; threshold this scan rule will not alert on client or
							server error responses.</otherinfo>
					</instance>


					<instance>
						<uri>
							https://public-firing-range.appspot.com/urldom/location/hash/param.src.value</uri>
						<method>GET</method>
						<param>X-Content-Type-Options</param>
						<attack></attack>
						<evidence></evidence>
						<otherinfo>This issue still applies to error type pages (401, 403, 500,
							etc.) as those pages are often still affected by injection issues, in
							which case there is still concern for browsers sniffing pages away from
							their actual content type.
							At &quot;High&quot; threshold this scan rule will not alert on client or
							server error responses.</otherinfo>
					</instance>


					<instance>
						<uri>
							https://public-firing-range.appspot.com/urldom/location/hash/param.url.value</uri>
						<method>GET</method>
						<param>X-Content-Type-Options</param>
						<attack></attack>
						<evidence></evidence>
						<otherinfo>This issue still applies to error type pages (401, 403, 500,
							etc.) as those pages are often still affected by injection issues, in
							which case there is still concern for browsers sniffing pages away from
							their actual content type.
							At &quot;High&quot; threshold this scan rule will not alert on client or
							server error responses.</otherinfo>
					</instance>


					<instance>
						<uri>
							https://public-firing-range.appspot.com/urldom/location/hash/script.href</uri>
						<method>GET</method>
						<param>X-Content-Type-Options</param>
						<attack></attack>
						<evidence></evidence>
						<otherinfo>This issue still applies to error type pages (401, 403, 500,
							etc.) as those pages are often still affected by injection issues, in
							which case there is still concern for browsers sniffing pages away from
							their actual content type.
							At &quot;High&quot; threshold this scan rule will not alert on client or
							server error responses.</otherinfo>
					</instance>


					<instance>
						<uri>https://public-firing-range.appspot.com/urldom/location/hash/script.src</uri>
						<method>GET</method>
						<param>X-Content-Type-Options</param>
						<attack></attack>
						<evidence></evidence>
						<otherinfo>This issue still applies to error type pages (401, 403, 500,
							etc.) as those pages are often still affected by injection issues, in
							which case there is still concern for browsers sniffing pages away from
							their actual content type.
							At &quot;High&quot; threshold this scan rule will not alert on client or
							server error responses.</otherinfo>
					</instance>


					<instance>
						<uri>
							https://public-firing-range.appspot.com/urldom/location/hash/script.src.partial_domain</uri>
						<method>GET</method>
						<param>X-Content-Type-Options</param>
						<attack></attack>
						<evidence></evidence>
						<otherinfo>This issue still applies to error type pages (401, 403, 500,
							etc.) as those pages are often still affected by injection issues, in
							which case there is still concern for browsers sniffing pages away from
							their actual content type.
							At &quot;High&quot; threshold this scan rule will not alert on client or
							server error responses.</otherinfo>
					</instance>


					<instance>
						<uri>
							https://public-firing-range.appspot.com/urldom/location/hash/script.src.partial_path</uri>
						<method>GET</method>
						<param>X-Content-Type-Options</param>
						<attack></attack>
						<evidence></evidence>
						<otherinfo>This issue still applies to error type pages (401, 403, 500,
							etc.) as those pages are often still affected by injection issues, in
							which case there is still concern for browsers sniffing pages away from
							their actual content type.
							At &quot;High&quot; threshold this scan rule will not alert on client or
							server error responses.</otherinfo>
					</instance>


					<instance>
						<uri>
							https://public-firing-range.appspot.com/urldom/location/hash/script.src.partial_query</uri>
						<method>GET</method>
						<param>X-Content-Type-Options</param>
						<attack></attack>
						<evidence></evidence>
						<otherinfo>This issue still applies to error type pages (401, 403, 500,
							etc.) as those pages are often still affected by injection issues, in
							which case there is still concern for browsers sniffing pages away from
							their actual content type.
							At &quot;High&quot; threshold this scan rule will not alert on client or
							server error responses.</otherinfo>
					</instance>


					<instance>
						<uri>
							https://public-firing-range.appspot.com/urldom/location/hash/window.open</uri>
						<method>GET</method>
						<param>X-Content-Type-Options</param>
						<attack></attack>
						<evidence></evidence>
						<otherinfo>This issue still applies to error type pages (401, 403, 500,
							etc.) as those pages are often still affected by injection issues, in
							which case there is still concern for browsers sniffing pages away from
							their actual content type.
							At &quot;High&quot; threshold this scan rule will not alert on client or
							server error responses.</otherinfo>
					</instance>


					<instance>
						<uri>https://public-firing-range.appspot.com/urldom/location/hash/xhr.open</uri>
						<method>GET</method>
						<param>X-Content-Type-Options</param>
						<attack></attack>
						<evidence></evidence>
						<otherinfo>This issue still applies to error type pages (401, 403, 500,
							etc.) as those pages are often still affected by injection issues, in
							which case there is still concern for browsers sniffing pages away from
							their actual content type.
							At &quot;High&quot; threshold this scan rule will not alert on client or
							server error responses.</otherinfo>
					</instance>


					<instance>
						<uri>
							https://public-firing-range.appspot.com/urldom/location/search/area.href?//example.org</uri>
						<method>GET</method>
						<param>X-Content-Type-Options</param>
						<attack></attack>
						<evidence></evidence>
						<otherinfo>This issue still applies to error type pages (401, 403, 500,
							etc.) as those pages are often still affected by injection issues, in
							which case there is still concern for browsers sniffing pages away from
							their actual content type.
							At &quot;High&quot; threshold this scan rule will not alert on client or
							server error responses.</otherinfo>
					</instance>


					<instance>
						<uri>
							https://public-firing-range.appspot.com/urldom/location/search/button.formaction?//example.org</uri>
						<method>GET</method>
						<param>X-Content-Type-Options</param>
						<attack></attack>
						<evidence></evidence>
						<otherinfo>This issue still applies to error type pages (401, 403, 500,
							etc.) as those pages are often still affected by injection issues, in
							which case there is still concern for browsers sniffing pages away from
							their actual content type.
							At &quot;High&quot; threshold this scan rule will not alert on client or
							server error responses.</otherinfo>
					</instance>


					<instance>
						<uri>
							https://public-firing-range.appspot.com/urldom/location/search/frame.src?//example.org</uri>
						<method>GET</method>
						<param>X-Content-Type-Options</param>
						<attack></attack>
						<evidence></evidence>
						<otherinfo>This issue still applies to error type pages (401, 403, 500,
							etc.) as those pages are often still affected by injection issues, in
							which case there is still concern for browsers sniffing pages away from
							their actual content type.
							At &quot;High&quot; threshold this scan rule will not alert on client or
							server error responses.</otherinfo>
					</instance>


					<instance>
						<uri>
							https://public-firing-range.appspot.com/urldom/location/search/location.assign?//example.org</uri>
						<method>GET</method>
						<param>X-Content-Type-Options</param>
						<attack></attack>
						<evidence></evidence>
						<otherinfo>This issue still applies to error type pages (401, 403, 500,
							etc.) as those pages are often still affected by injection issues, in
							which case there is still concern for browsers sniffing pages away from
							their actual content type.
							At &quot;High&quot; threshold this scan rule will not alert on client or
							server error responses.</otherinfo>
					</instance>


					<instance>
						<uri>
							https://public-firing-range.appspot.com/urldom/location/search/svg.a?//example.org</uri>
						<method>GET</method>
						<param>X-Content-Type-Options</param>
						<attack></attack>
						<evidence></evidence>
						<otherinfo>This issue still applies to error type pages (401, 403, 500,
							etc.) as those pages are often still affected by injection issues, in
							which case there is still concern for browsers sniffing pages away from
							their actual content type.
							At &quot;High&quot; threshold this scan rule will not alert on client or
							server error responses.</otherinfo>
					</instance>


					<instance>
						<uri>https://public-firing-range.appspot.com/vulnerablelibraries/index.html</uri>
						<method>GET</method>
						<param>X-Content-Type-Options</param>
						<attack></attack>
						<evidence></evidence>
						<otherinfo>This issue still applies to error type pages (401, 403, 500,
							etc.) as those pages are often still affected by injection issues, in
							which case there is still concern for browsers sniffing pages away from
							their actual content type.
							At &quot;High&quot; threshold this scan rule will not alert on client or
							server error responses.</otherinfo>
					</instance>


					<instance>
						<uri>https://public-firing-range.appspot.com/vulnerablelibraries/jquery.html</uri>
						<method>GET</method>
						<param>X-Content-Type-Options</param>
						<attack></attack>
						<evidence></evidence>
						<otherinfo>This issue still applies to error type pages (401, 403, 500,
							etc.) as those pages are often still affected by injection issues, in
							which case there is still concern for browsers sniffing pages away from
							their actual content type.
							At &quot;High&quot; threshold this scan rule will not alert on client or
							server error responses.</otherinfo>
					</instance>


					<instance>
						<uri>
							https://public-firing-range.appspot.com/angular/angular_body_raw_post/1.6.0</uri>
						<method>POST</method>
						<param>X-Content-Type-Options</param>
						<attack></attack>
						<evidence></evidence>
						<otherinfo>This issue still applies to error type pages (401, 403, 500,
							etc.) as those pages are often still affected by injection issues, in
							which case there is still concern for browsers sniffing pages away from
							their actual content type.
							At &quot;High&quot; threshold this scan rule will not alert on client or
							server error responses.</otherinfo>
					</instance>


					<instance>
						<uri>https://public-firing-range.appspot.com/reflected/parameter/form</uri>
						<method>POST</method>
						<param>X-Content-Type-Options</param>
						<attack></attack>
						<evidence></evidence>
						<otherinfo>This issue still applies to error type pages (401, 403, 500,
							etc.) as those pages are often still affected by injection issues, in
							which case there is still concern for browsers sniffing pages away from
							their actual content type.
							At &quot;High&quot; threshold this scan rule will not alert on client or
							server error responses.</otherinfo>
					</instance>

				</instances>
				<count>277</count>
				<solution>&lt;p&gt;Ensure that the application/web server sets the Content-Type
					header appropriately, and that it sets the X-Content-Type-Options header to
					&apos;nosniff&apos; for all web pages.&lt;/p&gt;&lt;p&gt;If possible, ensure
					that the end user uses a standards-compliant and modern web browser that does
					not perform MIME-sniffing at all, or that can be directed by the web
					application/web server to not perform MIME-sniffing.&lt;/p&gt;</solution>
				<otherinfo>&lt;p&gt;This issue still applies to error type pages (401, 403, 500,
					etc.) as those pages are often still affected by injection issues, in which case
					there is still concern for browsers sniffing pages away from their actual
					content type.&lt;/p&gt;&lt;p&gt;At &quot;High&quot; threshold this scan rule
					will not alert on client or server error responses.&lt;/p&gt;</otherinfo>
				<reference>
					&lt;p&gt;http://msdn.microsoft.com/en-us/library/ie/gg622941%28v=vs.85%29.aspx&lt;/p&gt;&lt;p&gt;https://owasp.org/www-community/Security_Headers&lt;/p&gt;</reference>
				<cweid>693</cweid>
				<wascid>15</wascid>
				<sourceid>6</sourceid>
			</alertitem>


			<alertitem>
				<pluginid>10027</pluginid>
				<alertRef>10027</alertRef>
				<alert>Information Disclosure - Suspicious Comments</alert>
				<name>Information Disclosure - Suspicious Comments</name>
				<riskcode>0</riskcode>
				<confidence>1</confidence>
				<riskdesc>Informational (Low)</riskdesc>
				<confidencedesc>Low</confidencedesc>
				<desc>&lt;p&gt;The response appears to contain suspicious comments which may help an
					attacker. Note: Matches made within script blocks or files are against the
					entire content not only comments.&lt;/p&gt;</desc>
				<instances>

					<instance>
						<uri>
							https://public-firing-range.appspot.com/dom/toxicdom/postMessage/complexMessageDocumentWriteEval</uri>
						<method>GET</method>
						<param></param>
						<attack></attack>
						<evidence>debug</evidence>
						<otherinfo>The following pattern was used: \bDEBUG\b and was detected in the
							element starting with: &quot;&lt;script&gt;
							const postMessageHandler = function(msg) {
							let action = msg.data.action;
							if(action === &apos;exec&apos;) {
							eval(msg&quot;, see evidence field for the suspicious comment/snippet.</otherinfo>
					</instance>


					<instance>
						<uri>
							https://public-firing-range.appspot.com/reverseclickjacking/multipage/ParameterInFragment/InCallback/WithoutXFO/</uri>
						<method>GET</method>
						<param></param>
						<attack></attack>
						<evidence>from</evidence>
						<otherinfo>The following pattern was used: \bFROM\b and was detected in the
							element starting with: &quot;&lt;script&gt;
							var resultDiv = document.getElementById(&apos;result&apos;);

							/**
							* Callback function that receives data from th&quot;, see evidence field
							for the suspicious comment/snippet.</otherinfo>
					</instance>


					<instance>
						<uri>
							https://public-firing-range.appspot.com/reverseclickjacking/multipage/ParameterInFragment/InCallback/WithXFO/</uri>
						<method>GET</method>
						<param></param>
						<attack></attack>
						<evidence>from</evidence>
						<otherinfo>The following pattern was used: \bFROM\b and was detected in the
							element starting with: &quot;&lt;script&gt;
							var resultDiv = document.getElementById(&apos;result&apos;);

							/**
							* Callback function that receives data from th&quot;, see evidence field
							for the suspicious comment/snippet.</otherinfo>
					</instance>


					<instance>
						<uri>
							https://public-firing-range.appspot.com/reverseclickjacking/multipage/ParameterInFragment/OtherParameter/WithoutXFO/</uri>
						<method>GET</method>
						<param></param>
						<attack></attack>
						<evidence>from</evidence>
						<otherinfo>The following pattern was used: \bFROM\b and was detected in the
							element starting with: &quot;&lt;script&gt;
							var resultDiv = document.getElementById(&apos;result&apos;);

							/**
							* Callback function that receives data from th&quot;, see evidence field
							for the suspicious comment/snippet.</otherinfo>
					</instance>


					<instance>
						<uri>
							https://public-firing-range.appspot.com/reverseclickjacking/multipage/ParameterInFragment/OtherParameter/WithXFO/</uri>
						<method>GET</method>
						<param></param>
						<attack></attack>
						<evidence>from</evidence>
						<otherinfo>The following pattern was used: \bFROM\b and was detected in the
							element starting with: &quot;&lt;script&gt;
							var resultDiv = document.getElementById(&apos;result&apos;);

							/**
							* Callback function that receives data from th&quot;, see evidence field
							for the suspicious comment/snippet.</otherinfo>
					</instance>


					<instance>
						<uri>
							https://public-firing-range.appspot.com/reverseclickjacking/singlepage/ParameterInFragment/InCallback/</uri>
						<method>GET</method>
						<param></param>
						<attack></attack>
						<evidence>from</evidence>
						<otherinfo>The following pattern was used: \bFROM\b and was detected in the
							element starting with: &quot;&lt;script&gt;
							var resultDiv = document.getElementById(&apos;result&apos;);

							/**
							* Callback function that receives data from th&quot;, see evidence field
							for the suspicious comment/snippet.</otherinfo>
					</instance>


					<instance>
						<uri>
							https://public-firing-range.appspot.com/reverseclickjacking/singlepage/ParameterInFragment/OtherParameter/</uri>
						<method>GET</method>
						<param></param>
						<attack></attack>
						<evidence>from</evidence>
						<otherinfo>The following pattern was used: \bFROM\b and was detected in the
							element starting with: &quot;&lt;script&gt;
							var resultDiv = document.getElementById(&apos;result&apos;);

							/**
							* Callback function that receives data from th&quot;, see evidence field
							for the suspicious comment/snippet.</otherinfo>
					</instance>

				</instances>
				<count>7</count>
				<solution>&lt;p&gt;Remove all comments that return information that may help an
					attacker and fix any underlying problems they refer to.&lt;/p&gt;</solution>
				<otherinfo>&lt;p&gt;The following pattern was used: \bDEBUG\b and was detected in
					the element starting with: &quot;&lt;script&gt;&lt;/p&gt;&lt;p&gt; const
					postMessageHandler = function(msg) {&lt;/p&gt;&lt;p&gt; let action =
					msg.data.action;&lt;/p&gt;&lt;p&gt; if(action === &apos;exec&apos;)
					{&lt;/p&gt;&lt;p&gt; eval(msg&quot;, see evidence field for the suspicious
					comment/snippet.&lt;/p&gt;</otherinfo>
				<reference></reference>
				<cweid>200</cweid>
				<wascid>13</wascid>
				<sourceid>568</sourceid>
			</alertitem>


			<alertitem>
				<pluginid>10109</pluginid>
				<alertRef>10109</alertRef>
				<alert>Modern Web Application</alert>
				<name>Modern Web Application</name>
				<riskcode>0</riskcode>
				<confidence>2</confidence>
				<riskdesc>Informational (Medium)</riskdesc>
				<confidencedesc>Medium</confidencedesc>
				<desc>&lt;p&gt;The application appears to be a modern web application. If you need
					to explore it automatically then the Ajax Spider may well be more effective than
					the standard one.&lt;/p&gt;</desc>
				<instances>

					<instance>
						<uri>https://public-firing-range.appspot.com/address/baseURI/documentwrite</uri>
						<method>GET</method>
						<param></param>
						<attack></attack>
						<evidence>&lt;script&gt;
							var payload = document.baseURI;
							document.write(payload);

							&lt;/script&gt;</evidence>
						<otherinfo>No links have been found while there are scripts, which is an
							indication that this is a modern web application.</otherinfo>
					</instance>


					<instance>
						<uri>
							https://public-firing-range.appspot.com/address/documentURI/documentwrite</uri>
						<method>GET</method>
						<param></param>
						<attack></attack>
						<evidence>&lt;script&gt;
							var payload = document.documentURI;
							document.write(payload);

							&lt;/script&gt;</evidence>
						<otherinfo>No links have been found while there are scripts, which is an
							indication that this is a modern web application.</otherinfo>
					</instance>


					<instance>
						<uri>https://public-firing-range.appspot.com/address/location.hash/assign</uri>
						<method>GET</method>
						<param></param>
						<attack></attack>
						<evidence>&lt;script&gt;
							var payload =
							window.location.hash.substr(1);window.location.assign(payload);
							&lt;/script&gt;</evidence>
						<otherinfo>No links have been found while there are scripts, which is an
							indication that this is a modern web application.</otherinfo>
					</instance>


					<instance>
						<uri>
							https://public-firing-range.appspot.com/address/location.hash/documentwrite</uri>
						<method>GET</method>
						<param></param>
						<attack></attack>
						<evidence>&lt;script&gt;
							var payload = window.location.hash.substr(1);document.write(payload);
							&lt;/script&gt;</evidence>
						<otherinfo>No links have been found while there are scripts, which is an
							indication that this is a modern web application.</otherinfo>
					</instance>


					<instance>
						<uri>
							https://public-firing-range.appspot.com/address/location.hash/documentwriteln</uri>
						<method>GET</method>
						<param></param>
						<attack></attack>
						<evidence>&lt;script&gt;
							var payload = window.location.hash.substr(1);document.writeln(payload);
							&lt;/script&gt;</evidence>
						<otherinfo>No links have been found while there are scripts, which is an
							indication that this is a modern web application.</otherinfo>
					</instance>


					<instance>
						<uri>https://public-firing-range.appspot.com/address/location.hash/eval</uri>
						<method>GET</method>
						<param></param>
						<attack></attack>
						<evidence>&lt;script&gt;
							var payload = window.location.hash.substr(1);eval(payload);
							&lt;/script&gt;</evidence>
						<otherinfo>No links have been found while there are scripts, which is an
							indication that this is a modern web application.</otherinfo>
					</instance>


					<instance>
						<uri>
							https://public-firing-range.appspot.com/address/location.hash/formaction</uri>
						<method>GET</method>
						<param></param>
						<attack></attack>
						<evidence>&lt;script&gt;
							var payload = window.location.hash.substr(1);var form =
							document.createElement(&apos;form&apos;);
							form.setAttribute(&apos;action&apos;, payload);
							form.innerHTML = &apos;&lt;input
							type=\&apos;submit\&apos;&gt;&lt;/input&gt;&apos;;
							document.documentElement.appendChild(form);

							&lt;/script&gt;</evidence>
						<otherinfo>No links have been found while there are scripts, which is an
							indication that this is a modern web application.</otherinfo>
					</instance>


					<instance>
						<uri>https://public-firing-range.appspot.com/address/location.hash/function</uri>
						<method>GET</method>
						<param></param>
						<attack></attack>
						<evidence>&lt;script&gt;
							var payload = window.location.hash.substr(1);var f = new
							Function(payload);
							f();
							&lt;/script&gt;</evidence>
						<otherinfo>No links have been found while there are scripts, which is an
							indication that this is a modern web application.</otherinfo>
					</instance>


					<instance>
						<uri>
							https://public-firing-range.appspot.com/address/location.hash/inlineevent</uri>
						<method>GET</method>
						<param></param>
						<attack></attack>
						<evidence>&lt;script&gt;
							var payload = window.location.hash.substr(1);var div =
							document.createElement(&apos;div&apos;);
							div.innerHTML = &apos;&lt;div onclick=\&apos;&apos; +
							payload.replace(/&apos;/g, &apos;&quot;&apos;) +
							&apos;\&apos;&gt;div&lt;/div&gt;&apos;;
							document.documentElement.appendChild(div);

							&lt;/script&gt;</evidence>
						<otherinfo>No links have been found while there are scripts, which is an
							indication that this is a modern web application.</otherinfo>
					</instance>


					<instance>
						<uri>https://public-firing-range.appspot.com/address/location.hash/innerHtml</uri>
						<method>GET</method>
						<param></param>
						<attack></attack>
						<evidence>&lt;script&gt;
							var payload = window.location.hash.substr(1);var div =
							document.createElement(&apos;div&apos;);
							div.id = &apos;divEl&apos;;
							document.documentElement.appendChild(div);

							var divEl = document.getElementById(&apos;divEl&apos;);
							divEl.innerHTML = payload;

							&lt;/script&gt;</evidence>
						<otherinfo>No links have been found while there are scripts, which is an
							indication that this is a modern web application.</otherinfo>
					</instance>


					<instance>
						<uri>https://public-firing-range.appspot.com/address/location.hash/jshref</uri>
						<method>GET</method>
						<param></param>
						<attack></attack>
						<evidence>&lt;script&gt;
							var payload = window.location.hash.substr(1);var a =
							document.createElement(&apos;a&apos;);
							a.setAttribute(&apos;href&apos;, payload);
							document.documentElement.appendChild(a);

							&lt;/script&gt;</evidence>
						<otherinfo>No links have been found while there are scripts, which is an
							indication that this is a modern web application.</otherinfo>
					</instance>


					<instance>
						<uri>
							https://public-firing-range.appspot.com/address/location.hash/onclickAddEventListener</uri>
						<method>GET</method>
						<param></param>
						<attack></attack>
						<evidence>&lt;script&gt;
							var payload = window.location.hash.substr(1);var div =
							document.createElement(&apos;div&apos;);
							div.addEventListener(&apos;click&apos;, new Function(payload), false);
							document.documentElement.appendChild(div);
							&lt;/script&gt;</evidence>
						<otherinfo>No links have been found while there are scripts, which is an
							indication that this is a modern web application.</otherinfo>
					</instance>


					<instance>
						<uri>
							https://public-firing-range.appspot.com/address/location.hash/onclickSetAttribute</uri>
						<method>GET</method>
						<param></param>
						<attack></attack>
						<evidence>&lt;script&gt;
							var payload = window.location.hash.substr(1);var div =
							document.createElement(&apos;div&apos;);
							div.setAttribute(&apos;onclick&apos;, payload);
							document.documentElement.appendChild(div);
							&lt;/script&gt;</evidence>
						<otherinfo>No links have been found while there are scripts, which is an
							indication that this is a modern web application.</otherinfo>
					</instance>


					<instance>
						<uri>
							https://public-firing-range.appspot.com/address/location.hash/rangeCreateContextualFragment</uri>
						<method>GET</method>
						<param></param>
						<attack></attack>
						<evidence>&lt;script&gt;
							var payload = window.location.hash.substr(1);var div =
							document.createElement(&apos;div&apos;);
							div.id = &apos;divEl&apos;;
							document.documentElement.appendChild(div);

							var range = document.createRange();
							// make the parent of the first div in the document becomes the context
							node
							range.selectNode(document.getElementsByTagName(&quot;div&quot;).item(0));
							var documentFragment = range.createContextualFragment(payload);
							document.body.appendChild(documentFragment);

							&lt;/script&gt;</evidence>
						<otherinfo>No links have been found while there are scripts, which is an
							indication that this is a modern web application.</otherinfo>
					</instance>


					<instance>
						<uri>https://public-firing-range.appspot.com/address/location.hash/replace</uri>
						<method>GET</method>
						<param></param>
						<attack></attack>
						<evidence>&lt;script&gt;
							var payload = window.location.hash.substr(1);location.replace(payload);
							&lt;/script&gt;</evidence>
						<otherinfo>No links have been found while there are scripts, which is an
							indication that this is a modern web application.</otherinfo>
					</instance>


					<instance>
						<uri>
							https://public-firing-range.appspot.com/address/location.hash/setTimeout</uri>
						<method>GET</method>
						<param></param>
						<attack></attack>
						<evidence>&lt;script&gt;
							var payload = window.location.hash.substr(1);setTimeout(&apos;var
							a=a;&apos; + payload, 1);

							&lt;/script&gt;</evidence>
						<otherinfo>No links have been found while there are scripts, which is an
							indication that this is a modern web application.</otherinfo>
					</instance>


					<instance>
						<uri>https://public-firing-range.appspot.com/address/location/assign</uri>
						<method>GET</method>
						<param></param>
						<attack></attack>
						<evidence>&lt;script&gt;
							var payload = window.location;
							window.location.assign(payload);

							&lt;/script&gt;</evidence>
						<otherinfo>No links have been found while there are scripts, which is an
							indication that this is a modern web application.</otherinfo>
					</instance>


					<instance>
						<uri>https://public-firing-range.appspot.com/address/location/documentwrite</uri>
						<method>GET</method>
						<param></param>
						<attack></attack>
						<evidence>&lt;script&gt;
							var payload = window.location;
							document.write(payload);

							&lt;/script&gt;</evidence>
						<otherinfo>No links have been found while there are scripts, which is an
							indication that this is a modern web application.</otherinfo>
					</instance>


					<instance>
						<uri>
							https://public-firing-range.appspot.com/address/location/documentwriteln</uri>
						<method>GET</method>
						<param></param>
						<attack></attack>
						<evidence>&lt;script&gt;
							var payload = window.location;
							document.writeln(payload);

							&lt;/script&gt;</evidence>
						<otherinfo>No links have been found while there are scripts, which is an
							indication that this is a modern web application.</otherinfo>
					</instance>


					<instance>
						<uri>https://public-firing-range.appspot.com/address/location/eval</uri>
						<method>GET</method>
						<param></param>
						<attack></attack>
						<evidence>&lt;script&gt;
							var payload = window.location;
							eval(payload);

							&lt;/script&gt;</evidence>
						<otherinfo>No links have been found while there are scripts, which is an
							indication that this is a modern web application.</otherinfo>
					</instance>


					<instance>
						<uri>https://public-firing-range.appspot.com/address/location/innerHtml</uri>
						<method>GET</method>
						<param></param>
						<attack></attack>
						<evidence>&lt;script&gt;
							var payload = window.location;
							var div = document.createElement(&apos;div&apos;);
							div.id = &apos;divEl&apos;;
							document.documentElement.appendChild(div);

							var divEl = document.getElementById(&apos;divEl&apos;);
							divEl.innerHTML = payload;

							&lt;/script&gt;</evidence>
						<otherinfo>No links have been found while there are scripts, which is an
							indication that this is a modern web application.</otherinfo>
					</instance>


					<instance>
						<uri>
							https://public-firing-range.appspot.com/address/location/rangeCreateContextualFragment</uri>
						<method>GET</method>
						<param></param>
						<attack></attack>
						<evidence>&lt;script&gt;
							var payload = window.location;
							var div = document.createElement(&apos;div&apos;);
							div.id = &apos;divEl&apos;;
							document.documentElement.appendChild(div);

							var range = document.createRange();
							// make the parent of the first div in the document becomes the context
							node
							range.selectNode(document.getElementsByTagName(&quot;div&quot;).item(0));
							var documentFragment = range.createContextualFragment(payload);
							document.body.appendChild(documentFragment);

							&lt;/script&gt;</evidence>
						<otherinfo>No links have been found while there are scripts, which is an
							indication that this is a modern web application.</otherinfo>
					</instance>


					<instance>
						<uri>https://public-firing-range.appspot.com/address/location/replace</uri>
						<method>GET</method>
						<param></param>
						<attack></attack>
						<evidence>&lt;script&gt;
							var payload = window.location;
							location.replace(payload);

							&lt;/script&gt;</evidence>
						<otherinfo>No links have been found while there are scripts, which is an
							indication that this is a modern web application.</otherinfo>
					</instance>


					<instance>
						<uri>https://public-firing-range.appspot.com/address/location/setTimeout</uri>
						<method>GET</method>
						<param></param>
						<attack></attack>
						<evidence>&lt;script&gt;
							var payload = window.location;
							setTimeout(&apos;var a=a;&apos; + payload, 1);

							&lt;/script&gt;</evidence>
						<otherinfo>No links have been found while there are scripts, which is an
							indication that this is a modern web application.</otherinfo>
					</instance>


					<instance>
						<uri>
							https://public-firing-range.appspot.com/address/locationhref/documentwrite</uri>
						<method>GET</method>
						<param></param>
						<attack></attack>
						<evidence>&lt;script&gt;
							var payload = window.location.href;
							document.write(payload);

							&lt;/script&gt;</evidence>
						<otherinfo>No links have been found while there are scripts, which is an
							indication that this is a modern web application.</otherinfo>
					</instance>


					<instance>
						<uri>
							https://public-firing-range.appspot.com/address/locationpathname/documentwrite</uri>
						<method>GET</method>
						<param></param>
						<attack></attack>
						<evidence>&lt;script&gt;
							var payload = window.location.pathname;
							document.write(payload);

							&lt;/script&gt;</evidence>
						<otherinfo>No links have been found while there are scripts, which is an
							indication that this is a modern web application.</otherinfo>
					</instance>


					<instance>
						<uri>
							https://public-firing-range.appspot.com/address/locationsearch/documentwrite</uri>
						<method>GET</method>
						<param></param>
						<attack></attack>
						<evidence>&lt;script&gt;
							var payload = window.location.search.substr(1);
							document.write(payload);

							&lt;/script&gt;</evidence>
						<otherinfo>No links have been found while there are scripts, which is an
							indication that this is a modern web application.</otherinfo>
					</instance>


					<instance>
						<uri>https://public-firing-range.appspot.com/address/URL/documentwrite</uri>
						<method>GET</method>
						<param></param>
						<attack></attack>
						<evidence>&lt;script&gt;
							var payload = document.URL;
							document.write(payload);

							&lt;/script&gt;</evidence>
						<otherinfo>No links have been found while there are scripts, which is an
							indication that this is a modern web application.</otherinfo>
					</instance>


					<instance>
						<uri>
							https://public-firing-range.appspot.com/address/URLUnencoded/documentwrite</uri>
						<method>GET</method>
						<param></param>
						<attack></attack>
						<evidence>&lt;script&gt;
							var payload = document.URLUnencoded;
							document.write(payload);

							&lt;/script&gt;</evidence>
						<otherinfo>No links have been found while there are scripts, which is an
							indication that this is a modern web application.</otherinfo>
					</instance>


					<instance>
						<uri>
							https://public-firing-range.appspot.com/angular/angular_body/1.1.5?q=test</uri>
						<method>GET</method>
						<param></param>
						<attack></attack>
						<evidence>
							&lt;script
							src=&quot;//ajax.googleapis.com/ajax/libs/angularjs/1.1.5/angular.js&quot;&gt;&lt;/script&gt;</evidence>
						<otherinfo>No links have been found while there are scripts, which is an
							indication that this is a modern web application.</otherinfo>
					</instance>


					<instance>
						<uri>
							https://public-firing-range.appspot.com/angular/angular_body/1.2.0?q=test</uri>
						<method>GET</method>
						<param></param>
						<attack></attack>
						<evidence>
							&lt;script
							src=&quot;//ajax.googleapis.com/ajax/libs/angularjs/1.2.0/angular.js&quot;&gt;&lt;/script&gt;</evidence>
						<otherinfo>No links have been found while there are scripts, which is an
							indication that this is a modern web application.</otherinfo>
					</instance>


					<instance>
						<uri>
							https://public-firing-range.appspot.com/angular/angular_body/1.2.18?q=test</uri>
						<method>GET</method>
						<param></param>
						<attack></attack>
						<evidence>
							&lt;script
							src=&quot;//ajax.googleapis.com/ajax/libs/angularjs/1.2.18/angular.js&quot;&gt;&lt;/script&gt;</evidence>
						<otherinfo>No links have been found while there are scripts, which is an
							indication that this is a modern web application.</otherinfo>
					</instance>


					<instance>
						<uri>
							https://public-firing-range.appspot.com/angular/angular_body/1.2.19?q=test</uri>
						<method>GET</method>
						<param></param>
						<attack></attack>
						<evidence>
							&lt;script
							src=&quot;//ajax.googleapis.com/ajax/libs/angularjs/1.2.19/angular.js&quot;&gt;&lt;/script&gt;</evidence>
						<otherinfo>No links have been found while there are scripts, which is an
							indication that this is a modern web application.</otherinfo>
					</instance>


					<instance>
						<uri>
							https://public-firing-range.appspot.com/angular/angular_body/1.2.24?q=test</uri>
						<method>GET</method>
						<param></param>
						<attack></attack>
						<evidence>
							&lt;script
							src=&quot;//ajax.googleapis.com/ajax/libs/angularjs/1.2.24/angular.js&quot;&gt;&lt;/script&gt;</evidence>
						<otherinfo>No links have been found while there are scripts, which is an
							indication that this is a modern web application.</otherinfo>
					</instance>


					<instance>
						<uri>
							https://public-firing-range.appspot.com/angular/angular_body/1.4.0?q=test</uri>
						<method>GET</method>
						<param></param>
						<attack></attack>
						<evidence>
							&lt;script
							src=&quot;//ajax.googleapis.com/ajax/libs/angularjs/1.4.0/angular.js&quot;&gt;&lt;/script&gt;</evidence>
						<otherinfo>No links have been found while there are scripts, which is an
							indication that this is a modern web application.</otherinfo>
					</instance>


					<instance>
						<uri>
							https://public-firing-range.appspot.com/angular/angular_body/1.6.0?q=test</uri>
						<method>GET</method>
						<param></param>
						<attack></attack>
						<evidence>
							&lt;script
							src=&quot;//ajax.googleapis.com/ajax/libs/angularjs/1.6.0/angular.js&quot;&gt;&lt;/script&gt;</evidence>
						<otherinfo>No links have been found while there are scripts, which is an
							indication that this is a modern web application.</otherinfo>
					</instance>


					<instance>
						<uri>
							https://public-firing-range.appspot.com/angular/angular_body_alt_symbols/1.4.0?q=test</uri>
						<method>GET</method>
						<param></param>
						<attack></attack>
						<evidence>
							&lt;script
							src=&quot;//ajax.googleapis.com/ajax/libs/angularjs/1.4.0/angular.js&quot;&gt;&lt;/script&gt;</evidence>
						<otherinfo>No links have been found while there are scripts, which is an
							indication that this is a modern web application.</otherinfo>
					</instance>


					<instance>
						<uri>
							https://public-firing-range.appspot.com/angular/angular_body_alt_symbols_raw/1.6.0?q=test</uri>
						<method>GET</method>
						<param></param>
						<attack></attack>
						<evidence>
							&lt;script
							src=&quot;//ajax.googleapis.com/ajax/libs/angularjs/1.6.0/angular.js&quot;&gt;&lt;/script&gt;</evidence>
						<otherinfo>No links have been found while there are scripts, which is an
							indication that this is a modern web application.</otherinfo>
					</instance>


					<instance>
						<uri>
							https://public-firing-range.appspot.com/angular/angular_body_attribute_ng/1.4.0?q=test</uri>
						<method>GET</method>
						<param></param>
						<attack></attack>
						<evidence>
							&lt;script
							src=&quot;//ajax.googleapis.com/ajax/libs/angularjs/1.4.0/angular.js&quot;&gt;&lt;/script&gt;</evidence>
						<otherinfo>No links have been found while there are scripts, which is an
							indication that this is a modern web application.</otherinfo>
					</instance>


					<instance>
						<uri>
							https://public-firing-range.appspot.com/angular/angular_body_attribute_non_ng/1.4.0?q=test</uri>
						<method>GET</method>
						<param></param>
						<attack></attack>
						<evidence>
							&lt;script
							src=&quot;//ajax.googleapis.com/ajax/libs/angularjs/1.4.0/angular.js&quot;&gt;&lt;/script&gt;</evidence>
						<otherinfo>No links have been found while there are scripts, which is an
							indication that this is a modern web application.</otherinfo>
					</instance>


					<instance>
						<uri>
							https://public-firing-range.appspot.com/angular/angular_body_attribute_non_ng_raw/1.4.0?q=test</uri>
						<method>GET</method>
						<param></param>
						<attack></attack>
						<evidence>
							&lt;script
							src=&quot;//ajax.googleapis.com/ajax/libs/angularjs/1.4.0/angular.js&quot;&gt;&lt;/script&gt;</evidence>
						<otherinfo>No links have been found while there are scripts, which is an
							indication that this is a modern web application.</otherinfo>
					</instance>


					<instance>
						<uri>
							https://public-firing-range.appspot.com/angular/angular_body_raw/1.4.0?q=test</uri>
						<method>GET</method>
						<param></param>
						<attack></attack>
						<evidence>
							&lt;script
							src=&quot;//ajax.googleapis.com/ajax/libs/angularjs/1.4.0/angular.js&quot;&gt;&lt;/script&gt;</evidence>
						<otherinfo>No links have been found while there are scripts, which is an
							indication that this is a modern web application.</otherinfo>
					</instance>


					<instance>
						<uri>
							https://public-firing-range.appspot.com/angular/angular_body_raw_escaped/1.4.0?q=test</uri>
						<method>GET</method>
						<param></param>
						<attack></attack>
						<evidence>
							&lt;script
							src=&quot;//ajax.googleapis.com/ajax/libs/angularjs/1.4.0/angular.js&quot;&gt;&lt;/script&gt;</evidence>
						<otherinfo>No links have been found while there are scripts, which is an
							indication that this is a modern web application.</otherinfo>
					</instance>


					<instance>
						<uri>
							https://public-firing-range.appspot.com/angular/angular_body_raw_escaped_alt_symbols/1.4.0?q=test</uri>
						<method>GET</method>
						<param></param>
						<attack></attack>
						<evidence>
							&lt;script
							src=&quot;//ajax.googleapis.com/ajax/libs/angularjs/1.4.0/angular.js&quot;&gt;&lt;/script&gt;</evidence>
						<otherinfo>No links have been found while there are scripts, which is an
							indication that this is a modern web application.</otherinfo>
					</instance>


					<instance>
						<uri>
							https://public-firing-range.appspot.com/angular/angular_body_raw_post/1.6.0</uri>
						<method>GET</method>
						<param></param>
						<attack></attack>
						<evidence>
							&lt;script
							src=&quot;//ajax.googleapis.com/ajax/libs/angularjs/1.6.0/angular.js&quot;&gt;&lt;/script&gt;</evidence>
						<otherinfo>No links have been found while there are scripts, which is an
							indication that this is a modern web application.</otherinfo>
					</instance>


					<instance>
						<uri>
							https://public-firing-range.appspot.com/angular/angular_cookie_parse/1.6.0</uri>
						<method>GET</method>
						<param></param>
						<attack></attack>
						<evidence>
							&lt;script
							src=&quot;//ajax.googleapis.com/ajax/libs/angularjs/1.6.0/angular.js&quot;&gt;&lt;/script&gt;</evidence>
						<otherinfo>No links have been found while there are scripts, which is an
							indication that this is a modern web application.</otherinfo>
					</instance>


					<instance>
						<uri>
							https://public-firing-range.appspot.com/angular/angular_form_parse/1.6.0</uri>
						<method>GET</method>
						<param></param>
						<attack></attack>
						<evidence>
							&lt;script
							src=&quot;//ajax.googleapis.com/ajax/libs/angularjs/1.6.0/angular.js&quot;&gt;&lt;/script&gt;</evidence>
						<otherinfo>No links have been found while there are scripts, which is an
							indication that this is a modern web application.</otherinfo>
					</instance>


					<instance>
						<uri>
							https://public-firing-range.appspot.com/angular/angular_post_message_parse/1.6.0</uri>
						<method>GET</method>
						<param></param>
						<attack></attack>
						<evidence>
							&lt;script
							src=&quot;//ajax.googleapis.com/ajax/libs/angularjs/1.6.0/angular.js&quot;&gt;&lt;/script&gt;</evidence>
						<otherinfo>No links have been found while there are scripts, which is an
							indication that this is a modern web application.</otherinfo>
					</instance>


					<instance>
						<uri>
							https://public-firing-range.appspot.com/angular/angular_storage_parse/1.6.0</uri>
						<method>GET</method>
						<param></param>
						<attack></attack>
						<evidence>
							&lt;script
							src=&quot;//ajax.googleapis.com/ajax/libs/angularjs/1.6.0/angular.js&quot;&gt;&lt;/script&gt;</evidence>
						<otherinfo>No links have been found while there are scripts, which is an
							indication that this is a modern web application.</otherinfo>
					</instance>


					<instance>
						<uri>
							https://public-firing-range.appspot.com/cors/alloworigin/allowInsecureScheme</uri>
						<method>GET</method>
						<param></param>
						<attack></attack>
						<evidence>&lt;script&gt;
							var xhr = new XMLHttpRequest();
							xhr.open(&apos;POST&apos;,
							&apos;https://public-firing-range.appspot.com/cors/alloworigin/allowInsecureScheme&apos;,
							true);
							xhr.send();
							&lt;/script&gt;</evidence>
						<otherinfo>No links have been found while there are scripts, which is an
							indication that this is a modern web application.</otherinfo>
					</instance>


					<instance>
						<uri>
							https://public-firing-range.appspot.com/cors/alloworigin/allowNullOrigin</uri>
						<method>GET</method>
						<param></param>
						<attack></attack>
						<evidence>&lt;script&gt;
							var xhr = new XMLHttpRequest();
							xhr.open(&apos;POST&apos;,
							&apos;https://public-firing-range.appspot.com/cors/alloworigin/allowNullOrigin&apos;,
							true);
							xhr.send();
							&lt;/script&gt;</evidence>
						<otherinfo>No links have been found while there are scripts, which is an
							indication that this is a modern web application.</otherinfo>
					</instance>


					<instance>
						<uri>
							https://public-firing-range.appspot.com/cors/alloworigin/dynamicAllowOrigin</uri>
						<method>GET</method>
						<param></param>
						<attack></attack>
						<evidence>&lt;script&gt;
							var xhr = new XMLHttpRequest();
							xhr.open(&apos;POST&apos;,
							&apos;https://public-firing-range.appspot.com/cors/alloworigin/dynamicAllowOrigin&apos;,
							true);
							xhr.send();
							&lt;/script&gt;</evidence>
						<otherinfo>No links have been found while there are scripts, which is an
							indication that this is a modern web application.</otherinfo>
					</instance>


					<instance>
						<uri>https://public-firing-range.appspot.com/dom/dompropagation/</uri>
						<method>GET</method>
						<param></param>
						<attack></attack>
						<evidence>&lt;script&gt;
							// Writing to DOM attribute document.title and
							// reading back propagates the XSS payload.

							var payload = location.hash.substr(1);
							window.status = payload;
							var retrieved_payload = window.status;
							eval(retrieved_payload);

							&lt;/script&gt;</evidence>
						<otherinfo>No links have been found while there are scripts, which is an
							indication that this is a modern web application.</otherinfo>
					</instance>


					<instance>
						<uri>
							https://public-firing-range.appspot.com/dom/eventtriggering/document/formSubmission/documentWrite</uri>
						<method>GET</method>
						<param></param>
						<attack></attack>
						<evidence>&lt;script&gt;
							function deferredPayload() {
							// Sync trigger.
							document.write(payload);

							// Async trigger.
							function trigger(payload) {
							document.write(payload);
							}
							}var form = document.createElement(&apos;form&apos;);

							var input = document.createElement(&apos;input&apos;);
							input.setAttribute(&apos;id&apos;, &apos;userInput&apos;);

							var submit = document.createElement(&apos;input&apos;);
							submit.setAttribute(&apos;type&apos;, &apos;submit&apos;);
							form.setAttribute(&apos;action&apos;, &apos;#&apos;);
							form.appendChild(input);
							form.appendChild(submit);

							var payload = &apos;&apos;;
							form.onsubmit = function() {
							payload = document.getElementById(&apos;userInput&apos;).value;
							deferredPayload();
							return false;
							};

							document.body.appendChild(form);// Sync trigger.
							document.write(payload);

							// Async trigger.
							function trigger(payload) {
							document.write(payload);
							}
							&lt;/script&gt;</evidence>
						<otherinfo>No links have been found while there are scripts, which is an
							indication that this is a modern web application.</otherinfo>
					</instance>


					<instance>
						<uri>
							https://public-firing-range.appspot.com/dom/eventtriggering/document/formSubmission/eval</uri>
						<method>GET</method>
						<param></param>
						<attack></attack>
						<evidence>&lt;script&gt;
							function deferredPayload() {
							// Sync trigger.
							eval(payload);

							// Async trigger.
							function trigger(payload) {
							eval(payload);
							};
							}var form = document.createElement(&apos;form&apos;);

							var input = document.createElement(&apos;input&apos;);
							input.setAttribute(&apos;id&apos;, &apos;userInput&apos;);

							var submit = document.createElement(&apos;input&apos;);
							submit.setAttribute(&apos;type&apos;, &apos;submit&apos;);
							form.setAttribute(&apos;action&apos;, &apos;#&apos;);
							form.appendChild(input);
							form.appendChild(submit);

							var payload = &apos;&apos;;
							form.onsubmit = function() {
							payload = document.getElementById(&apos;userInput&apos;).value;
							deferredPayload();
							return false;
							};

							document.body.appendChild(form);// Sync trigger.
							eval(payload);

							// Async trigger.
							function trigger(payload) {
							eval(payload);
							};
							&lt;/script&gt;</evidence>
						<otherinfo>No links have been found while there are scripts, which is an
							indication that this is a modern web application.</otherinfo>
					</instance>


					<instance>
						<uri>
							https://public-firing-range.appspot.com/dom/eventtriggering/document/formSubmission/innerHtml</uri>
						<method>GET</method>
						<param></param>
						<attack></attack>
						<evidence>&lt;script&gt;
							function deferredPayload() {
							var div = document.createElement(&apos;div&apos;);
							document.documentElement.appendChild(div);

							// Sync trigger.
							div.innerHTML = payload;

							// Async trigger.
							function trigger(payload) {
							div.innerHTML = payload;
							};

							}var form = document.createElement(&apos;form&apos;);

							var input = document.createElement(&apos;input&apos;);
							input.setAttribute(&apos;id&apos;, &apos;userInput&apos;);

							var submit = document.createElement(&apos;input&apos;);
							submit.setAttribute(&apos;type&apos;, &apos;submit&apos;);
							form.setAttribute(&apos;action&apos;, &apos;#&apos;);
							form.appendChild(input);
							form.appendChild(submit);

							var payload = &apos;&apos;;
							form.onsubmit = function() {
							payload = document.getElementById(&apos;userInput&apos;).value;
							deferredPayload();
							return false;
							};

							document.body.appendChild(form);var div =
							document.createElement(&apos;div&apos;);
							document.documentElement.appendChild(div);

							// Sync trigger.
							div.innerHTML = payload;

							// Async trigger.
							function trigger(payload) {
							div.innerHTML = payload;
							};

							&lt;/script&gt;</evidence>
						<otherinfo>No links have been found while there are scripts, which is an
							indication that this is a modern web application.</otherinfo>
					</instance>


					<instance>
						<uri>
							https://public-firing-range.appspot.com/dom/eventtriggering/document/inputTyping/documentWrite</uri>
						<method>GET</method>
						<param></param>
						<attack></attack>
						<evidence>&lt;script&gt;
							function deferredPayload() {
							// Sync trigger.
							document.write(payload);

							// Async trigger.
							function trigger(payload) {
							document.write(payload);
							}
							}// Trigger XSS by waiting for typing events / watch for change on an
							input field.

							var input = document.createElement(&apos;input&apos;);
							input.setAttribute(&apos;type&apos;, &apos;text&apos;);

							var payload = &apos;&apos;;
							function xssIt(e) {
							payload = e.target.value;
							deferredPayload();
							}

							input.addEventListener(&apos;keyup&apos;, xssIt);
							input.addEventListener(&apos;change&apos;, xssIt);
							document.body.appendChild(input);// Sync trigger.
							document.write(payload);

							// Async trigger.
							function trigger(payload) {
							document.write(payload);
							}
							&lt;/script&gt;</evidence>
						<otherinfo>No links have been found while there are scripts, which is an
							indication that this is a modern web application.</otherinfo>
					</instance>


					<instance>
						<uri>
							https://public-firing-range.appspot.com/dom/eventtriggering/document/inputTyping/eval</uri>
						<method>GET</method>
						<param></param>
						<attack></attack>
						<evidence>&lt;script&gt;
							function deferredPayload() {
							// Sync trigger.
							eval(payload);

							// Async trigger.
							function trigger(payload) {
							eval(payload);
							};
							}// Trigger XSS by waiting for typing events / watch for change on an
							input field.

							var input = document.createElement(&apos;input&apos;);
							input.setAttribute(&apos;type&apos;, &apos;text&apos;);

							var payload = &apos;&apos;;
							function xssIt(e) {
							payload = e.target.value;
							deferredPayload();
							}

							input.addEventListener(&apos;keyup&apos;, xssIt);
							input.addEventListener(&apos;change&apos;, xssIt);
							document.body.appendChild(input);// Sync trigger.
							eval(payload);

							// Async trigger.
							function trigger(payload) {
							eval(payload);
							};
							&lt;/script&gt;</evidence>
						<otherinfo>No links have been found while there are scripts, which is an
							indication that this is a modern web application.</otherinfo>
					</instance>


					<instance>
						<uri>
							https://public-firing-range.appspot.com/dom/eventtriggering/document/inputTyping/innerHtml</uri>
						<method>GET</method>
						<param></param>
						<attack></attack>
						<evidence>&lt;script&gt;
							function deferredPayload() {
							var div = document.createElement(&apos;div&apos;);
							document.documentElement.appendChild(div);

							// Sync trigger.
							div.innerHTML = payload;

							// Async trigger.
							function trigger(payload) {
							div.innerHTML = payload;
							};

							}// Trigger XSS by waiting for typing events / watch for change on an
							input field.

							var input = document.createElement(&apos;input&apos;);
							input.setAttribute(&apos;type&apos;, &apos;text&apos;);

							var payload = &apos;&apos;;
							function xssIt(e) {
							payload = e.target.value;
							deferredPayload();
							}

							input.addEventListener(&apos;keyup&apos;, xssIt);
							input.addEventListener(&apos;change&apos;, xssIt);
							document.body.appendChild(input);var div =
							document.createElement(&apos;div&apos;);
							document.documentElement.appendChild(div);

							// Sync trigger.
							div.innerHTML = payload;

							// Async trigger.
							function trigger(payload) {
							div.innerHTML = payload;
							};

							&lt;/script&gt;</evidence>
						<otherinfo>No links have been found while there are scripts, which is an
							indication that this is a modern web application.</otherinfo>
					</instance>


					<instance>
						<uri>
							https://public-firing-range.appspot.com/dom/toxicdom/document/cookie/eval</uri>
						<method>GET</method>
						<param></param>
						<attack></attack>
						<evidence>&lt;script&gt;
							/*
							* Return the value of the first cookie with the given name.
							*/
							var lookupCookie = function(name) {
							var parts = document.cookie.split(/\s*;\s*/);
							var nameEq = name + &apos;=&apos;;
							for (var i = 0; i &lt; parts.length; i++) {
							if (parts[i].indexOf(nameEq) == 0) {
							return parts[i].substr(nameEq.length);
							}
							}
							};
							var payload =
							lookupCookie(&apos;ThisCookieIsTotallyRandomAndCantPossiblyBeSet&apos;);
							// Sync trigger.
							eval(payload);

							// Async trigger.
							function trigger(payload) {
							eval(payload);
							};
							&lt;/script&gt;</evidence>
						<otherinfo>No links have been found while there are scripts, which is an
							indication that this is a modern web application.</otherinfo>
					</instance>


					<instance>
						<uri>
							https://public-firing-range.appspot.com/dom/toxicdom/document/cookie_set/documentWrite</uri>
						<method>GET</method>
						<param></param>
						<attack></attack>
						<evidence>&lt;script&gt;
							/*
							* Return the value of the first cookie with the given name.
							*/
							function lookupCookie(name) {
							var parts = document.cookie.split(/\s*;\s*/);
							var nameEq = name + &apos;=&apos;;
							for (var i = 0; i &lt; parts.length; i++) {
							if (parts[i].indexOf(nameEq) == 0) {
							return parts[i].substr(nameEq.length);
							}
							}
							}

							// Pre-seed the cookie, if it has not been set yet.
							if (!lookupCookie(&apos;badValue&apos;)) {
							document.cookie = &apos;badValue=&quot;a&quot;&apos;;
							}

							var payload = lookupCookie(&apos;badValue&apos;);

							setTimeout(function() {
							trigger(lookupCookie(&apos;badValue&apos;));
							}, 10);
							// Sync trigger.
							document.write(payload);

							// Async trigger.
							function trigger(payload) {
							document.write(payload);
							}
							&lt;/script&gt;</evidence>
						<otherinfo>No links have been found while there are scripts, which is an
							indication that this is a modern web application.</otherinfo>
					</instance>


					<instance>
						<uri>
							https://public-firing-range.appspot.com/dom/toxicdom/document/cookie_set/eval</uri>
						<method>GET</method>
						<param></param>
						<attack></attack>
						<evidence>&lt;script&gt;
							/*
							* Return the value of the first cookie with the given name.
							*/
							function lookupCookie(name) {
							var parts = document.cookie.split(/\s*;\s*/);
							var nameEq = name + &apos;=&apos;;
							for (var i = 0; i &lt; parts.length; i++) {
							if (parts[i].indexOf(nameEq) == 0) {
							return parts[i].substr(nameEq.length);
							}
							}
							}

							// Pre-seed the cookie, if it has not been set yet.
							if (!lookupCookie(&apos;badValue&apos;)) {
							document.cookie = &apos;badValue=&quot;a&quot;&apos;;
							}

							var payload = lookupCookie(&apos;badValue&apos;);

							setTimeout(function() {
							trigger(lookupCookie(&apos;badValue&apos;));
							}, 10);
							// Sync trigger.
							eval(payload);

							// Async trigger.
							function trigger(payload) {
							eval(payload);
							};
							&lt;/script&gt;</evidence>
						<otherinfo>No links have been found while there are scripts, which is an
							indication that this is a modern web application.</otherinfo>
					</instance>


					<instance>
						<uri>
							https://public-firing-range.appspot.com/dom/toxicdom/document/cookie_set/innerHtml</uri>
						<method>GET</method>
						<param></param>
						<attack></attack>
						<evidence>&lt;script&gt;
							/*
							* Return the value of the first cookie with the given name.
							*/
							function lookupCookie(name) {
							var parts = document.cookie.split(/\s*;\s*/);
							var nameEq = name + &apos;=&apos;;
							for (var i = 0; i &lt; parts.length; i++) {
							if (parts[i].indexOf(nameEq) == 0) {
							return parts[i].substr(nameEq.length);
							}
							}
							}

							// Pre-seed the cookie, if it has not been set yet.
							if (!lookupCookie(&apos;badValue&apos;)) {
							document.cookie = &apos;badValue=&quot;a&quot;&apos;;
							}

							var payload = lookupCookie(&apos;badValue&apos;);

							setTimeout(function() {
							trigger(lookupCookie(&apos;badValue&apos;));
							}, 10);
							var div = document.createElement(&apos;div&apos;);
							document.documentElement.appendChild(div);

							// Sync trigger.
							div.innerHTML = payload;

							// Async trigger.
							function trigger(payload) {
							div.innerHTML = payload;
							};

							&lt;/script&gt;</evidence>
						<otherinfo>No links have been found while there are scripts, which is an
							indication that this is a modern web application.</otherinfo>
					</instance>


					<instance>
						<uri>
							https://public-firing-range.appspot.com/dom/toxicdom/document/referrer/documentWrite</uri>
						<method>GET</method>
						<param></param>
						<attack></attack>
						<evidence>&lt;script&gt;
							if (document.referrer == &quot;&quot;) {
							// If the referrer is not set, we set the referrer by reloading the
							page.
							location.href = location.href;
							} else {
							var payload = document.referrer;

							setTimeout(function() {
							trigger(document.referrer);
							}, 10);
							}
							// Sync trigger.
							document.write(payload);

							// Async trigger.
							function trigger(payload) {
							document.write(payload);
							}
							&lt;/script&gt;</evidence>
						<otherinfo>No links have been found while there are scripts, which is an
							indication that this is a modern web application.</otherinfo>
					</instance>


					<instance>
						<uri>
							https://public-firing-range.appspot.com/dom/toxicdom/document/referrer/eval</uri>
						<method>GET</method>
						<param></param>
						<attack></attack>
						<evidence>&lt;script&gt;
							if (document.referrer == &quot;&quot;) {
							// If the referrer is not set, we set the referrer by reloading the
							page.
							location.href = location.href;
							} else {
							var payload = document.referrer;

							setTimeout(function() {
							trigger(document.referrer);
							}, 10);
							}
							// Sync trigger.
							eval(payload);

							// Async trigger.
							function trigger(payload) {
							eval(payload);
							};
							&lt;/script&gt;</evidence>
						<otherinfo>No links have been found while there are scripts, which is an
							indication that this is a modern web application.</otherinfo>
					</instance>


					<instance>
						<uri>
							https://public-firing-range.appspot.com/dom/toxicdom/document/referrer/innerHtml</uri>
						<method>GET</method>
						<param></param>
						<attack></attack>
						<evidence>&lt;script&gt;
							if (document.referrer == &quot;&quot;) {
							// If the referrer is not set, we set the referrer by reloading the
							page.
							location.href = location.href;
							} else {
							var payload = document.referrer;

							setTimeout(function() {
							trigger(document.referrer);
							}, 10);
							}
							var div = document.createElement(&apos;div&apos;);
							document.documentElement.appendChild(div);

							// Sync trigger.
							div.innerHTML = payload;

							// Async trigger.
							function trigger(payload) {
							div.innerHTML = payload;
							};

							&lt;/script&gt;</evidence>
						<otherinfo>No links have been found while there are scripts, which is an
							indication that this is a modern web application.</otherinfo>
					</instance>


					<instance>
						<uri>
							https://public-firing-range.appspot.com/dom/toxicdom/external/localStorage/array/eval</uri>
						<method>GET</method>
						<param></param>
						<attack></attack>
						<evidence>
							&lt;script
							src=&quot;/dom/toxicdomscripts/localStorage/array/eval&quot;&gt;&lt;/script&gt;</evidence>
						<otherinfo>No links have been found while there are scripts, which is an
							indication that this is a modern web application.</otherinfo>
					</instance>


					<instance>
						<uri>
							https://public-firing-range.appspot.com/dom/toxicdom/external/localStorage/function/documentWrite</uri>
						<method>GET</method>
						<param></param>
						<attack></attack>
						<evidence>
							&lt;script
							src=&quot;/dom/toxicdomscripts/localStorage/function/documentWrite&quot;&gt;&lt;/script&gt;</evidence>
						<otherinfo>No links have been found while there are scripts, which is an
							indication that this is a modern web application.</otherinfo>
					</instance>


					<instance>
						<uri>
							https://public-firing-range.appspot.com/dom/toxicdom/external/localStorage/function/eval</uri>
						<method>GET</method>
						<param></param>
						<attack></attack>
						<evidence>
							&lt;script
							src=&quot;/dom/toxicdomscripts/localStorage/function/eval&quot;&gt;&lt;/script&gt;</evidence>
						<otherinfo>No links have been found while there are scripts, which is an
							indication that this is a modern web application.</otherinfo>
					</instance>


					<instance>
						<uri>
							https://public-firing-range.appspot.com/dom/toxicdom/external/localStorage/function/innerHtml</uri>
						<method>GET</method>
						<param></param>
						<attack></attack>
						<evidence>
							&lt;script
							src=&quot;/dom/toxicdomscripts/localStorage/function/innerHtml&quot;&gt;&lt;/script&gt;</evidence>
						<otherinfo>No links have been found while there are scripts, which is an
							indication that this is a modern web application.</otherinfo>
					</instance>


					<instance>
						<uri>
							https://public-firing-range.appspot.com/dom/toxicdom/external/localStorage/property/documentWrite</uri>
						<method>GET</method>
						<param></param>
						<attack></attack>
						<evidence>
							&lt;script
							src=&quot;/dom/toxicdomscripts/localStorage/property/documentWrite&quot;&gt;&lt;/script&gt;</evidence>
						<otherinfo>No links have been found while there are scripts, which is an
							indication that this is a modern web application.</otherinfo>
					</instance>


					<instance>
						<uri>
							https://public-firing-range.appspot.com/dom/toxicdom/external/sessionStorage/array/eval</uri>
						<method>GET</method>
						<param></param>
						<attack></attack>
						<evidence>
							&lt;script
							src=&quot;/dom/toxicdomscripts/sessionStorage/array/eval&quot;&gt;&lt;/script&gt;</evidence>
						<otherinfo>No links have been found while there are scripts, which is an
							indication that this is a modern web application.</otherinfo>
					</instance>


					<instance>
						<uri>
							https://public-firing-range.appspot.com/dom/toxicdom/external/sessionStorage/function/documentWrite</uri>
						<method>GET</method>
						<param></param>
						<attack></attack>
						<evidence>
							&lt;script
							src=&quot;/dom/toxicdomscripts/sessionStorage/function/documentWrite&quot;&gt;&lt;/script&gt;</evidence>
						<otherinfo>No links have been found while there are scripts, which is an
							indication that this is a modern web application.</otherinfo>
					</instance>


					<instance>
						<uri>
							https://public-firing-range.appspot.com/dom/toxicdom/external/sessionStorage/function/eval</uri>
						<method>GET</method>
						<param></param>
						<attack></attack>
						<evidence>
							&lt;script
							src=&quot;/dom/toxicdomscripts/sessionStorage/function/eval&quot;&gt;&lt;/script&gt;</evidence>
						<otherinfo>No links have been found while there are scripts, which is an
							indication that this is a modern web application.</otherinfo>
					</instance>


					<instance>
						<uri>
							https://public-firing-range.appspot.com/dom/toxicdom/external/sessionStorage/function/innerHtml</uri>
						<method>GET</method>
						<param></param>
						<attack></attack>
						<evidence>
							&lt;script
							src=&quot;/dom/toxicdomscripts/sessionStorage/function/innerHtml&quot;&gt;&lt;/script&gt;</evidence>
						<otherinfo>No links have been found while there are scripts, which is an
							indication that this is a modern web application.</otherinfo>
					</instance>


					<instance>
						<uri>
							https://public-firing-range.appspot.com/dom/toxicdom/external/sessionStorage/property/documentWrite</uri>
						<method>GET</method>
						<param></param>
						<attack></attack>
						<evidence>
							&lt;script
							src=&quot;/dom/toxicdomscripts/sessionStorage/property/documentWrite&quot;&gt;&lt;/script&gt;</evidence>
						<otherinfo>No links have been found while there are scripts, which is an
							indication that this is a modern web application.</otherinfo>
					</instance>


					<instance>
						<uri>
							https://public-firing-range.appspot.com/dom/toxicdom/localStorage/array/eval</uri>
						<method>GET</method>
						<param></param>
						<attack></attack>
						<evidence>&lt;script&gt;
							if (!localStorage[&apos;badValue&apos;]) {
							localStorage[&apos;badValue&apos;] = Math.random();
							}
							var payload = localStorage[&apos;badValue&apos;];

							setTimeout(function() {
							trigger(localStorage[&apos;badValue&apos;]); // Using the async trigger.
							// Clean up the localStorage to avoid causing side-effect on subsequent
							tests.
							localStorage.clear();
							}, 10);
							// Sync trigger.
							eval(payload);

							// Async trigger.
							function trigger(payload) {
							eval(payload);
							};
							&lt;/script&gt;</evidence>
						<otherinfo>No links have been found while there are scripts, which is an
							indication that this is a modern web application.</otherinfo>
					</instance>


					<instance>
						<uri>
							https://public-firing-range.appspot.com/dom/toxicdom/localStorage/function/documentWrite</uri>
						<method>GET</method>
						<param></param>
						<attack></attack>
						<evidence>&lt;script&gt;
							if (!localStorage.getItem(&apos;badValue&apos;)) {
							localStorage.setItem(&apos;badValue&apos;, Math.random());
							}

							var payload = localStorage.getItem(&apos;badValue&apos;); // Using sync
							trigger.

							setTimeout(function() {
							trigger(localStorage.getItem(&apos;badValue&apos;)); // Using the async
							trigger.

							// Clean up the localStorage to avoid causing side-effect on subsequent
							tests.
							localStorage.clear();
							}, 10);
							// Sync trigger.
							document.write(payload);

							// Async trigger.
							function trigger(payload) {
							document.write(payload);
							}
							&lt;/script&gt;</evidence>
						<otherinfo>No links have been found while there are scripts, which is an
							indication that this is a modern web application.</otherinfo>
					</instance>


					<instance>
						<uri>
							https://public-firing-range.appspot.com/dom/toxicdom/localStorage/function/eval</uri>
						<method>GET</method>
						<param></param>
						<attack></attack>
						<evidence>&lt;script&gt;
							if (!localStorage.getItem(&apos;badValue&apos;)) {
							localStorage.setItem(&apos;badValue&apos;, Math.random());
							}

							var payload = localStorage.getItem(&apos;badValue&apos;); // Using sync
							trigger.

							setTimeout(function() {
							trigger(localStorage.getItem(&apos;badValue&apos;)); // Using the async
							trigger.

							// Clean up the localStorage to avoid causing side-effect on subsequent
							tests.
							localStorage.clear();
							}, 10);
							// Sync trigger.
							eval(payload);

							// Async trigger.
							function trigger(payload) {
							eval(payload);
							};
							&lt;/script&gt;</evidence>
						<otherinfo>No links have been found while there are scripts, which is an
							indication that this is a modern web application.</otherinfo>
					</instance>


					<instance>
						<uri>
							https://public-firing-range.appspot.com/dom/toxicdom/localStorage/function/innerHtml</uri>
						<method>GET</method>
						<param></param>
						<attack></attack>
						<evidence>&lt;script&gt;
							if (!localStorage.getItem(&apos;badValue&apos;)) {
							localStorage.setItem(&apos;badValue&apos;, Math.random());
							}

							var payload = localStorage.getItem(&apos;badValue&apos;); // Using sync
							trigger.

							setTimeout(function() {
							trigger(localStorage.getItem(&apos;badValue&apos;)); // Using the async
							trigger.

							// Clean up the localStorage to avoid causing side-effect on subsequent
							tests.
							localStorage.clear();
							}, 10);
							var div = document.createElement(&apos;div&apos;);
							document.documentElement.appendChild(div);

							// Sync trigger.
							div.innerHTML = payload;

							// Async trigger.
							function trigger(payload) {
							div.innerHTML = payload;
							};

							&lt;/script&gt;</evidence>
						<otherinfo>No links have been found while there are scripts, which is an
							indication that this is a modern web application.</otherinfo>
					</instance>


					<instance>
						<uri>
							https://public-firing-range.appspot.com/dom/toxicdom/localStorage/property/documentWrite</uri>
						<method>GET</method>
						<param></param>
						<attack></attack>
						<evidence>&lt;script&gt;
							if (!localStorage.badValue) {
							localStorage.badValue = Math.random();
							}
							var payload = localStorage.badValue;

							setTimeout(function() {
							trigger(localStorage.badValue); // Using the async trigger.

							// Clean up the localStorage to avoid causing side-effect on subsequent
							tests.
							localStorage.clear();
							}, 10);
							// Sync trigger.
							document.write(payload);

							// Async trigger.
							function trigger(payload) {
							document.write(payload);
							}
							&lt;/script&gt;</evidence>
						<otherinfo>No links have been found while there are scripts, which is an
							indication that this is a modern web application.</otherinfo>
					</instance>


					<instance>
						<uri>
							https://public-firing-range.appspot.com/dom/toxicdom/postMessage/complexMessageDocumentWriteEval</uri>
						<method>GET</method>
						<param></param>
						<attack></attack>
						<evidence>&lt;script&gt;
							const postMessageHandler = function(msg) {
							let action = msg.data.action;
							if(action === &apos;exec&apos;) {
							eval(msg.data.payload);
							} else if (action === &apos;addImage&apos;) {
							document.write(&apos;&lt;img href=&apos;+ msg.data.source +
							&apos;&gt;&apos;);
							} else if (action === &apos;addHtml&apos;) {
							document.write(msg.data.html);
							} else {
							console.debug(&apos;unsupported command&apos;);
							}
							};

							window.addEventListener(&apos;message&apos;, postMessageHandler, false);
							&lt;/script&gt;</evidence>
						<otherinfo>No links have been found while there are scripts, which is an
							indication that this is a modern web application.</otherinfo>
					</instance>


					<instance>
						<uri>
							https://public-firing-range.appspot.com/dom/toxicdom/postMessage/documentWrite</uri>
						<method>GET</method>
						<param></param>
						<attack></attack>
						<evidence>&lt;script&gt;
							var postMessageHandler = function(msg) {
							var content = JSON.parse(msg.data);
							document.write(&apos;&lt;scr&apos; + &apos;ipt src=&quot;&apos; +
							content.url +&apos;&quot;&gt;&lt;/scr&apos; + &apos;ipt&gt;&apos;);
							};

							window.addEventListener(&apos;message&apos;, postMessageHandler, false);
							&lt;/script&gt;</evidence>
						<otherinfo>No links have been found while there are scripts, which is an
							indication that this is a modern web application.</otherinfo>
					</instance>


					<instance>
						<uri>https://public-firing-range.appspot.com/dom/toxicdom/postMessage/eval</uri>
						<method>GET</method>
						<param></param>
						<attack></attack>
						<evidence>&lt;script&gt;
							var postMessageHandler = function(msg) {
							var content = msg.data;
							var msgObj = eval(content);

							if (msgObj.isActive) {
							document.write(&quot;PostMessage arrived!&quot;);
							}
							}

							window.addEventListener(&apos;message&apos;, postMessageHandler, false);
							&lt;/script&gt;</evidence>
						<otherinfo>No links have been found while there are scripts, which is an
							indication that this is a modern web application.</otherinfo>
					</instance>


					<instance>
						<uri>
							https://public-firing-range.appspot.com/dom/toxicdom/postMessage/improperOriginValidationWithPartialStringComparison</uri>
						<method>GET</method>
						<param></param>
						<attack></attack>
						<evidence>&lt;script&gt;
							var postMessageHandler = function(msg) {
							if (msg.origin.includes(&apos;www.google.com&apos;)) {
							eval(msg.data);
							}
							}

							window.addEventListener(&apos;message&apos;, postMessageHandler, false);
							&lt;/script&gt;</evidence>
						<otherinfo>No links have been found while there are scripts, which is an
							indication that this is a modern web application.</otherinfo>
					</instance>


					<instance>
						<uri>
							https://public-firing-range.appspot.com/dom/toxicdom/postMessage/improperOriginValidationWithRegExp</uri>
						<method>GET</method>
						<param></param>
						<attack></attack>
						<evidence>&lt;script&gt;
							var postMessageHandler = function(msg) {
							const originRegExp = /https?:\/\/www.google.com/
							if (msg.origin.match(originRegExp)) {
							eval(msg.data);
							}
							}

							window.addEventListener(&apos;message&apos;, postMessageHandler, false);
							&lt;/script&gt;</evidence>
						<otherinfo>No links have been found while there are scripts, which is an
							indication that this is a modern web application.</otherinfo>
					</instance>


					<instance>
						<uri>
							https://public-firing-range.appspot.com/dom/toxicdom/postMessage/innerHtml</uri>
						<method>GET</method>
						<param></param>
						<attack></attack>
						<evidence>&lt;script&gt;
							var postMessageHandler = function(msg) {
							var content = JSON.parse(msg.data);
							var div = document.createElement(&apos;div&apos;);
							div.innerHTML = content.html;
							document.documentElement.appendChild(div);
							};

							window.addEventListener(&apos;message&apos;, postMessageHandler, false);
							&lt;/script&gt;</evidence>
						<otherinfo>No links have been found while there are scripts, which is an
							indication that this is a modern web application.</otherinfo>
					</instance>


					<instance>
						<uri>
							https://public-firing-range.appspot.com/dom/toxicdom/sessionStorage/array/eval</uri>
						<method>GET</method>
						<param></param>
						<attack></attack>
						<evidence>&lt;script&gt;
							if (!sessionStorage[&apos;badValue&apos;]) {
							sessionStorage[&apos;badValue&apos;] = Math.random();
							}

							var payload = sessionStorage[&apos;badValue&apos;];

							setTimeout(function() {
							trigger(sessionStorage[&apos;badValue&apos;]); // Using the async
							trigger.

							// Clean up the localStorage to avoid causing side-effect on subsequent
							tests.
							sessionStorage.clear();
							}, 10);
							// Sync trigger.
							eval(payload);

							// Async trigger.
							function trigger(payload) {
							eval(payload);
							};
							&lt;/script&gt;</evidence>
						<otherinfo>No links have been found while there are scripts, which is an
							indication that this is a modern web application.</otherinfo>
					</instance>


					<instance>
						<uri>
							https://public-firing-range.appspot.com/dom/toxicdom/sessionStorage/function/documentWrite</uri>
						<method>GET</method>
						<param></param>
						<attack></attack>
						<evidence>&lt;script&gt;
							if (!sessionStorage.getItem(&apos;badValue&apos;)) {
							sessionStorage.setItem(&apos;badValue&apos;, Math.random());
							}

							var payload = sessionStorage.getItem(&apos;badValue&apos;); // Using
							sync trigger.

							setTimeout(function() {
							trigger(sessionStorage.getItem(&apos;badValue&apos;));
							// Clean up the sessionStorage to avoid side-effects on subsequent
							tests.
							sessionStorage.clear();
							}, 10);
							// Sync trigger.
							document.write(payload);

							// Async trigger.
							function trigger(payload) {
							document.write(payload);
							}
							&lt;/script&gt;</evidence>
						<otherinfo>No links have been found while there are scripts, which is an
							indication that this is a modern web application.</otherinfo>
					</instance>


					<instance>
						<uri>
							https://public-firing-range.appspot.com/dom/toxicdom/sessionStorage/function/eval</uri>
						<method>GET</method>
						<param></param>
						<attack></attack>
						<evidence>&lt;script&gt;
							if (!sessionStorage.getItem(&apos;badValue&apos;)) {
							sessionStorage.setItem(&apos;badValue&apos;, Math.random());
							}

							var payload = sessionStorage.getItem(&apos;badValue&apos;); // Using
							sync trigger.

							setTimeout(function() {
							trigger(sessionStorage.getItem(&apos;badValue&apos;));
							// Clean up the sessionStorage to avoid side-effects on subsequent
							tests.
							sessionStorage.clear();
							}, 10);
							// Sync trigger.
							eval(payload);

							// Async trigger.
							function trigger(payload) {
							eval(payload);
							};
							&lt;/script&gt;</evidence>
						<otherinfo>No links have been found while there are scripts, which is an
							indication that this is a modern web application.</otherinfo>
					</instance>


					<instance>
						<uri>
							https://public-firing-range.appspot.com/dom/toxicdom/sessionStorage/function/innerHtml</uri>
						<method>GET</method>
						<param></param>
						<attack></attack>
						<evidence>&lt;script&gt;
							if (!sessionStorage.getItem(&apos;badValue&apos;)) {
							sessionStorage.setItem(&apos;badValue&apos;, Math.random());
							}

							var payload = sessionStorage.getItem(&apos;badValue&apos;); // Using
							sync trigger.

							setTimeout(function() {
							trigger(sessionStorage.getItem(&apos;badValue&apos;));
							// Clean up the sessionStorage to avoid side-effects on subsequent
							tests.
							sessionStorage.clear();
							}, 10);
							var div = document.createElement(&apos;div&apos;);
							document.documentElement.appendChild(div);

							// Sync trigger.
							div.innerHTML = payload;

							// Async trigger.
							function trigger(payload) {
							div.innerHTML = payload;
							};

							&lt;/script&gt;</evidence>
						<otherinfo>No links have been found while there are scripts, which is an
							indication that this is a modern web application.</otherinfo>
					</instance>


					<instance>
						<uri>
							https://public-firing-range.appspot.com/dom/toxicdom/sessionStorage/property/documentWrite</uri>
						<method>GET</method>
						<param></param>
						<attack></attack>
						<evidence>&lt;script&gt;
							if (!sessionStorage.badValue) {
							sessionStorage.badValue = Math.random();
							}

							var payload = sessionStorage.badValue;

							setTimeout(function() {
							trigger(sessionStorage.badValue); // Using the async trigger.

							// Clean up the sessionStorage to avoid side-effects on subsequent
							tests.
							sessionStorage.clear();
							}, 10)
							// Sync trigger.
							document.write(payload);

							// Async trigger.
							function trigger(payload) {
							document.write(payload);
							}
							&lt;/script&gt;</evidence>
						<otherinfo>No links have been found while there are scripts, which is an
							indication that this is a modern web application.</otherinfo>
					</instance>


					<instance>
						<uri>
							https://public-firing-range.appspot.com/dom/toxicdom/window/name/documentWrite</uri>
						<method>GET</method>
						<param></param>
						<attack></attack>
						<evidence>&lt;script&gt;
							if (window.name == &quot;&quot;) {
							window.name = &quot;badvalue=&apos;a&apos;&quot;;
							}

							var payload = window.name;

							setTimeout(function() {
							trigger(window.name);
							}, 10);
							// Sync trigger.
							document.write(payload);

							// Async trigger.
							function trigger(payload) {
							document.write(payload);
							}
							&lt;/script&gt;</evidence>
						<otherinfo>No links have been found while there are scripts, which is an
							indication that this is a modern web application.</otherinfo>
					</instance>


					<instance>
						<uri>https://public-firing-range.appspot.com/dom/toxicdom/window/name/eval</uri>
						<method>GET</method>
						<param></param>
						<attack></attack>
						<evidence>&lt;script&gt;
							if (window.name == &quot;&quot;) {
							window.name = &quot;badvalue=&apos;a&apos;&quot;;
							}

							var payload = window.name;

							setTimeout(function() {
							trigger(window.name);
							}, 10);
							// Sync trigger.
							eval(payload);

							// Async trigger.
							function trigger(payload) {
							eval(payload);
							};
							&lt;/script&gt;</evidence>
						<otherinfo>No links have been found while there are scripts, which is an
							indication that this is a modern web application.</otherinfo>
					</instance>


					<instance>
						<uri>
							https://public-firing-range.appspot.com/dom/toxicdom/window/name/innerHtml</uri>
						<method>GET</method>
						<param></param>
						<attack></attack>
						<evidence>&lt;script&gt;
							if (window.name == &quot;&quot;) {
							window.name = &quot;badvalue=&apos;a&apos;&quot;;
							}

							var payload = window.name;

							setTimeout(function() {
							trigger(window.name);
							}, 10);
							var div = document.createElement(&apos;div&apos;);
							document.documentElement.appendChild(div);

							// Sync trigger.
							div.innerHTML = payload;

							// Async trigger.
							function trigger(payload) {
							div.innerHTML = payload;
							};

							&lt;/script&gt;</evidence>
						<otherinfo>No links have been found while there are scripts, which is an
							indication that this is a modern web application.</otherinfo>
					</instance>


					<instance>
						<uri>
							https://public-firing-range.appspot.com/escape/js/encodeURIComponent?q=a</uri>
						<method>GET</method>
						<param></param>
						<attack></attack>
						<evidence>&lt;script&gt;
							eval(encodeURIComponent(&apos;a&apos;));
							&lt;/script&gt;</evidence>
						<otherinfo>No links have been found while there are scripts, which is an
							indication that this is a modern web application.</otherinfo>
					</instance>


					<instance>
						<uri>https://public-firing-range.appspot.com/escape/js/escape?q=a</uri>
						<method>GET</method>
						<param></param>
						<attack></attack>
						<evidence>&lt;script&gt;
							eval(escape(&apos;a&apos;));
							&lt;/script&gt;</evidence>
						<otherinfo>No links have been found while there are scripts, which is an
							indication that this is a modern web application.</otherinfo>
					</instance>


					<instance>
						<uri>https://public-firing-range.appspot.com/escape/js/html_escape?q=a</uri>
						<method>GET</method>
						<param></param>
						<attack></attack>
						<evidence>&lt;script&gt;eval(&apos;a&apos;.replace(/&lt;/g,
							&apos;&amp;lt;&apos;)
							.replace(/&amp;/g, &apos;&amp;amp;&apos;)
							.replace(/&gt;/g, &apos;&amp;gt;&apos;));
							&lt;/script&gt;</evidence>
						<otherinfo>No links have been found while there are scripts, which is an
							indication that this is a modern web application.</otherinfo>
					</instance>


					<instance>
						<uri>
							https://public-firing-range.appspot.com/escape/serverside/encodeUrl/attribute_script?q=a</uri>
						<method>GET</method>
						<param></param>
						<attack></attack>
						<evidence>&lt;script src=&quot;http://irrelevant.google.com?a&quot;/&gt;</evidence>
						<otherinfo>No links have been found while there are scripts, which is an
							indication that this is a modern web application.</otherinfo>
					</instance>


					<instance>
						<uri>
							https://public-firing-range.appspot.com/escape/serverside/encodeUrl/js_assignment?q=a</uri>
						<method>GET</method>
						<param></param>
						<attack></attack>
						<evidence>&lt;script&gt;var foo=a;&lt;/script&gt;</evidence>
						<otherinfo>No links have been found while there are scripts, which is an
							indication that this is a modern web application.</otherinfo>
					</instance>


					<instance>
						<uri>
							https://public-firing-range.appspot.com/escape/serverside/encodeUrl/js_comment?q=a</uri>
						<method>GET</method>
						<param></param>
						<attack></attack>
						<evidence>&lt;script&gt;var foo=1; /* &quot;a&quot; */&lt;/script&gt;</evidence>
						<otherinfo>No links have been found while there are scripts, which is an
							indication that this is a modern web application.</otherinfo>
					</instance>


					<instance>
						<uri>
							https://public-firing-range.appspot.com/escape/serverside/encodeUrl/js_eval?q=a</uri>
						<method>GET</method>
						<param></param>
						<attack></attack>
						<evidence>&lt;script&gt;a;&lt;/script&gt;</evidence>
						<otherinfo>No links have been found while there are scripts, which is an
							indication that this is a modern web application.</otherinfo>
					</instance>


					<instance>
						<uri>
							https://public-firing-range.appspot.com/escape/serverside/encodeUrl/js_quoted_string?q=a</uri>
						<method>GET</method>
						<param></param>
						<attack></attack>
						<evidence>&lt;script&gt;var foo=&quot;a&quot;;&lt;/script&gt;</evidence>
						<otherinfo>No links have been found while there are scripts, which is an
							indication that this is a modern web application.</otherinfo>
					</instance>


					<instance>
						<uri>
							https://public-firing-range.appspot.com/escape/serverside/encodeUrl/js_singlequoted_string?q=a</uri>
						<method>GET</method>
						<param></param>
						<attack></attack>
						<evidence>&lt;script&gt;var foo=&apos;a&apos;;&lt;/script&gt;</evidence>
						<otherinfo>No links have been found while there are scripts, which is an
							indication that this is a modern web application.</otherinfo>
					</instance>


					<instance>
						<uri>
							https://public-firing-range.appspot.com/escape/serverside/encodeUrl/js_slashquoted_string?q=a</uri>
						<method>GET</method>
						<param></param>
						<attack></attack>
						<evidence>&lt;script&gt;var foo=/a/;&lt;/script&gt;</evidence>
						<otherinfo>No links have been found while there are scripts, which is an
							indication that this is a modern web application.</otherinfo>
					</instance>


					<instance>
						<uri>
							https://public-firing-range.appspot.com/escape/serverside/encodeUrl/tagname?q=a</uri>
						<method>GET</method>
						<param></param>
						<attack></attack>
						<evidence>&lt;a&gt;</evidence>
						<otherinfo>Links have been found that do not have traditional href
							attributes, which is an indication that this is a modern web
							application.</otherinfo>
					</instance>


					<instance>
						<uri>
							https://public-firing-range.appspot.com/escape/serverside/escapeHtml/attribute_script?q=a</uri>
						<method>GET</method>
						<param></param>
						<attack></attack>
						<evidence>&lt;script src=&quot;http://irrelevant.google.com?a&quot;/&gt;</evidence>
						<otherinfo>No links have been found while there are scripts, which is an
							indication that this is a modern web application.</otherinfo>
					</instance>


					<instance>
						<uri>
							https://public-firing-range.appspot.com/escape/serverside/escapeHtml/js_assignment?q=a</uri>
						<method>GET</method>
						<param></param>
						<attack></attack>
						<evidence>&lt;script&gt;var foo=a;&lt;/script&gt;</evidence>
						<otherinfo>No links have been found while there are scripts, which is an
							indication that this is a modern web application.</otherinfo>
					</instance>


					<instance>
						<uri>
							https://public-firing-range.appspot.com/escape/serverside/escapeHtml/js_comment?q=a</uri>
						<method>GET</method>
						<param></param>
						<attack></attack>
						<evidence>&lt;script&gt;var foo=1; /* &quot;a&quot; */&lt;/script&gt;</evidence>
						<otherinfo>No links have been found while there are scripts, which is an
							indication that this is a modern web application.</otherinfo>
					</instance>


					<instance>
						<uri>
							https://public-firing-range.appspot.com/escape/serverside/escapeHtml/js_eval?q=a</uri>
						<method>GET</method>
						<param></param>
						<attack></attack>
						<evidence>&lt;script&gt;a;&lt;/script&gt;</evidence>
						<otherinfo>No links have been found while there are scripts, which is an
							indication that this is a modern web application.</otherinfo>
					</instance>


					<instance>
						<uri>
							https://public-firing-range.appspot.com/escape/serverside/escapeHtml/js_quoted_string?q=a</uri>
						<method>GET</method>
						<param></param>
						<attack></attack>
						<evidence>&lt;script&gt;var foo=&quot;a&quot;;&lt;/script&gt;</evidence>
						<otherinfo>No links have been found while there are scripts, which is an
							indication that this is a modern web application.</otherinfo>
					</instance>


					<instance>
						<uri>
							https://public-firing-range.appspot.com/escape/serverside/escapeHtml/js_singlequoted_string?q=a</uri>
						<method>GET</method>
						<param></param>
						<attack></attack>
						<evidence>&lt;script&gt;var foo=&apos;a&apos;;&lt;/script&gt;</evidence>
						<otherinfo>No links have been found while there are scripts, which is an
							indication that this is a modern web application.</otherinfo>
					</instance>


					<instance>
						<uri>
							https://public-firing-range.appspot.com/escape/serverside/escapeHtml/js_slashquoted_string?q=a</uri>
						<method>GET</method>
						<param></param>
						<attack></attack>
						<evidence>&lt;script&gt;var foo=/a/;&lt;/script&gt;</evidence>
						<otherinfo>No links have been found while there are scripts, which is an
							indication that this is a modern web application.</otherinfo>
					</instance>


					<instance>
						<uri>
							https://public-firing-range.appspot.com/escape/serverside/escapeHtml/tagname?q=a</uri>
						<method>GET</method>
						<param></param>
						<attack></attack>
						<evidence>&lt;a&gt;</evidence>
						<otherinfo>Links have been found that do not have traditional href
							attributes, which is an indication that this is a modern web
							application.</otherinfo>
					</instance>


					<instance>
						<uri>https://public-firing-range.appspot.com/leakedcookie/leakedinresource</uri>
						<method>GET</method>
						<param></param>
						<attack></attack>
						<evidence>&lt;script src=&quot;leakedcookie.js&quot;&gt;&lt;/script&gt;</evidence>
						<otherinfo>No links have been found while there are scripts, which is an
							indication that this is a modern web application.</otherinfo>
					</instance>


					<instance>
						<uri>https://public-firing-range.appspot.com/mixedcontent/index.html</uri>
						<method>GET</method>
						<param></param>
						<attack></attack>
						<evidence>&lt;script
							src=&quot;http://public-firing-range.appspot.com/mixedcontent/script.js&quot;&gt;
							&lt;/script&gt;</evidence>
						<otherinfo>No links have been found while there are scripts, which is an
							indication that this is a modern web application.</otherinfo>
					</instance>


					<instance>
						<uri>
							https://public-firing-range.appspot.com/reflected/parameter/attribute_script?q=a</uri>
						<method>GET</method>
						<param></param>
						<attack></attack>
						<evidence>&lt;script src=&quot;http://irrelevant.google.com/a&quot;/&gt;</evidence>
						<otherinfo>No links have been found while there are scripts, which is an
							indication that this is a modern web application.</otherinfo>
					</instance>


					<instance>
						<uri>
							https://public-firing-range.appspot.com/reflected/parameter/js_assignment?q=a</uri>
						<method>GET</method>
						<param></param>
						<attack></attack>
						<evidence>&lt;script&gt;var foo=a;&lt;/script&gt;</evidence>
						<otherinfo>No links have been found while there are scripts, which is an
							indication that this is a modern web application.</otherinfo>
					</instance>


					<instance>
						<uri>
							https://public-firing-range.appspot.com/reflected/parameter/js_comment?q=a</uri>
						<method>GET</method>
						<param></param>
						<attack></attack>
						<evidence>&lt;script&gt;var foo=1; /* &quot;a&quot; */&lt;/script&gt;</evidence>
						<otherinfo>No links have been found while there are scripts, which is an
							indication that this is a modern web application.</otherinfo>
					</instance>


					<instance>
						<uri>https://public-firing-range.appspot.com/reflected/parameter/js_eval?q=a</uri>
						<method>GET</method>
						<param></param>
						<attack></attack>
						<evidence>&lt;script&gt;eval(&quot;a&quot;);&lt;/script&gt;</evidence>
						<otherinfo>No links have been found while there are scripts, which is an
							indication that this is a modern web application.</otherinfo>
					</instance>


					<instance>
						<uri>
							https://public-firing-range.appspot.com/reflected/parameter/js_quoted_string?q=a</uri>
						<method>GET</method>
						<param></param>
						<attack></attack>
						<evidence>&lt;script&gt;var foo=&quot;a&quot;;&lt;/script&gt;</evidence>
						<otherinfo>No links have been found while there are scripts, which is an
							indication that this is a modern web application.</otherinfo>
					</instance>


					<instance>
						<uri>
							https://public-firing-range.appspot.com/reflected/parameter/js_singlequoted_string?q=a</uri>
						<method>GET</method>
						<param></param>
						<attack></attack>
						<evidence>&lt;script&gt;var foo=&apos;a&apos;;&lt;/script&gt;</evidence>
						<otherinfo>No links have been found while there are scripts, which is an
							indication that this is a modern web application.</otherinfo>
					</instance>


					<instance>
						<uri>
							https://public-firing-range.appspot.com/reflected/parameter/js_slashquoted_string?q=a</uri>
						<method>GET</method>
						<param></param>
						<attack></attack>
						<evidence>&lt;script&gt;var foo=/a/;&lt;/script&gt;</evidence>
						<otherinfo>No links have been found while there are scripts, which is an
							indication that this is a modern web application.</otherinfo>
					</instance>


					<instance>
						<uri>
							https://public-firing-range.appspot.com/reflected/parameter/noscript?q=a</uri>
						<method>GET</method>
						<param></param>
						<attack></attack>
						<evidence>&lt;noscript&gt;a&lt;/noscript&gt;</evidence>
						<otherinfo>A noScript tag has been found, which is an indication that the
							application works differently with JavaScript enabled compared to when
							it is not.</otherinfo>
					</instance>


					<instance>
						<uri>https://public-firing-range.appspot.com/reflected/parameter/tagname?q=a</uri>
						<method>GET</method>
						<param></param>
						<attack></attack>
						<evidence>&lt;a&gt;</evidence>
						<otherinfo>Links have been found that do not have traditional href
							attributes, which is an indication that this is a modern web
							application.</otherinfo>
					</instance>


					<instance>
						<uri>https://public-firing-range.appspot.com/reflected/url/script_src?q=a</uri>
						<method>GET</method>
						<param></param>
						<attack></attack>
						<evidence>&lt;script src=&quot;a&quot;&gt;&lt;/script&gt;</evidence>
						<otherinfo>No links have been found while there are scripts, which is an
							indication that this is a modern web application.</otherinfo>
					</instance>


					<instance>
						<uri>https://public-firing-range.appspot.com/remoteinclude/object_hash.html</uri>
						<method>GET</method>
						<param></param>
						<attack></attack>
						<evidence>&lt;script&gt;
							var target = location.hash.substr(1);
							var body = document.getElementsByTagName(&apos;body&apos;)[0];
							var object = document.createElement(&apos;object&apos;);
							object.data = target;
							body.appendChild(object);
							&lt;/script&gt;</evidence>
						<otherinfo>No links have been found while there are scripts, which is an
							indication that this is a modern web application.</otherinfo>
					</instance>


					<instance>
						<uri>
							https://public-firing-range.appspot.com/remoteinclude/parameter/script?q=http://127.0.0.2/localhost_import.js</uri>
						<method>GET</method>
						<param></param>
						<attack></attack>
						<evidence>&lt;script
							src=&quot;http://127.0.0.2/localhost_import.js&quot;&gt;&lt;/script&gt;</evidence>
						<otherinfo>No links have been found while there are scripts, which is an
							indication that this is a modern web application.</otherinfo>
					</instance>


					<instance>
						<uri>
							https://public-firing-range.appspot.com/remoteinclude/parameter/script?q=http://192.168.1.2/private_network_import.js</uri>
						<method>GET</method>
						<param></param>
						<attack></attack>
						<evidence>
							&lt;script
							src=&quot;http://192.168.1.2/private_network_import.js&quot;&gt;&lt;/script&gt;</evidence>
						<otherinfo>No links have been found while there are scripts, which is an
							indication that this is a modern web application.</otherinfo>
					</instance>


					<instance>
						<uri>
							https://public-firing-range.appspot.com/remoteinclude/parameter/script?q=http://g00gle.com/typosquatting_domain.js</uri>
						<method>GET</method>
						<param></param>
						<attack></attack>
						<evidence>
							&lt;script
							src=&quot;http://g00gle.com/typosquatting_domain.js&quot;&gt;&lt;/script&gt;</evidence>
						<otherinfo>No links have been found while there are scripts, which is an
							indication that this is a modern web application.</otherinfo>
					</instance>


					<instance>
						<uri>
							https://public-firing-range.appspot.com/remoteinclude/parameter/script?q=https://google.com</uri>
						<method>GET</method>
						<param></param>
						<attack></attack>
						<evidence>&lt;script src=&quot;https://google.com&quot;&gt;&lt;/script&gt;</evidence>
						<otherinfo>No links have been found while there are scripts, which is an
							indication that this is a modern web application.</otherinfo>
					</instance>


					<instance>
						<uri>https://public-firing-range.appspot.com/remoteinclude/script_hash.html</uri>
						<method>GET</method>
						<param></param>
						<attack></attack>
						<evidence>&lt;script&gt;
							var target = location.hash.substr(1);
							var head = document.getElementsByTagName(&apos;head&apos;)[0];
							var script = document.createElement(&apos;script&apos;);
							script.type = &apos;text/javascript&apos;;
							script.src = target;
							head.appendChild(script);
							&lt;/script&gt;</evidence>
						<otherinfo>No links have been found while there are scripts, which is an
							indication that this is a modern web application.</otherinfo>
					</instance>


					<instance>
						<uri>
							https://public-firing-range.appspot.com/reverseclickjacking/multipage/ParameterInFragment/InCallback/WithoutXFO/</uri>
						<method>GET</method>
						<param></param>
						<attack></attack>
						<evidence>&lt;script&gt;
							var resultDiv = document.getElementById(&apos;result&apos;);

							/**
							* Callback function that receives data from the JSONP callback and
							* prints a &quot;stringified&quot; representation of the response, only
							for
							* human debugging.
							*/
							function callbackFunc(data) {
							resultDiv.textContent = &apos;JSONP data received: &apos; +
							JSON.stringify(data);
							}

							try {
							// Retrieve the &quot;q&quot; parameter in the URL fragment
							var q = decodeURIComponent(new
							RegExp(&apos;[?&amp;#]q=([^&amp;]*)&apos;)
							.exec(location.hash)[1]);

							// Validate it (prevents trivial XSS)
							var allowedPattern = /^[a-zA-Z0-9\._&amp;#=]+$/;
							if (allowedPattern.test(q)) {
							// The vulnerability arises because of this insecure concatenation
							var url = &apos;/reverseclickjacking/jsonpendpoint?q=&apos; + q
							+ &apos;&amp;callback=&apos; + q + &apos;&apos;;

							/* Create the &lt;script&gt; tag that executes the JS code returned by
							* the JSONP endpoint. */
							var s = document.createElement(&apos;script&apos;);
							s.type = &apos;text/javascript&apos;;
							s.src = url;
							document.body.appendChild(s);
							}
							} catch(e) {
							resultDiv.textContent = &apos;Please specify a q parameter in the
							fragment.&apos;;
							}
							&lt;/script&gt;</evidence>
						<otherinfo>No links have been found while there are scripts, which is an
							indication that this is a modern web application.</otherinfo>
					</instance>


					<instance>
						<uri>
							https://public-firing-range.appspot.com/reverseclickjacking/multipage/ParameterInFragment/InCallback/WithXFO/</uri>
						<method>GET</method>
						<param></param>
						<attack></attack>
						<evidence>&lt;script&gt;
							var resultDiv = document.getElementById(&apos;result&apos;);

							/**
							* Callback function that receives data from the JSONP callback and
							* prints a &quot;stringified&quot; representation of the response, only
							for
							* human debugging.
							*/
							function callbackFunc(data) {
							resultDiv.textContent = &apos;JSONP data received: &apos; +
							JSON.stringify(data);
							}

							try {
							// Retrieve the &quot;q&quot; parameter in the URL fragment
							var q = decodeURIComponent(new
							RegExp(&apos;[?&amp;#]q=([^&amp;]*)&apos;)
							.exec(location.hash)[1]);

							// Validate it (prevents trivial XSS)
							var allowedPattern = /^[a-zA-Z0-9\._&amp;#=]+$/;
							if (allowedPattern.test(q)) {
							// The vulnerability arises because of this insecure concatenation
							var url = &apos;/reverseclickjacking/jsonpendpoint?q=&apos; + q
							+ &apos;&amp;callback=&apos; + q + &apos;&apos;;

							/* Create the &lt;script&gt; tag that executes the JS code returned by
							* the JSONP endpoint. */
							var s = document.createElement(&apos;script&apos;);
							s.type = &apos;text/javascript&apos;;
							s.src = url;
							document.body.appendChild(s);
							}
							} catch(e) {
							resultDiv.textContent = &apos;Please specify a q parameter in the
							fragment.&apos;;
							}
							&lt;/script&gt;</evidence>
						<otherinfo>No links have been found while there are scripts, which is an
							indication that this is a modern web application.</otherinfo>
					</instance>


					<instance>
						<uri>
							https://public-firing-range.appspot.com/reverseclickjacking/multipage/ParameterInFragment/OtherParameter/WithoutXFO/</uri>
						<method>GET</method>
						<param></param>
						<attack></attack>
						<evidence>&lt;script&gt;
							var resultDiv = document.getElementById(&apos;result&apos;);

							/**
							* Callback function that receives data from the JSONP callback and
							* prints a &quot;stringified&quot; representation of the response, only
							for
							* human debugging.
							*/
							function callbackFunc(data) {
							resultDiv.textContent = &apos;JSONP data received: &apos; +
							JSON.stringify(data);
							}

							try {
							// Retrieve the &quot;q&quot; parameter in the URL fragment
							var q = decodeURIComponent(new
							RegExp(&apos;[?&amp;#]q=([^&amp;]*)&apos;)
							.exec(location.hash)[1]);

							// Validate it (prevents trivial XSS)
							var allowedPattern = /^[a-zA-Z0-9\._&amp;#=]+$/;
							if (allowedPattern.test(q)) {
							// The vulnerability arises because of this insecure concatenation
							var url = &apos;/reverseclickjacking/jsonpendpoint?q=&apos; + q
							+ &apos;&amp;callback=callbackFunc&apos;;

							/* Create the &lt;script&gt; tag that executes the JS code returned by
							* the JSONP endpoint. */
							var s = document.createElement(&apos;script&apos;);
							s.type = &apos;text/javascript&apos;;
							s.src = url;
							document.body.appendChild(s);
							}
							} catch(e) {
							resultDiv.textContent = &apos;Please specify a q parameter in the
							fragment.&apos;;
							}
							&lt;/script&gt;</evidence>
						<otherinfo>No links have been found while there are scripts, which is an
							indication that this is a modern web application.</otherinfo>
					</instance>


					<instance>
						<uri>
							https://public-firing-range.appspot.com/reverseclickjacking/multipage/ParameterInFragment/OtherParameter/WithXFO/</uri>
						<method>GET</method>
						<param></param>
						<attack></attack>
						<evidence>&lt;script&gt;
							var resultDiv = document.getElementById(&apos;result&apos;);

							/**
							* Callback function that receives data from the JSONP callback and
							* prints a &quot;stringified&quot; representation of the response, only
							for
							* human debugging.
							*/
							function callbackFunc(data) {
							resultDiv.textContent = &apos;JSONP data received: &apos; +
							JSON.stringify(data);
							}

							try {
							// Retrieve the &quot;q&quot; parameter in the URL fragment
							var q = decodeURIComponent(new
							RegExp(&apos;[?&amp;#]q=([^&amp;]*)&apos;)
							.exec(location.hash)[1]);

							// Validate it (prevents trivial XSS)
							var allowedPattern = /^[a-zA-Z0-9\._&amp;#=]+$/;
							if (allowedPattern.test(q)) {
							// The vulnerability arises because of this insecure concatenation
							var url = &apos;/reverseclickjacking/jsonpendpoint?q=&apos; + q
							+ &apos;&amp;callback=callbackFunc&apos;;

							/* Create the &lt;script&gt; tag that executes the JS code returned by
							* the JSONP endpoint. */
							var s = document.createElement(&apos;script&apos;);
							s.type = &apos;text/javascript&apos;;
							s.src = url;
							document.body.appendChild(s);
							}
							} catch(e) {
							resultDiv.textContent = &apos;Please specify a q parameter in the
							fragment.&apos;;
							}
							&lt;/script&gt;</evidence>
						<otherinfo>No links have been found while there are scripts, which is an
							indication that this is a modern web application.</otherinfo>
					</instance>


					<instance>
						<uri>
							https://public-firing-range.appspot.com/reverseclickjacking/multipage/ParameterInQuery/InCallback/WithoutXFO/?q=foo</uri>
						<method>GET</method>
						<param></param>
						<attack></attack>
						<evidence>
							&lt;script src=
							&apos;/reverseclickjacking/jsonpendpoint?q=&amp;callback=foo&apos;&gt;&lt;/script&gt;</evidence>
						<otherinfo>No links have been found while there are scripts, which is an
							indication that this is a modern web application.</otherinfo>
					</instance>


					<instance>
						<uri>
							https://public-firing-range.appspot.com/reverseclickjacking/multipage/ParameterInQuery/InCallback/WithXFO/?q=foo</uri>
						<method>GET</method>
						<param></param>
						<attack></attack>
						<evidence>
							&lt;script src=
							&apos;/reverseclickjacking/jsonpendpoint?q=&amp;callback=foo&apos;&gt;&lt;/script&gt;</evidence>
						<otherinfo>No links have been found while there are scripts, which is an
							indication that this is a modern web application.</otherinfo>
					</instance>


					<instance>
						<uri>
							https://public-firing-range.appspot.com/reverseclickjacking/multipage/ParameterInQuery/OtherParameter/WithoutXFO/?q=%26callback%3Dfoo%23</uri>
						<method>GET</method>
						<param></param>
						<attack></attack>
						<evidence>
							&lt;script src=
							&apos;/reverseclickjacking/jsonpendpoint?q=&amp;callback=foo#&amp;callback=callbackFunc&apos;&gt;&lt;/script&gt;</evidence>
						<otherinfo>No links have been found while there are scripts, which is an
							indication that this is a modern web application.</otherinfo>
					</instance>


					<instance>
						<uri>
							https://public-firing-range.appspot.com/reverseclickjacking/multipage/ParameterInQuery/OtherParameter/WithXFO/?q=%26callback%3Dfoo%23</uri>
						<method>GET</method>
						<param></param>
						<attack></attack>
						<evidence>
							&lt;script src=
							&apos;/reverseclickjacking/jsonpendpoint?q=&amp;callback=foo#&amp;callback=callbackFunc&apos;&gt;&lt;/script&gt;</evidence>
						<otherinfo>No links have been found while there are scripts, which is an
							indication that this is a modern web application.</otherinfo>
					</instance>


					<instance>
						<uri>
							https://public-firing-range.appspot.com/reverseclickjacking/singlepage/ParameterInFragment/InCallback/</uri>
						<method>GET</method>
						<param></param>
						<attack></attack>
						<evidence>&lt;script&gt;
							var resultDiv = document.getElementById(&apos;result&apos;);

							/**
							* Callback function that receives data from the JSONP callback and
							* prints a &quot;stringified&quot; representation of the response, just
							for
							* human debugging.
							*/
							function callbackFunc(data) {
							resultDiv.textContent = &apos;JSONP data received: &apos; +
							JSON.stringify(data);
							}

							try {
							// Retrieve the &quot;q&quot; parameter in the URL fragment
							var q = decodeURIComponent(new
							RegExp(&apos;[?&amp;#]q=([^&amp;]*)&apos;)
							.exec(location.hash)[1]);

							// Validate it (prevents trivial XSS)
							var allowedPattern = /^[a-zA-Z0-9\._&amp;#=]+$/;
							if (allowedPattern.test(q)) {
							// The vulnerability arises because of this insecure concatenation
							var url = &apos;/reverseclickjacking/jsonpendpoint?q=&apos; + q
							+ &apos;&amp;callback=&apos; + q + &apos;&apos;;

							/* Create the &lt;script&gt; tag that executes the JS code returned by
							* the JSONP endpoint. */
							var s = document.createElement(&apos;script&apos;);
							s.type = &apos;text/javascript&apos;;
							s.src = url;
							document.body.appendChild(s);
							}
							} catch(e) {
							resultDiv.textContent = &apos;Please specify a q parameter in the
							fragment.&apos;;
							}
							&lt;/script&gt;</evidence>
						<otherinfo>No links have been found while there are scripts, which is an
							indication that this is a modern web application.</otherinfo>
					</instance>


					<instance>
						<uri>
							https://public-firing-range.appspot.com/reverseclickjacking/singlepage/ParameterInFragment/OtherParameter/</uri>
						<method>GET</method>
						<param></param>
						<attack></attack>
						<evidence>&lt;script&gt;
							var resultDiv = document.getElementById(&apos;result&apos;);

							/**
							* Callback function that receives data from the JSONP callback and
							* prints a &quot;stringified&quot; representation of the response, just
							for
							* human debugging.
							*/
							function callbackFunc(data) {
							resultDiv.textContent = &apos;JSONP data received: &apos; +
							JSON.stringify(data);
							}

							try {
							// Retrieve the &quot;q&quot; parameter in the URL fragment
							var q = decodeURIComponent(new
							RegExp(&apos;[?&amp;#]q=([^&amp;]*)&apos;)
							.exec(location.hash)[1]);

							// Validate it (prevents trivial XSS)
							var allowedPattern = /^[a-zA-Z0-9\._&amp;#=]+$/;
							if (allowedPattern.test(q)) {
							// The vulnerability arises because of this insecure concatenation
							var url = &apos;/reverseclickjacking/jsonpendpoint?q=&apos; + q
							+ &apos;&amp;callback=callbackFunc&apos;;

							/* Create the &lt;script&gt; tag that executes the JS code returned by
							* the JSONP endpoint. */
							var s = document.createElement(&apos;script&apos;);
							s.type = &apos;text/javascript&apos;;
							s.src = url;
							document.body.appendChild(s);
							}
							} catch(e) {
							resultDiv.textContent = &apos;Please specify a q parameter in the
							fragment.&apos;;
							}
							&lt;/script&gt;</evidence>
						<otherinfo>No links have been found while there are scripts, which is an
							indication that this is a modern web application.</otherinfo>
					</instance>


					<instance>
						<uri>
							https://public-firing-range.appspot.com/reverseclickjacking/singlepage/ParameterInQuery/InCallback/?q=urc_button.click</uri>
						<method>GET</method>
						<param></param>
						<attack></attack>
						<evidence>
							&lt;script src=
							&apos;/reverseclickjacking/jsonpendpoint?q=&amp;callback=urc_button.click&apos;&gt;&lt;/script&gt;</evidence>
						<otherinfo>No links have been found while there are scripts, which is an
							indication that this is a modern web application.</otherinfo>
					</instance>


					<instance>
						<uri>
							https://public-firing-range.appspot.com/reverseclickjacking/singlepage/ParameterInQuery/OtherParameter/?q=%26callback%3Durc_button.click%23</uri>
						<method>GET</method>
						<param></param>
						<attack></attack>
						<evidence>
							&lt;script src=
							&apos;/reverseclickjacking/jsonpendpoint?q=&amp;callback=urc_button.click#&amp;callback=callbackFunc&apos;&gt;&lt;/script&gt;</evidence>
						<otherinfo>No links have been found while there are scripts, which is an
							indication that this is a modern web application.</otherinfo>
					</instance>


					<instance>
						<uri>https://public-firing-range.appspot.com/urldom/location/hash/a.href</uri>
						<method>GET</method>
						<param></param>
						<attack></attack>
						<evidence>&lt;script&gt;
							var payload = document.location.hash.substr(1);
							var anchor = document.createElement(&quot;a&quot;);
							anchor.href = payload;
							anchor.text = &quot;Here&apos;s an anchor link&quot;;
							document.body.appendChild(anchor);

							&lt;/script&gt;</evidence>
						<otherinfo>No links have been found while there are scripts, which is an
							indication that this is a modern web application.</otherinfo>
					</instance>


					<instance>
						<uri>https://public-firing-range.appspot.com/urldom/location/hash/base.href</uri>
						<method>GET</method>
						<param></param>
						<attack></attack>
						<evidence>&lt;script&gt;
							var payload = document.location.hash.substr(1);
							var baseElement = document.createElement(&quot;base&quot;);
							baseElement.href = payload;
							document.head.appendChild(baseElement);

							var scriptTag = document.createElement(&quot;script&quot;);
							scriptTag.src = &quot;exploit.js&quot;;
							document.body.appendChild(scriptTag);

							&lt;/script&gt;</evidence>
						<otherinfo>No links have been found while there are scripts, which is an
							indication that this is a modern web application.</otherinfo>
					</instance>


					<instance>
						<uri>
							https://public-firing-range.appspot.com/urldom/location/hash/document.location</uri>
						<method>GET</method>
						<param></param>
						<attack></attack>
						<evidence>&lt;script&gt;
							var payload = document.location.hash.substr(1);
							document.location = payload;

							&lt;/script&gt;</evidence>
						<otherinfo>No links have been found while there are scripts, which is an
							indication that this is a modern web application.</otherinfo>
					</instance>


					<instance>
						<uri>https://public-firing-range.appspot.com/urldom/location/hash/embed.src</uri>
						<method>GET</method>
						<param></param>
						<attack></attack>
						<evidence>&lt;script&gt;
							var payload = document.location.hash.substr(1);
							var embedElement = document.createElement(&quot;embed&quot;);
							embedElement.src = payload;
							document.body.appendChild(embedElement);

							&lt;/script&gt;</evidence>
						<otherinfo>No links have been found while there are scripts, which is an
							indication that this is a modern web application.</otherinfo>
					</instance>


					<instance>
						<uri>https://public-firing-range.appspot.com/urldom/location/hash/fetch</uri>
						<method>GET</method>
						<param></param>
						<attack></attack>
						<evidence>&lt;script&gt;
							var payload = document.location.hash.substr(1);
							var divElement = document.createElement(&apos;div&apos;);
							var resourceUri= payload;
							fetch(resourceUri).then(
							function(response) {
							return response.text();
							}).then(function(body) {
							divElement.innerHTML = body;
							});
							document.body.appendChild(divElement);

							&lt;/script&gt;</evidence>
						<otherinfo>No links have been found while there are scripts, which is an
							indication that this is a modern web application.</otherinfo>
					</instance>


					<instance>
						<uri>
							https://public-firing-range.appspot.com/urldom/location/hash/form.action</uri>
						<method>GET</method>
						<param></param>
						<attack></attack>
						<evidence>&lt;script&gt;
							var payload = document.location.hash.substr(1);
							var formElement = document.createElement(&quot;form&quot;);
							formElement.action = payload;
							var inputElement = document.createElement(&quot;input&quot;);
							inputElement.type = &quot;submit&quot;;
							inputElement.value = &quot;Submit!&quot;;
							formElement.appendChild(inputElement);
							document.body.appendChild(formElement);

							&lt;/script&gt;</evidence>
						<otherinfo>No links have been found while there are scripts, which is an
							indication that this is a modern web application.</otherinfo>
					</instance>


					<instance>
						<uri>https://public-firing-range.appspot.com/urldom/location/hash/iframe.src</uri>
						<method>GET</method>
						<param></param>
						<attack></attack>
						<evidence>&lt;script&gt;
							var payload = document.location.hash.substr(1);
							var iframe = document.createElement(&quot;iframe&quot;);
							iframe.src = payload;
							document.body.appendChild(iframe);

							&lt;/script&gt;</evidence>
						<otherinfo>No links have been found while there are scripts, which is an
							indication that this is a modern web application.</otherinfo>
					</instance>


					<instance>
						<uri>
							https://public-firing-range.appspot.com/urldom/location/hash/input.formaction</uri>
						<method>GET</method>
						<param></param>
						<attack></attack>
						<evidence>&lt;script&gt;
							var payload = document.location.hash.substr(1);
							var form = document.createElement(&quot;form&quot;);
							var input = document.createElement(&quot;input&quot;);
							input.formAction = payload;
							input.type = &quot;submit&quot;;
							input.value = &quot;submit!&quot;;
							document.body.appendChild(form);
							form.appendChild(input);

							&lt;/script&gt;</evidence>
						<otherinfo>No links have been found while there are scripts, which is an
							indication that this is a modern web application.</otherinfo>
					</instance>


					<instance>
						<uri>https://public-firing-range.appspot.com/urldom/location/hash/link.href</uri>
						<method>GET</method>
						<param></param>
						<attack></attack>
						<evidence>&lt;script&gt;
							var payload = document.location.hash.substr(1);
							var linkElement = document.createElement(&quot;link&quot;);
							linkElement.rel = &quot;import&quot;;
							linkElement.href = payload;
							document.body.appendChild(linkElement);
							&lt;/script&gt;</evidence>
						<otherinfo>No links have been found while there are scripts, which is an
							indication that this is a modern web application.</otherinfo>
					</instance>


					<instance>
						<uri>
							https://public-firing-range.appspot.com/urldom/location/hash/object.data</uri>
						<method>GET</method>
						<param></param>
						<attack></attack>
						<evidence>&lt;script&gt;
							var payload = document.location.hash.substr(1);
							var objectElement = document.createElement(&quot;object&quot;);
							objectElement.data = payload;
							document.body.appendChild(objectElement);

							&lt;/script&gt;</evidence>
						<otherinfo>No links have been found while there are scripts, which is an
							indication that this is a modern web application.</otherinfo>
					</instance>


					<instance>
						<uri>
							https://public-firing-range.appspot.com/urldom/location/hash/param.code.value</uri>
						<method>GET</method>
						<param></param>
						<attack></attack>
						<evidence>&lt;script&gt;
							var payload = document.location.hash.substr(1);
							var objectElement = document.createElement(&quot;object&quot;);
							var paramTypeElement = document.createElement(&quot;param&quot;);
							var paramCodeElement = document.createElement(&quot;param&quot;);
							var paramAllowScriptAccessElement =
							document.createElement(&quot;param&quot;);
							paramTypeElement.name = &quot;type&quot;;
							paramTypeElement.value = &quot;application/x-shockwave-flash&quot;;
							paramAllowScriptAccessElement.name = &quot;allowScriptAccess&quot;;
							paramAllowScriptAccessElement.value = &quot;always&quot;;
							paramCodeElement.name = &quot;code&quot;;
							paramCodeElement.value = payload;
							objectElement.appendChild(paramAllowScriptAccessElement);
							objectElement.appendChild(paramTypeElement);
							objectElement.appendChild(paramCodeElement);
							document.body.appendChild(objectElement);


							&lt;/script&gt;</evidence>
						<otherinfo>No links have been found while there are scripts, which is an
							indication that this is a modern web application.</otherinfo>
					</instance>


					<instance>
						<uri>
							https://public-firing-range.appspot.com/urldom/location/hash/param.movie.value</uri>
						<method>GET</method>
						<param></param>
						<attack></attack>
						<evidence>&lt;script&gt;
							var payload = document.location.hash.substr(1);
							var objectElement = document.createElement(&quot;object&quot;);
							var paramTypeElement = document.createElement(&quot;param&quot;);
							var paramMovieElement = document.createElement(&quot;param&quot;);
							var paramAllowScriptAccessElement =
							document.createElement(&quot;param&quot;);
							paramTypeElement.name = &quot;type&quot;;
							paramTypeElement.value = &quot;application/x-shockwave-flash&quot;;
							paramAllowScriptAccessElement.name = &quot;allowScriptAccess&quot;;
							paramAllowScriptAccessElement.value = &quot;always&quot;;
							paramMovieElement.name = &quot;movie&quot;;
							paramMovieElement.value = payload;
							objectElement.appendChild(paramAllowScriptAccessElement);
							objectElement.appendChild(paramTypeElement);
							objectElement.appendChild(paramMovieElement);
							document.body.appendChild(objectElement);


							&lt;/script&gt;</evidence>
						<otherinfo>No links have been found while there are scripts, which is an
							indication that this is a modern web application.</otherinfo>
					</instance>


					<instance>
						<uri>
							https://public-firing-range.appspot.com/urldom/location/hash/param.src.value</uri>
						<method>GET</method>
						<param></param>
						<attack></attack>
						<evidence>&lt;script&gt;
							var payload = document.location.hash.substr(1);
							var objectElement = document.createElement(&quot;object&quot;);
							var paramTypeElement = document.createElement(&quot;param&quot;);
							var paramSrcElement = document.createElement(&quot;param&quot;);
							var paramAllowScriptAccessElement =
							document.createElement(&quot;param&quot;);
							paramTypeElement.name = &quot;type&quot;;
							paramTypeElement.value = &quot;application/x-shockwave-flash&quot;;
							paramAllowScriptAccessElement.name = &quot;allowScriptAccess&quot;;
							paramAllowScriptAccessElement.value = &quot;always&quot;;
							paramSrcElement.name = &quot;src&quot;;
							paramSrcElement.value = payload;
							objectElement.appendChild(paramAllowScriptAccessElement);
							objectElement.appendChild(paramTypeElement);
							objectElement.appendChild(paramSrcElement);
							document.body.appendChild(objectElement);


							&lt;/script&gt;</evidence>
						<otherinfo>No links have been found while there are scripts, which is an
							indication that this is a modern web application.</otherinfo>
					</instance>


					<instance>
						<uri>
							https://public-firing-range.appspot.com/urldom/location/hash/param.url.value</uri>
						<method>GET</method>
						<param></param>
						<attack></attack>
						<evidence>&lt;script&gt;
							var payload = document.location.hash.substr(1);
							var objectElement = document.createElement(&quot;object&quot;);
							var paramTypeElement = document.createElement(&quot;param&quot;);
							var paramUrlElement = document.createElement(&quot;param&quot;);
							var paramAllowScriptAccessElement =
							document.createElement(&quot;param&quot;);
							paramTypeElement.name = &quot;type&quot;;
							paramTypeElement.value = &quot;application/x-shockwave-flash&quot;;
							paramAllowScriptAccessElement.name = &quot;allowScriptAccess&quot;;
							paramAllowScriptAccessElement.value = &quot;always&quot;;
							paramUrlElement.name = &quot;url&quot;;
							paramUrlElement.value = payload;
							objectElement.appendChild(paramAllowScriptAccessElement);
							objectElement.appendChild(paramTypeElement);
							objectElement.appendChild(paramUrlElement);
							document.body.appendChild(objectElement);


							&lt;/script&gt;</evidence>
						<otherinfo>No links have been found while there are scripts, which is an
							indication that this is a modern web application.</otherinfo>
					</instance>


					<instance>
						<uri>
							https://public-firing-range.appspot.com/urldom/location/hash/script.href</uri>
						<method>GET</method>
						<param></param>
						<attack></attack>
						<evidence>&lt;script&gt;
							var payload = document.location.hash.substr(1);
							var xmlns = &quot;http://www.w3.org/2000/svg&quot;;
							var svgElement = document.createElementNS(xmlns,&quot;svg&quot;);
							svgElement.setAttributeNS(
							&quot;http://www.w3.org/2000/xmlns/&quot;,
							&quot;xmlns:xlink&quot;,
							&quot;http://www.w3.org/1999/xlink&quot;);
							var scriptElement = document.createElementNS(xmlns,&quot;script&quot;);
							scriptElement.setAttributeNS(
							&quot;http://www.w3.org/1999/xlink&quot;,
							&quot;xlink:href&quot;,
							location.hash.substr(1));
							svgElement.appendChild(scriptElement);
							document.body.appendChild(svgElement);

							&lt;/script&gt;</evidence>
						<otherinfo>No links have been found while there are scripts, which is an
							indication that this is a modern web application.</otherinfo>
					</instance>


					<instance>
						<uri>https://public-firing-range.appspot.com/urldom/location/hash/script.src</uri>
						<method>GET</method>
						<param></param>
						<attack></attack>
						<evidence>&lt;script&gt;
							var payload = document.location.hash.substr(1);
							var scriptElement = document.createElement(&quot;script&quot;);
							scriptElement.src = payload;
							document.body.appendChild(scriptElement);

							&lt;/script&gt;</evidence>
						<otherinfo>No links have been found while there are scripts, which is an
							indication that this is a modern web application.</otherinfo>
					</instance>


					<instance>
						<uri>
							https://public-firing-range.appspot.com/urldom/location/hash/script.src.partial_domain</uri>
						<method>GET</method>
						<param></param>
						<attack></attack>
						<evidence>&lt;script&gt;
							var payload = document.location.hash.substr(1);
							var scriptElement = document.createElement(&quot;script&quot;);
							scriptElement.src = location.origin + payload + &quot;/script.js&quot;;
							document.body.appendChild(scriptElement);

							&lt;/script&gt;</evidence>
						<otherinfo>No links have been found while there are scripts, which is an
							indication that this is a modern web application.</otherinfo>
					</instance>


					<instance>
						<uri>
							https://public-firing-range.appspot.com/urldom/location/hash/script.src.partial_path</uri>
						<method>GET</method>
						<param></param>
						<attack></attack>
						<evidence>&lt;script&gt;
							var payload = document.location.hash.substr(1);
							var scriptElement = document.createElement(&quot;script&quot;);
							scriptElement.src = &quot;/&quot; + payload;
							document.body.appendChild(scriptElement);

							&lt;/script&gt;</evidence>
						<otherinfo>No links have been found while there are scripts, which is an
							indication that this is a modern web application.</otherinfo>
					</instance>


					<instance>
						<uri>
							https://public-firing-range.appspot.com/urldom/location/hash/script.src.partial_query</uri>
						<method>GET</method>
						<param></param>
						<attack></attack>
						<evidence>&lt;script&gt;
							var payload = document.location.hash.substr(1);
							var scriptElement = document.createElement(&quot;script&quot;);
							scriptElement.src =
							location.origin + &quot;/urldom/jsonp?referrer=&quot; + payload +
							&quot;&amp;callback=helloWorld&quot;;
							document.body.appendChild(scriptElement);
							function helloWorld(data) {
							var divElement = document.createElement(&quot;div&quot;);
							divElement.textContent = data[&quot;msg&quot;];
							document.body.appendChild(divElement);
							}

							&lt;/script&gt;</evidence>
						<otherinfo>No links have been found while there are scripts, which is an
							indication that this is a modern web application.</otherinfo>
					</instance>


					<instance>
						<uri>
							https://public-firing-range.appspot.com/urldom/location/hash/window.open</uri>
						<method>GET</method>
						<param></param>
						<attack></attack>
						<evidence>&lt;script&gt;
							var payload = document.location.hash.substr(1);
							window.open(payload);

							&lt;/script&gt;</evidence>
						<otherinfo>No links have been found while there are scripts, which is an
							indication that this is a modern web application.</otherinfo>
					</instance>


					<instance>
						<uri>https://public-firing-range.appspot.com/urldom/location/hash/xhr.open</uri>
						<method>GET</method>
						<param></param>
						<attack></attack>
						<evidence>&lt;script&gt;
							var payload = document.location.hash.substr(1);
							var xhttp = new XMLHttpRequest();
							xhttp.open(&quot;GET&quot;,payload,false);
							xhttp.send();
							var div = document.createElement(&quot;div&quot;);
							div.innerHTML=xhttp.responseText;
							document.body.appendChild(div);

							&lt;/script&gt;</evidence>
						<otherinfo>No links have been found while there are scripts, which is an
							indication that this is a modern web application.</otherinfo>
					</instance>


					<instance>
						<uri>
							https://public-firing-range.appspot.com/urldom/location/search/area.href?//example.org</uri>
						<method>GET</method>
						<param></param>
						<attack></attack>
						<evidence>&lt;script&gt;
							var payload = document.location.search.substr(1);
							var area = document.createElement(&quot;area&quot;);
							area.href = payload;
							area.textContent = &quot;Here&apos;s an area element&quot;;
							document.body.appendChild(area);

							&lt;/script&gt;</evidence>
						<otherinfo>No links have been found while there are scripts, which is an
							indication that this is a modern web application.</otherinfo>
					</instance>


					<instance>
						<uri>
							https://public-firing-range.appspot.com/urldom/location/search/button.formaction?//example.org</uri>
						<method>GET</method>
						<param></param>
						<attack></attack>
						<evidence>&lt;script&gt;
							var payload = document.location.search.substr(1);
							var form = document.createElement(&quot;form&quot;);
							var button = document.createElement(&quot;button&quot;);
							button.formAction = payload;
							button.type = &quot;submit&quot;;
							button.textContent = &quot;submit!&quot;;
							document.body.appendChild(form);
							form.appendChild(button);

							&lt;/script&gt;</evidence>
						<otherinfo>No links have been found while there are scripts, which is an
							indication that this is a modern web application.</otherinfo>
					</instance>


					<instance>
						<uri>
							https://public-firing-range.appspot.com/urldom/location/search/frame.src?//example.org</uri>
						<method>GET</method>
						<param></param>
						<attack></attack>
						<evidence>&lt;script&gt;
							var payload = document.location.search.substr(1);
							var frame = document.createElement(&quot;frame&quot;);
							frame.src = payload;
							document.body.appendChild(frame);

							&lt;/script&gt;</evidence>
						<otherinfo>No links have been found while there are scripts, which is an
							indication that this is a modern web application.</otherinfo>
					</instance>


					<instance>
						<uri>
							https://public-firing-range.appspot.com/urldom/location/search/location.assign?//example.org</uri>
						<method>GET</method>
						<param></param>
						<attack></attack>
						<evidence>&lt;script&gt;
							var payload = document.location.search.substr(1);
							location.assign(payload);

							&lt;/script&gt;</evidence>
						<otherinfo>No links have been found while there are scripts, which is an
							indication that this is a modern web application.</otherinfo>
					</instance>


					<instance>
						<uri>
							https://public-firing-range.appspot.com/urldom/location/search/svg.a?//example.org</uri>
						<method>GET</method>
						<param></param>
						<attack></attack>
						<evidence>&lt;script&gt;
							var payload = document.location.search.substr(1);
							var xmlns = &quot;http://www.w3.org/2000/svg&quot;;
							var svgElement = document.createElementNS(xmlns,&quot;svg&quot;);
							svgElement.setAttribute(&quot;width&quot;,500);
							svgElement.setAttribute(&quot;height&quot;,500);
							svgElement.setAttributeNS(&quot;http://www.w3.org/2000/xmlns/&quot;,&quot;xmlns:xlink&quot;,&quot;http://www.w3.org/1999/xlink&quot;);
							var anchor = document.createElementNS(xmlns,&quot;a&quot;);
							anchor.setAttributeNS(&quot;http://www.w3.org/1999/xlink&quot;,&quot;xlink:href&quot;,payload);
							var text = document.createElementNS(xmlns,&quot;text&quot;);
							text.textContent = &quot;This is an anchor element!&quot;;
							text.setAttribute(&quot;x&quot;,60);
							text.setAttribute(&quot;y&quot;,21);
							text.setAttribute(&quot;fill&quot;,&quot;black&quot;);
							anchor.appendChild(text);
							svgElement.appendChild(anchor);
							document.body.appendChild(svgElement);

							&lt;/script&gt;</evidence>
						<otherinfo>No links have been found while there are scripts, which is an
							indication that this is a modern web application.</otherinfo>
					</instance>


					<instance>
						<uri>https://public-firing-range.appspot.com/vulnerablelibraries/jquery.html</uri>
						<method>GET</method>
						<param></param>
						<attack></attack>
						<evidence>
							&lt;script
							src=&quot;https://code.jquery.com/jquery-1.8.1.js&quot;&gt;&lt;/script&gt;</evidence>
						<otherinfo>No links have been found while there are scripts, which is an
							indication that this is a modern web application.</otherinfo>
					</instance>


					<instance>
						<uri>
							https://public-firing-range.appspot.com/angular/angular_body_raw_post/1.6.0</uri>
						<method>POST</method>
						<param></param>
						<attack></attack>
						<evidence>
							&lt;script
							src=&quot;//ajax.googleapis.com/ajax/libs/angularjs/1.6.0/angular.js&quot;&gt;&lt;/script&gt;</evidence>
						<otherinfo>No links have been found while there are scripts, which is an
							indication that this is a modern web application.</otherinfo>
					</instance>

				</instances>
				<count>172</count>
				<solution>&lt;p&gt;This is an informational alert and so no changes are
					required.&lt;/p&gt;</solution>
				<otherinfo>&lt;p&gt;No links have been found while there are scripts, which is an
					indication that this is a modern web application.&lt;/p&gt;</otherinfo>
				<reference></reference>
				<cweid>-1</cweid>
				<wascid>-1</wascid>
				<sourceid>537</sourceid>
			</alertitem>


			<alertitem>
				<pluginid>10015</pluginid>
				<alertRef>10015</alertRef>
				<alert>Re-examine Cache-control Directives</alert>
				<name>Re-examine Cache-control Directives</name>
				<riskcode>0</riskcode>
				<confidence>1</confidence>
				<riskdesc>Informational (Low)</riskdesc>
				<confidencedesc>Low</confidencedesc>
				<desc>&lt;p&gt;The cache-control header has not been set properly or is missing,
					allowing the browser and proxies to cache content. For static assets like css,
					js, or image files this might be intended, however, the resources should be
					reviewed to ensure that no sensitive content will be cached.&lt;/p&gt;</desc>
				<instances>

					<instance>
						<uri>https://public-firing-range.appspot.com</uri>
						<method>GET</method>
						<param>Cache-Control</param>
						<attack></attack>
						<evidence>public, max-age=600</evidence>
						<otherinfo></otherinfo>
					</instance>


					<instance>
						<uri>https://public-firing-range.appspot.com/</uri>
						<method>GET</method>
						<param>Cache-Control</param>
						<attack></attack>
						<evidence>public, max-age=600</evidence>
						<otherinfo></otherinfo>
					</instance>


					<instance>
						<uri>https://public-firing-range.appspot.com/address/index.html</uri>
						<method>GET</method>
						<param>Cache-Control</param>
						<attack></attack>
						<evidence>public, max-age=600</evidence>
						<otherinfo></otherinfo>
					</instance>


					<instance>
						<uri>https://public-firing-range.appspot.com/angular/index.html</uri>
						<method>GET</method>
						<param>Cache-Control</param>
						<attack></attack>
						<evidence>public, max-age=600</evidence>
						<otherinfo></otherinfo>
					</instance>


					<instance>
						<uri>https://public-firing-range.appspot.com/badscriptimport/index.html</uri>
						<method>GET</method>
						<param>Cache-Control</param>
						<attack></attack>
						<evidence>public, max-age=600</evidence>
						<otherinfo></otherinfo>
					</instance>


					<instance>
						<uri>https://public-firing-range.appspot.com/cors/index.html</uri>
						<method>GET</method>
						<param>Cache-Control</param>
						<attack></attack>
						<evidence>public, max-age=600</evidence>
						<otherinfo></otherinfo>
					</instance>


					<instance>
						<uri>https://public-firing-range.appspot.com/dom/index.html</uri>
						<method>GET</method>
						<param>Cache-Control</param>
						<attack></attack>
						<evidence>public, max-age=600</evidence>
						<otherinfo></otherinfo>
					</instance>


					<instance>
						<uri>https://public-firing-range.appspot.com/dom/javascripturi.html</uri>
						<method>GET</method>
						<param>Cache-Control</param>
						<attack></attack>
						<evidence>public, max-age=600</evidence>
						<otherinfo></otherinfo>
					</instance>


					<instance>
						<uri>https://public-firing-range.appspot.com/escape/index.html</uri>
						<method>GET</method>
						<param>Cache-Control</param>
						<attack></attack>
						<evidence>public, max-age=600</evidence>
						<otherinfo></otherinfo>
					</instance>


					<instance>
						<uri>
							https://public-firing-range.appspot.com/flashinjection/callbackIsEchoedBack?callback=func</uri>
						<method>GET</method>
						<param>Cache-Control</param>
						<attack></attack>
						<evidence></evidence>
						<otherinfo></otherinfo>
					</instance>


					<instance>
						<uri>
							https://public-firing-range.appspot.com/flashinjection/callbackParameterDoesNothing?callback=func</uri>
						<method>GET</method>
						<param>Cache-Control</param>
						<attack></attack>
						<evidence></evidence>
						<otherinfo></otherinfo>
					</instance>


					<instance>
						<uri>https://public-firing-range.appspot.com/flashinjection/index.html</uri>
						<method>GET</method>
						<param>Cache-Control</param>
						<attack></attack>
						<evidence>public, max-age=600</evidence>
						<otherinfo></otherinfo>
					</instance>


					<instance>
						<uri>https://public-firing-range.appspot.com/invalidframingconfig/index.html</uri>
						<method>GET</method>
						<param>Cache-Control</param>
						<attack></attack>
						<evidence>public, max-age=600</evidence>
						<otherinfo></otherinfo>
					</instance>


					<instance>
						<uri>https://public-firing-range.appspot.com/leakedcookie/index.html</uri>
						<method>GET</method>
						<param>Cache-Control</param>
						<attack></attack>
						<evidence>public, max-age=600</evidence>
						<otherinfo></otherinfo>
					</instance>


					<instance>
						<uri>https://public-firing-range.appspot.com/mixedcontent/index.html</uri>
						<method>GET</method>
						<param>Cache-Control</param>
						<attack></attack>
						<evidence>public, max-age=600</evidence>
						<otherinfo></otherinfo>
					</instance>


					<instance>
						<uri>https://public-firing-range.appspot.com/redirect/index.html</uri>
						<method>GET</method>
						<param>Cache-Control</param>
						<attack></attack>
						<evidence>public, max-age=600</evidence>
						<otherinfo></otherinfo>
					</instance>


					<instance>
						<uri>https://public-firing-range.appspot.com/reflected/index.html</uri>
						<method>GET</method>
						<param>Cache-Control</param>
						<attack></attack>
						<evidence>public, max-age=600</evidence>
						<otherinfo></otherinfo>
					</instance>


					<instance>
						<uri>https://public-firing-range.appspot.com/remoteinclude/index.html</uri>
						<method>GET</method>
						<param>Cache-Control</param>
						<attack></attack>
						<evidence>public, max-age=600</evidence>
						<otherinfo></otherinfo>
					</instance>


					<instance>
						<uri>https://public-firing-range.appspot.com/remoteinclude/object_hash.html</uri>
						<method>GET</method>
						<param>Cache-Control</param>
						<attack></attack>
						<evidence>public, max-age=600</evidence>
						<otherinfo></otherinfo>
					</instance>


					<instance>
						<uri>https://public-firing-range.appspot.com/remoteinclude/script_hash.html</uri>
						<method>GET</method>
						<param>Cache-Control</param>
						<attack></attack>
						<evidence>public, max-age=600</evidence>
						<otherinfo></otherinfo>
					</instance>


					<instance>
						<uri>https://public-firing-range.appspot.com/reverseclickjacking/</uri>
						<method>GET</method>
						<param>Cache-Control</param>
						<attack></attack>
						<evidence>public, max-age=600</evidence>
						<otherinfo></otherinfo>
					</instance>


					<instance>
						<uri>https://public-firing-range.appspot.com/tags/index.html</uri>
						<method>GET</method>
						<param>Cache-Control</param>
						<attack></attack>
						<evidence>public, max-age=600</evidence>
						<otherinfo></otherinfo>
					</instance>


					<instance>
						<uri>https://public-firing-range.appspot.com/urldom/index.html</uri>
						<method>GET</method>
						<param>Cache-Control</param>
						<attack></attack>
						<evidence>public, max-age=600</evidence>
						<otherinfo></otherinfo>
					</instance>


					<instance>
						<uri>https://public-firing-range.appspot.com/vulnerablelibraries/index.html</uri>
						<method>GET</method>
						<param>Cache-Control</param>
						<attack></attack>
						<evidence>public, max-age=600</evidence>
						<otherinfo></otherinfo>
					</instance>


					<instance>
						<uri>https://public-firing-range.appspot.com/vulnerablelibraries/jquery.html</uri>
						<method>GET</method>
						<param>Cache-Control</param>
						<attack></attack>
						<evidence>public, max-age=600</evidence>
						<otherinfo></otherinfo>
					</instance>

				</instances>
				<count>25</count>
				<solution>&lt;p&gt;For secure content, ensure the cache-control HTTP header is set
					with &quot;no-cache, no-store, must-revalidate&quot;. If an asset should be
					cached consider setting the directives &quot;public, max-age,
					immutable&quot;.&lt;/p&gt;</solution>
				<otherinfo></otherinfo>
				<reference>
					&lt;p&gt;https://cheatsheetseries.owasp.org/cheatsheets/Session_Management_Cheat_Sheet.html#web-content-caching&lt;/p&gt;&lt;p&gt;https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Cache-Control&lt;/p&gt;&lt;p&gt;https://grayduck.mn/2021/09/13/cache-control-recommendations/&lt;/p&gt;</reference>
				<cweid>525</cweid>
				<wascid>13</wascid>
				<sourceid>6</sourceid>
			</alertitem>


			<alertitem>
				<pluginid>10050</pluginid>
				<alertRef>10050</alertRef>
				<alert>Retrieved from Cache</alert>
				<name>Retrieved from Cache</name>
				<riskcode>0</riskcode>
				<confidence>2</confidence>
				<riskdesc>Informational (Medium)</riskdesc>
				<confidencedesc>Medium</confidencedesc>
				<desc>&lt;p&gt;The content was retrieved from a shared cache. If the response data
					is sensitive, personal or user-specific, this may result in sensitive
					information being leaked. In some cases, this may even result in a user gaining
					complete control of the session of another user, depending on the configuration
					of the caching components in use in their environment. This is primarily an
					issue where caching servers such as &quot;proxy&quot; caches are configured on
					the local network. This configuration is typically found in corporate or
					educational environments, for instance. &lt;/p&gt;</desc>
				<instances>

					<instance>
						<uri>https://public-firing-range.appspot.com</uri>
						<method>GET</method>
						<param></param>
						<attack></attack>
						<evidence>Age: 0</evidence>
						<otherinfo>The presence of the &apos;Age&apos; header indicates that that a
							HTTP/1.1 compliant caching server is in use.</otherinfo>
					</instance>


					<instance>
						<uri>https://public-firing-range.appspot.com/</uri>
						<method>GET</method>
						<param></param>
						<attack></attack>
						<evidence>Age: 1</evidence>
						<otherinfo>The presence of the &apos;Age&apos; header indicates that that a
							HTTP/1.1 compliant caching server is in use.</otherinfo>
					</instance>


					<instance>
						<uri>https://public-firing-range.appspot.com/badscriptimport/index.html</uri>
						<method>GET</method>
						<param></param>
						<attack></attack>
						<evidence>Age: 0</evidence>
						<otherinfo>The presence of the &apos;Age&apos; header indicates that that a
							HTTP/1.1 compliant caching server is in use.</otherinfo>
					</instance>


					<instance>
						<uri>https://public-firing-range.appspot.com/cors/index.html</uri>
						<method>GET</method>
						<param></param>
						<attack></attack>
						<evidence>Age: 0</evidence>
						<otherinfo>The presence of the &apos;Age&apos; header indicates that that a
							HTTP/1.1 compliant caching server is in use.</otherinfo>
					</instance>


					<instance>
						<uri>https://public-firing-range.appspot.com/dom/index.html</uri>
						<method>GET</method>
						<param></param>
						<attack></attack>
						<evidence>Age: 0</evidence>
						<otherinfo>The presence of the &apos;Age&apos; header indicates that that a
							HTTP/1.1 compliant caching server is in use.</otherinfo>
					</instance>


					<instance>
						<uri>https://public-firing-range.appspot.com/escape/index.html</uri>
						<method>GET</method>
						<param></param>
						<attack></attack>
						<evidence>Age: 0</evidence>
						<otherinfo>The presence of the &apos;Age&apos; header indicates that that a
							HTTP/1.1 compliant caching server is in use.</otherinfo>
					</instance>


					<instance>
						<uri>https://public-firing-range.appspot.com/invalidframingconfig/index.html</uri>
						<method>GET</method>
						<param></param>
						<attack></attack>
						<evidence>Age: 0</evidence>
						<otherinfo>The presence of the &apos;Age&apos; header indicates that that a
							HTTP/1.1 compliant caching server is in use.</otherinfo>
					</instance>


					<instance>
						<uri>https://public-firing-range.appspot.com/leakedcookie/index.html</uri>
						<method>GET</method>
						<param></param>
						<attack></attack>
						<evidence>Age: 0</evidence>
						<otherinfo>The presence of the &apos;Age&apos; header indicates that that a
							HTTP/1.1 compliant caching server is in use.</otherinfo>
					</instance>


					<instance>
						<uri>https://public-firing-range.appspot.com/redirect/index.html</uri>
						<method>GET</method>
						<param></param>
						<attack></attack>
						<evidence>Age: 0</evidence>
						<otherinfo>The presence of the &apos;Age&apos; header indicates that that a
							HTTP/1.1 compliant caching server is in use.</otherinfo>
					</instance>


					<instance>
						<uri>https://public-firing-range.appspot.com/reflected/index.html</uri>
						<method>GET</method>
						<param></param>
						<attack></attack>
						<evidence>Age: 0</evidence>
						<otherinfo>The presence of the &apos;Age&apos; header indicates that that a
							HTTP/1.1 compliant caching server is in use.</otherinfo>
					</instance>


					<instance>
						<uri>https://public-firing-range.appspot.com/remoteinclude/index.html</uri>
						<method>GET</method>
						<param></param>
						<attack></attack>
						<evidence>Age: 1</evidence>
						<otherinfo>The presence of the &apos;Age&apos; header indicates that that a
							HTTP/1.1 compliant caching server is in use.</otherinfo>
					</instance>


					<instance>
						<uri>https://public-firing-range.appspot.com/remoteinclude/object_hash.html</uri>
						<method>GET</method>
						<param></param>
						<attack></attack>
						<evidence>Age: 0</evidence>
						<otherinfo>The presence of the &apos;Age&apos; header indicates that that a
							HTTP/1.1 compliant caching server is in use.</otherinfo>
					</instance>


					<instance>
						<uri>https://public-firing-range.appspot.com/remoteinclude/script_hash.html</uri>
						<method>GET</method>
						<param></param>
						<attack></attack>
						<evidence>Age: 0</evidence>
						<otherinfo>The presence of the &apos;Age&apos; header indicates that that a
							HTTP/1.1 compliant caching server is in use.</otherinfo>
					</instance>


					<instance>
						<uri>https://public-firing-range.appspot.com/reverseclickjacking/</uri>
						<method>GET</method>
						<param></param>
						<attack></attack>
						<evidence>Age: 0</evidence>
						<otherinfo>The presence of the &apos;Age&apos; header indicates that that a
							HTTP/1.1 compliant caching server is in use.</otherinfo>
					</instance>


					<instance>
						<uri>https://public-firing-range.appspot.com/tags/index.html</uri>
						<method>GET</method>
						<param></param>
						<attack></attack>
						<evidence>Age: 0</evidence>
						<otherinfo>The presence of the &apos;Age&apos; header indicates that that a
							HTTP/1.1 compliant caching server is in use.</otherinfo>
					</instance>


					<instance>
						<uri>https://public-firing-range.appspot.com/urldom/index.html</uri>
						<method>GET</method>
						<param></param>
						<attack></attack>
						<evidence>Age: 0</evidence>
						<otherinfo>The presence of the &apos;Age&apos; header indicates that that a
							HTTP/1.1 compliant caching server is in use.</otherinfo>
					</instance>


					<instance>
						<uri>https://public-firing-range.appspot.com/vulnerablelibraries/index.html</uri>
						<method>GET</method>
						<param></param>
						<attack></attack>
						<evidence>Age: 0</evidence>
						<otherinfo>The presence of the &apos;Age&apos; header indicates that that a
							HTTP/1.1 compliant caching server is in use.</otherinfo>
					</instance>

				</instances>
				<count>17</count>
				<solution>&lt;p&gt;Validate that the response does not contain sensitive, personal
					or user-specific information. If it does, consider the use of the following HTTP
					response headers, to limit, or prevent the content being stored and retrieved
					from the cache by another user:&lt;/p&gt;&lt;p&gt;Cache-Control: no-cache,
					no-store, must-revalidate, private&lt;/p&gt;&lt;p&gt;Pragma:
					no-cache&lt;/p&gt;&lt;p&gt;Expires: 0&lt;/p&gt;&lt;p&gt;This configuration
					directs both HTTP 1.0 and HTTP 1.1 compliant caching servers to not store the
					response, and to not retrieve the response (without validation) from the cache,
					in response to a similar request.&lt;/p&gt;</solution>
				<otherinfo>&lt;p&gt;The presence of the &apos;Age&apos; header indicates that that a
					HTTP/1.1 compliant caching server is in use.&lt;/p&gt;</otherinfo>
				<reference>&lt;p&gt;https://tools.ietf.org/html/rfc7234&lt;/p&gt;&lt;p&gt;https://tools.ietf.org/html/rfc7231&lt;/p&gt;&lt;p&gt;http://www.w3.org/Protocols/rfc2616/rfc2616-sec13.html
					(obsoleted by rfc7234)&lt;/p&gt;</reference>
				<cweid>-1</cweid>
				<wascid>-1</wascid>
				<sourceid>6</sourceid>
			</alertitem>


			<alertitem>
				<pluginid>10031</pluginid>
				<alertRef>10031</alertRef>
				<alert>User Controllable HTML Element Attribute (Potential XSS)</alert>
				<name>User Controllable HTML Element Attribute (Potential XSS)</name>
				<riskcode>0</riskcode>
				<confidence>1</confidence>
				<riskdesc>Informational (Low)</riskdesc>
				<confidencedesc>Low</confidencedesc>
				<desc>&lt;p&gt;This check looks at user-supplied input in query string parameters
					and POST data to identify where certain HTML attribute values might be
					controlled. This provides hot-spot detection for XSS (cross-site scripting) that
					will require further review by a security analyst to determine
					exploitability.&lt;/p&gt;</desc>
				<instances>

					<instance>
						<uri>
							https://public-firing-range.appspot.com/angular/angular_body_attribute_ng/1.4.0?q=test</uri>
						<method>GET</method>
						<param>q</param>
						<attack></attack>
						<evidence></evidence>
						<otherinfo>User-controlled HTML attribute values were found. Try injecting
							special characters to see if XSS might be possible. The page at the
							following URL:
							https://public-firing-range.appspot.com/angular/angular_body_attribute_ng/1.4.0?q=test
							appears to include user input in:

							a(n) [div] tag [ng-class] attribute

							The user input found was:
							q=test

							The user-controlled value was:
							test</otherinfo>
					</instance>


					<instance>
						<uri>
							https://public-firing-range.appspot.com/angular/angular_body_attribute_non_ng_raw/1.4.0?q=test</uri>
						<method>GET</method>
						<param>q</param>
						<attack></attack>
						<evidence></evidence>
						<otherinfo>User-controlled HTML attribute values were found. Try injecting
							special characters to see if XSS might be possible. The page at the
							following URL:
							https://public-firing-range.appspot.com/angular/angular_body_attribute_non_ng_raw/1.4.0?q=test
							appears to include user input in:

							a(n) [div] tag [class] attribute

							The user input found was:
							q=test

							The user-controlled value was:
							test</otherinfo>
					</instance>


					<instance>
						<uri>https://public-firing-range.appspot.com/redirect/meta?q=/</uri>
						<method>GET</method>
						<param>q</param>
						<attack></attack>
						<evidence></evidence>
						<otherinfo>User-controlled HTML attribute values were found. Try injecting
							special characters to see if XSS might be possible. The page at the
							following URL:

							https://public-firing-range.appspot.com/redirect/meta?q=/

							appears to include user input in:

							a(n) [meta] tag [content] attribute

							The user input found was:
							q=/

							The user-controlled value was:
							0;/</otherinfo>
					</instance>


					<instance>
						<uri>
							https://public-firing-range.appspot.com/remoteinclude/parameter/object/application_x-shockwave-flash?q=https://google.com</uri>
						<method>GET</method>
						<param>q</param>
						<attack></attack>
						<evidence></evidence>
						<otherinfo>User-controlled HTML attribute values were found. Try injecting
							special characters to see if XSS might be possible. The page at the
							following URL:
							https://public-firing-range.appspot.com/remoteinclude/parameter/object/application_x-shockwave-flash?q=https://google.com
							appears to include user input in:

							a(n) [object] tag [data] attribute

							The user input found was:
							q=https://google.com

							The user-controlled value was:
							https://google.com</otherinfo>
					</instance>


					<instance>
						<uri>
							https://public-firing-range.appspot.com/remoteinclude/parameter/object_raw?q=https://google.com</uri>
						<method>GET</method>
						<param>q</param>
						<attack></attack>
						<evidence></evidence>
						<otherinfo>User-controlled HTML attribute values were found. Try injecting
							special characters to see if XSS might be possible. The page at the
							following URL:
							https://public-firing-range.appspot.com/remoteinclude/parameter/object_raw?q=https://google.com
							appears to include user input in:

							a(n) [object] tag [data] attribute

							The user input found was:
							q=https://google.com

							The user-controlled value was:
							https://google.com</otherinfo>
					</instance>


					<instance>
						<uri>
							https://public-firing-range.appspot.com/remoteinclude/parameter/script?q=http://127.0.0.2/localhost_import.js</uri>
						<method>GET</method>
						<param>q</param>
						<attack></attack>
						<evidence></evidence>
						<otherinfo>User-controlled HTML attribute values were found. Try injecting
							special characters to see if XSS might be possible. The page at the
							following URL:
							https://public-firing-range.appspot.com/remoteinclude/parameter/script?q=http://127.0.0.2/localhost_import.js
							appears to include user input in:

							a(n) [script] tag [src] attribute

							The user input found was:
							q=http://127.0.0.2/localhost_import.js

							The user-controlled value was:
							http://127.0.0.2/localhost_import.js</otherinfo>
					</instance>


					<instance>
						<uri>
							https://public-firing-range.appspot.com/remoteinclude/parameter/script?q=http://192.168.1.2/private_network_import.js</uri>
						<method>GET</method>
						<param>q</param>
						<attack></attack>
						<evidence></evidence>
						<otherinfo>User-controlled HTML attribute values were found. Try injecting
							special characters to see if XSS might be possible. The page at the
							following URL:
							https://public-firing-range.appspot.com/remoteinclude/parameter/script?q=http://192.168.1.2/private_network_import.js
							appears to include user input in:

							a(n) [script] tag [src] attribute

							The user input found was:
							q=http://192.168.1.2/private_network_import.js

							The user-controlled value was:
							http://192.168.1.2/private_network_import.js</otherinfo>
					</instance>


					<instance>
						<uri>
							https://public-firing-range.appspot.com/remoteinclude/parameter/script?q=http://g00gle.com/typosquatting_domain.js</uri>
						<method>GET</method>
						<param>q</param>
						<attack></attack>
						<evidence></evidence>
						<otherinfo>User-controlled HTML attribute values were found. Try injecting
							special characters to see if XSS might be possible. The page at the
							following URL:
							https://public-firing-range.appspot.com/remoteinclude/parameter/script?q=http://g00gle.com/typosquatting_domain.js
							appears to include user input in:

							a(n) [script] tag [src] attribute

							The user input found was:
							q=http://g00gle.com/typosquatting_domain.js

							The user-controlled value was:
							http://g00gle.com/typosquatting_domain.js</otherinfo>
					</instance>


					<instance>
						<uri>
							https://public-firing-range.appspot.com/remoteinclude/parameter/script?q=https://google.com</uri>
						<method>GET</method>
						<param>q</param>
						<attack></attack>
						<evidence></evidence>
						<otherinfo>User-controlled HTML attribute values were found. Try injecting
							special characters to see if XSS might be possible. The page at the
							following URL:
							https://public-firing-range.appspot.com/remoteinclude/parameter/script?q=https://google.com
							appears to include user input in:

							a(n) [script] tag [src] attribute

							The user input found was:
							q=https://google.com

							The user-controlled value was:
							https://google.com</otherinfo>
					</instance>

				</instances>
				<count>9</count>
				<solution>&lt;p&gt;Validate all input and sanitize output it before writing to any
					HTML attributes.&lt;/p&gt;</solution>
				<otherinfo>&lt;p&gt;User-controlled HTML attribute values were found. Try injecting
					special characters to see if XSS might be possible. The page at the following
					URL:&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;https://public-firing-range.appspot.com/angular/angular_body_attribute_ng/1.4.0?q=test&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;appears
					to include user input in: &lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;a(n) [div] tag
					[ng-class] attribute &lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;The user input found
					was:&lt;/p&gt;&lt;p&gt;q=test&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;The
					user-controlled value was:&lt;/p&gt;&lt;p&gt;test&lt;/p&gt;</otherinfo>
				<reference>
					&lt;p&gt;http://websecuritytool.codeplex.com/wikipage?title=Checks#user-controlled-html-attribute&lt;/p&gt;</reference>
				<cweid>20</cweid>
				<wascid>20</wascid>
				<sourceid>474</sourceid>
			</alertitem>


			<alertitem>
				<pluginid>10043</pluginid>
				<alertRef>10043</alertRef>
				<alert>User Controllable JavaScript Event (XSS)</alert>
				<name>User Controllable JavaScript Event (XSS)</name>
				<riskcode>0</riskcode>
				<confidence>1</confidence>
				<riskdesc>Informational (Low)</riskdesc>
				<confidencedesc>Low</confidencedesc>
				<desc>&lt;p&gt;This check looks at user-supplied input in query string parameters
					and POST data to identify where certain HTML attribute values might be
					controlled. This provides hot-spot detection for XSS (cross-site scripting) that
					will require further review by a security analyst to determine exploitability.
					&lt;/p&gt;</desc>
				<instances>

					<instance>
						<uri>
							https://public-firing-range.appspot.com/reflected/escapedparameter/js_eventhandler_quoted/DOUBLE_QUOTED_ATTRIBUTE?q=a</uri>
						<method>GET</method>
						<param>q</param>
						<attack></attack>
						<evidence></evidence>
						<otherinfo>User-controlled javascript event(s) was found. Exploitability
							will need to be manually determined. The page at the following URL:
							https://public-firing-range.appspot.com/reflected/escapedparameter/js_eventhandler_quoted/DOUBLE_QUOTED_ATTRIBUTE?q=a&quot;
							includes the following Javascript event which may be
							attacker-controllable:

							User-input was found in the following data of an [onclick] event:
							a

							The user input was:
							a</otherinfo>
					</instance>


					<instance>
						<uri>
							https://public-firing-range.appspot.com/reflected/escapedparameter/js_eventhandler_singlequoted/SINGLE_QUOTED_ATTRIBUTE?q=a</uri>
						<method>GET</method>
						<param>q</param>
						<attack></attack>
						<evidence></evidence>
						<otherinfo>User-controlled javascript event(s) was found. Exploitability
							will need to be manually determined. The page at the following URL:
							https://public-firing-range.appspot.com/reflected/escapedparameter/js_eventhandler_singlequoted/SINGLE_QUOTED_ATTRIBUTE?q=a&quot;
							includes the following Javascript event which may be
							attacker-controllable:

							User-input was found in the following data of an [onclick] event:
							a

							The user input was:
							a</otherinfo>
					</instance>


					<instance>
						<uri>
							https://public-firing-range.appspot.com/reflected/escapedparameter/js_eventhandler_unquoted/UNQUOTED_ATTRIBUTE?q=a</uri>
						<method>GET</method>
						<param>q</param>
						<attack></attack>
						<evidence></evidence>
						<otherinfo>User-controlled javascript event(s) was found. Exploitability
							will need to be manually determined. The page at the following URL:
							https://public-firing-range.appspot.com/reflected/escapedparameter/js_eventhandler_unquoted/UNQUOTED_ATTRIBUTE?q=a&quot;
							includes the following Javascript event which may be
							attacker-controllable:

							User-input was found in the following data of an [onclick] event:
							a

							The user input was:
							a</otherinfo>
					</instance>

				</instances>
				<count>3</count>
				<solution>&lt;p&gt;Validate all input and sanitize output it before writing to any
					Javascript on* events.&lt;/p&gt;</solution>
				<otherinfo>&lt;p&gt;User-controlled javascript event(s) was found. Exploitability
					will need to be manually determined. The page at the following
					URL:&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;https://public-firing-range.appspot.com/reflected/escapedparameter/js_eventhandler_quoted/DOUBLE_QUOTED_ATTRIBUTE?q=a&quot;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;includes
					the following Javascript event which may be attacker-controllable:
					&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;User-input was found in the following data
					of an [onclick]
					event:&lt;/p&gt;&lt;p&gt;a&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;The user input
					was:&lt;/p&gt;&lt;p&gt;a&lt;/p&gt;</otherinfo>
				<reference>
					&lt;p&gt;http://websecuritytool.codeplex.com/wikipage?title=Checks#user-javascript-event&lt;/p&gt;</reference>
				<cweid>20</cweid>
				<wascid>20</wascid>
				<sourceid>640</sourceid>
			</alertitem>

		</alerts>
	</site>

</OWASPZAPReport>