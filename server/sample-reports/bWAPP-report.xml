<?xml version="1.0"?>
<OWASPZAPReport programName="OWASP ZAP" version="2.13.0" generated="Mon, 24 Jul 2023 06:45:54">
	
		<site name="http://lab.awh.zdresearch.com" host="lab.awh.zdresearch.com" port="80" ssl="false">
			<alerts>
				
					<alertitem>
						<pluginid>10202</pluginid>
						<alertRef>10202</alertRef>
						<alert>Absence of Anti-CSRF Tokens</alert>
						<name>Absence of Anti-CSRF Tokens</name>
						<riskcode>2</riskcode>
						<confidence>1</confidence>
						<riskdesc>Medium (Low)</riskdesc>
						<confidencedesc>Low</confidencedesc>
						<desc>&lt;p&gt;No Anti-CSRF tokens were found in a HTML submission form.&lt;/p&gt;&lt;p&gt;A cross-site request forgery is an attack that involves forcing a victim to send an HTTP request to a target destination without their knowledge or intent in order to perform an action as the victim. The underlying cause is application functionality using predictable URL/form actions in a repeatable way. The nature of the attack is that CSRF exploits the trust that a web site has for a user. By contrast, cross-site scripting (XSS) exploits the trust that a user has for a web site. Like XSS, CSRF attacks are not necessarily cross-site, but they can be. Cross-site request forgery is also known as CSRF, XSRF, one-click attack, session riding, confused deputy, and sea surf.&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;CSRF attacks are effective in a number of situations, including:&lt;/p&gt;&lt;p&gt;    * The victim has an active session on the target site.&lt;/p&gt;&lt;p&gt;    * The victim is authenticated via HTTP auth on the target site.&lt;/p&gt;&lt;p&gt;    * The victim is on the same local network as the target site.&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;CSRF has primarily been used to perform an action against a target site using the victim&apos;s privileges, but recent techniques have been discovered to disclose information by gaining access to the response. The risk of information disclosure is dramatically increased when the target site is vulnerable to XSS, because XSS can be used as a platform for CSRF, allowing the attack to operate within the bounds of the same-origin policy.&lt;/p&gt;</desc>
						<instances>
							
								<instance>
									<uri>http://lab.awh.zdresearch.com/chapter2/bWAPP/bWAPP/login.php</uri>
									<method>GET</method>
									<param></param>
									<attack></attack>
									<evidence>&lt;form action=&quot;/chapter2/bWAPP/bWAPP/login.php&quot; method=&quot;POST&quot;&gt;</evidence>
									<otherinfo>No known Anti-CSRF token [anticsrf, CSRFToken, __RequestVerificationToken, csrfmiddlewaretoken, authenticity_token, OWASP_CSRFTOKEN, anoncsrf, csrf_token, _csrf, _csrfSecret, __csrf_magic, CSRF, _token, _csrf_token] was found in the following HTML form: [Form 1: &quot;login&quot; &quot;password&quot; ].</otherinfo>
								</instance>
							
							
								<instance>
									<uri>http://lab.awh.zdresearch.com/chapter2/bWAPP/bWAPP/user_new.php</uri>
									<method>GET</method>
									<param></param>
									<attack></attack>
									<evidence>&lt;form action=&quot;/chapter2/bWAPP/bWAPP/user_new.php&quot; method=&quot;POST&quot;&gt;</evidence>
									<otherinfo>No known Anti-CSRF token [anticsrf, CSRFToken, __RequestVerificationToken, csrfmiddlewaretoken, authenticity_token, OWASP_CSRFTOKEN, anoncsrf, csrf_token, _csrf, _csrfSecret, __csrf_magic, CSRF, _token, _csrf_token] was found in the following HTML form: [Form 1: &quot;email&quot; &quot;login&quot; &quot;mail_activation&quot; &quot;password&quot; &quot;password_conf&quot; &quot;secret&quot; ].</otherinfo>
								</instance>
							
							
								<instance>
									<uri>http://lab.awh.zdresearch.com/chapter2/joomla3.0.2/</uri>
									<method>GET</method>
									<param></param>
									<attack></attack>
									<evidence>&lt;form action=&quot;/chapter2/joomla3.0.2/index.php&quot; method=&quot;post&quot; id=&quot;login-form&quot; class=&quot;form-inline&quot;&gt;</evidence>
									<otherinfo>No known Anti-CSRF token [anticsrf, CSRFToken, __RequestVerificationToken, csrfmiddlewaretoken, authenticity_token, OWASP_CSRFTOKEN, anoncsrf, csrf_token, _csrf, _csrfSecret, __csrf_magic, CSRF, _token, _csrf_token] was found in the following HTML form: [Form 1: &quot;191ca0ff1399595d763f44b8d96ac7a3&quot; &quot;modlgn-passwd&quot; &quot;modlgn-remember&quot; &quot;modlgn-username&quot; &quot;option&quot; &quot;return&quot; &quot;task&quot; ].</otherinfo>
								</instance>
							
							
								<instance>
									<uri>http://lab.awh.zdresearch.com/chapter2/mutillidae/</uri>
									<method>GET</method>
									<param></param>
									<attack></attack>
									<evidence>&lt;form action=&quot;https://www.paypal.com/cgi-bin/webscr&quot; method=&quot;post&quot; target=&quot;_blank&quot;&gt;</evidence>
									<otherinfo>No known Anti-CSRF token [anticsrf, CSRFToken, __RequestVerificationToken, csrfmiddlewaretoken, authenticity_token, OWASP_CSRFTOKEN, anoncsrf, csrf_token, _csrf, _csrfSecret, __csrf_magic, CSRF, _token, _csrf_token] was found in the following HTML form: [Form 1: &quot;cmd&quot; &quot;hosted_button_id&quot; &quot;submit&quot; ].</otherinfo>
								</instance>
							
							
								<instance>
									<uri>http://lab.awh.zdresearch.com/chapter2/phpmyfaq/</uri>
									<method>GET</method>
									<param></param>
									<attack></attack>
									<evidence>&lt;form role=&quot;search&quot; id=&quot;search&quot; action=&quot;?sid=1&amp;amp;lang=en&amp;amp;action=search&quot; method=&quot;get&quot;&gt;</evidence>
									<otherinfo>No known Anti-CSRF token [anticsrf, CSRFToken, __RequestVerificationToken, csrfmiddlewaretoken, authenticity_token, OWASP_CSRFTOKEN, anoncsrf, csrf_token, _csrf, _csrfSecret, __csrf_magic, CSRF, _token, _csrf_token] was found in the following HTML form: [Form 1: &quot;action&quot; &quot;searchbox&quot; ].</otherinfo>
								</instance>
							
							
								<instance>
									<uri>http://lab.awh.zdresearch.com/chapter2/phpmyfaq/</uri>
									<method>GET</method>
									<param></param>
									<attack></attack>
									<evidence>&lt;form action=&quot;?sid=1&quot; method=&quot;post&quot; class=&quot;pull-right&quot; accept-charset=&quot;utf-8&quot;&gt;</evidence>
									<otherinfo>No known Anti-CSRF token [anticsrf, CSRFToken, __RequestVerificationToken, csrfmiddlewaretoken, authenticity_token, OWASP_CSRFTOKEN, anoncsrf, csrf_token, _csrf, _csrfSecret, __csrf_magic, CSRF, _token, _csrf_token] was found in the following HTML form: [Form 2: &quot;action&quot; ].</otherinfo>
								</instance>
							
							
								<instance>
									<uri>http://lab.awh.zdresearch.com/chapter2/xvwa/</uri>
									<method>GET</method>
									<param></param>
									<attack></attack>
									<evidence>&lt;form class=&apos;form&apos; method=&apos;POST&apos; id=&apos;formLogin&apos; action=&apos;/chapter2/xvwa/login.php&apos;&gt;</evidence>
									<otherinfo>No known Anti-CSRF token [anticsrf, CSRFToken, __RequestVerificationToken, csrfmiddlewaretoken, authenticity_token, OWASP_CSRFTOKEN, anoncsrf, csrf_token, _csrf, _csrfSecret, __csrf_magic, CSRF, _token, _csrf_token] was found in the following HTML form: [Form 1: &quot;password&quot; &quot;username&quot; ].</otherinfo>
								</instance>
							
							
								<instance>
									<uri>http://lab.awh.zdresearch.com/chapter2/xvwa/instruction.php</uri>
									<method>GET</method>
									<param></param>
									<attack></attack>
									<evidence>&lt;form class=&apos;form&apos; method=&apos;POST&apos; id=&apos;formLogin&apos; action=&apos;/chapter2/xvwa/login.php&apos;&gt;</evidence>
									<otherinfo>No known Anti-CSRF token [anticsrf, CSRFToken, __RequestVerificationToken, csrfmiddlewaretoken, authenticity_token, OWASP_CSRFTOKEN, anoncsrf, csrf_token, _csrf, _csrfSecret, __csrf_magic, CSRF, _token, _csrf_token] was found in the following HTML form: [Form 1: &quot;password&quot; &quot;username&quot; ].</otherinfo>
								</instance>
							
							
								<instance>
									<uri>http://lab.awh.zdresearch.com/chapter2/xvwa/setup/</uri>
									<method>GET</method>
									<param></param>
									<attack></attack>
									<evidence>&lt;form class=&apos;form&apos; method=&apos;POST&apos; id=&apos;formLogin&apos; action=&apos;/chapter2/xvwa/login.php&apos;&gt;</evidence>
									<otherinfo>No known Anti-CSRF token [anticsrf, CSRFToken, __RequestVerificationToken, csrfmiddlewaretoken, authenticity_token, OWASP_CSRFTOKEN, anoncsrf, csrf_token, _csrf, _csrfSecret, __csrf_magic, CSRF, _token, _csrf_token] was found in the following HTML form: [Form 1: &quot;password&quot; &quot;username&quot; ].</otherinfo>
								</instance>
							
							
								<instance>
									<uri>http://lab.awh.zdresearch.com/chapter2/xvwa/setup/</uri>
									<method>GET</method>
									<param></param>
									<attack></attack>
									<evidence>&lt;form method=&apos;get&apos; action=&apos;&apos;&gt;</evidence>
									<otherinfo>No known Anti-CSRF token [anticsrf, CSRFToken, __RequestVerificationToken, csrfmiddlewaretoken, authenticity_token, OWASP_CSRFTOKEN, anoncsrf, csrf_token, _csrf, _csrfSecret, __csrf_magic, CSRF, _token, _csrf_token] was found in the following HTML form: [Form 2: &quot;&quot; ].</otherinfo>
								</instance>
							
							
								<instance>
									<uri>http://lab.awh.zdresearch.com/chapter2/bWAPP/bWAPP/login.php</uri>
									<method>POST</method>
									<param></param>
									<attack></attack>
									<evidence>&lt;form action=&quot;/chapter2/bWAPP/bWAPP/login.php&quot; method=&quot;POST&quot;&gt;</evidence>
									<otherinfo>No known Anti-CSRF token [anticsrf, CSRFToken, __RequestVerificationToken, csrfmiddlewaretoken, authenticity_token, OWASP_CSRFTOKEN, anoncsrf, csrf_token, _csrf, _csrfSecret, __csrf_magic, CSRF, _token, _csrf_token] was found in the following HTML form: [Form 1: &quot;login&quot; &quot;password&quot; ].</otherinfo>
								</instance>
							
							
								<instance>
									<uri>http://lab.awh.zdresearch.com/chapter2/bWAPP/bWAPP/user_new.php</uri>
									<method>POST</method>
									<param></param>
									<attack></attack>
									<evidence>&lt;form action=&quot;/chapter2/bWAPP/bWAPP/user_new.php&quot; method=&quot;POST&quot;&gt;</evidence>
									<otherinfo>No known Anti-CSRF token [anticsrf, CSRFToken, __RequestVerificationToken, csrfmiddlewaretoken, authenticity_token, OWASP_CSRFTOKEN, anoncsrf, csrf_token, _csrf, _csrfSecret, __csrf_magic, CSRF, _token, _csrf_token] was found in the following HTML form: [Form 1: &quot;email&quot; &quot;login&quot; &quot;mail_activation&quot; &quot;password&quot; &quot;password_conf&quot; &quot;secret&quot; ].</otherinfo>
								</instance>
							
						</instances>
						<count>12</count>
						<solution>&lt;p&gt;Phase: Architecture and Design&lt;/p&gt;&lt;p&gt;Use a vetted library or framework that does not allow this weakness to occur or provides constructs that make this weakness easier to avoid.&lt;/p&gt;&lt;p&gt;For example, use anti-CSRF packages such as the OWASP CSRFGuard.&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;Phase: Implementation&lt;/p&gt;&lt;p&gt;Ensure that your application is free of cross-site scripting issues, because most CSRF defenses can be bypassed using attacker-controlled script.&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;Phase: Architecture and Design&lt;/p&gt;&lt;p&gt;Generate a unique nonce for each form, place the nonce into the form, and verify the nonce upon receipt of the form. Be sure that the nonce is not predictable (CWE-330).&lt;/p&gt;&lt;p&gt;Note that this can be bypassed using XSS.&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;Identify especially dangerous operations. When the user performs a dangerous operation, send a separate confirmation request to ensure that the user intended to perform that operation.&lt;/p&gt;&lt;p&gt;Note that this can be bypassed using XSS.&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;Use the ESAPI Session Management control.&lt;/p&gt;&lt;p&gt;This control includes a component for CSRF.&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;Do not use the GET method for any request that triggers a state change.&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;Phase: Implementation&lt;/p&gt;&lt;p&gt;Check the HTTP Referer header to see if the request originated from an expected page. This could break legitimate functionality, because users or proxies may have disabled sending the Referer for privacy reasons.&lt;/p&gt;</solution>
						<otherinfo>&lt;p&gt;No known Anti-CSRF token [anticsrf, CSRFToken, __RequestVerificationToken, csrfmiddlewaretoken, authenticity_token, OWASP_CSRFTOKEN, anoncsrf, csrf_token, _csrf, _csrfSecret, __csrf_magic, CSRF, _token, _csrf_token] was found in the following HTML form: [Form 1: &quot;login&quot; &quot;password&quot; ].&lt;/p&gt;</otherinfo>
						<reference>&lt;p&gt;http://projects.webappsec.org/Cross-Site-Request-Forgery&lt;/p&gt;&lt;p&gt;http://cwe.mitre.org/data/definitions/352.html&lt;/p&gt;</reference>
						<cweid>352</cweid>
						<wascid>9</wascid>
						<sourceid>1</sourceid>
					</alertitem>
				
				
					<alertitem>
						<pluginid>90022</pluginid>
						<alertRef>90022</alertRef>
						<alert>Application Error Disclosure</alert>
						<name>Application Error Disclosure</name>
						<riskcode>2</riskcode>
						<confidence>2</confidence>
						<riskdesc>Medium (Medium)</riskdesc>
						<confidencedesc>Medium</confidencedesc>
						<desc>&lt;p&gt;This page contains an error/warning message that may disclose sensitive information like the location of the file that produced the unhandled exception. This information can be used to launch further attacks against the web application. The alert could be a false positive if the error message is found inside a documentation page.&lt;/p&gt;</desc>
						<instances>
							
								<instance>
									<uri>http://lab.awh.zdresearch.com/chapter1/</uri>
									<method>GET</method>
									<param></param>
									<attack></attack>
									<evidence>Parent Directory</evidence>
									<otherinfo></otherinfo>
								</instance>
							
							
								<instance>
									<uri>http://lab.awh.zdresearch.com/chapter2/</uri>
									<method>GET</method>
									<param></param>
									<attack></attack>
									<evidence>Parent Directory</evidence>
									<otherinfo></otherinfo>
								</instance>
							
							
								<instance>
									<uri>http://lab.awh.zdresearch.com/chapter2/?C=M;O=A</uri>
									<method>GET</method>
									<param></param>
									<attack></attack>
									<evidence>Parent Directory</evidence>
									<otherinfo></otherinfo>
								</instance>
							
							
								<instance>
									<uri>http://lab.awh.zdresearch.com/chapter2/?C=N;O=D</uri>
									<method>GET</method>
									<param></param>
									<attack></attack>
									<evidence>Parent Directory</evidence>
									<otherinfo></otherinfo>
								</instance>
							
							
								<instance>
									<uri>http://lab.awh.zdresearch.com/chapter2/bWAPP/</uri>
									<method>GET</method>
									<param></param>
									<attack></attack>
									<evidence>Parent Directory</evidence>
									<otherinfo></otherinfo>
								</instance>
							
							
								<instance>
									<uri>http://lab.awh.zdresearch.com/chapter3/</uri>
									<method>GET</method>
									<param></param>
									<attack></attack>
									<evidence>Parent Directory</evidence>
									<otherinfo></otherinfo>
								</instance>
							
							
								<instance>
									<uri>http://lab.awh.zdresearch.com/chapter4/</uri>
									<method>GET</method>
									<param></param>
									<attack></attack>
									<evidence>Parent Directory</evidence>
									<otherinfo></otherinfo>
								</instance>
							
							
								<instance>
									<uri>http://lab.awh.zdresearch.com/chapter5/</uri>
									<method>GET</method>
									<param></param>
									<attack></attack>
									<evidence>Parent Directory</evidence>
									<otherinfo></otherinfo>
								</instance>
							
							
								<instance>
									<uri>http://lab.awh.zdresearch.com/chapter6/</uri>
									<method>GET</method>
									<param></param>
									<attack></attack>
									<evidence>Parent Directory</evidence>
									<otherinfo></otherinfo>
								</instance>
							
							
								<instance>
									<uri>http://lab.awh.zdresearch.com/chapter7/</uri>
									<method>GET</method>
									<param></param>
									<attack></attack>
									<evidence>Parent Directory</evidence>
									<otherinfo></otherinfo>
								</instance>
							
							
								<instance>
									<uri>http://lab.awh.zdresearch.com/chapter8/</uri>
									<method>GET</method>
									<param></param>
									<attack></attack>
									<evidence>Parent Directory</evidence>
									<otherinfo></otherinfo>
								</instance>
							
							
								<instance>
									<uri>http://lab.awh.zdresearch.com/chapter9/</uri>
									<method>GET</method>
									<param></param>
									<attack></attack>
									<evidence>Parent Directory</evidence>
									<otherinfo></otherinfo>
								</instance>
							
						</instances>
						<count>12</count>
						<solution>&lt;p&gt;Review the source code of this page. Implement custom error pages. Consider implementing a mechanism to provide a unique error reference/identifier to the client (browser) while logging the details on the server side and not exposing them to the user.&lt;/p&gt;</solution>
						<otherinfo></otherinfo>
						<reference></reference>
						<cweid>200</cweid>
						<wascid>13</wascid>
						<sourceid>128</sourceid>
					</alertitem>
				
				
					<alertitem>
						<pluginid>10055</pluginid>
						<alertRef>10055-4</alertRef>
						<alert>CSP: Wildcard Directive</alert>
						<name>CSP: Wildcard Directive</name>
						<riskcode>2</riskcode>
						<confidence>3</confidence>
						<riskdesc>Medium (High)</riskdesc>
						<confidencedesc>High</confidencedesc>
						<desc>&lt;p&gt;Content Security Policy (CSP) is an added layer of security that helps to detect and mitigate certain types of attacks. Including (but not limited to) Cross Site Scripting (XSS), and data injection attacks. These attacks are used for everything from data theft to site defacement or distribution of malware. CSP provides a set of standard HTTP headers that allow website owners to declare approved sources of content that browsers should be allowed to load on that page &#x2014; covered types are JavaScript, CSS, HTML frames, fonts, images and embeddable objects such as Java applets, ActiveX, audio and video files.&lt;/p&gt;</desc>
						<instances>
							
								<instance>
									<uri>http://lab.awh.zdresearch.com/chapter5/CSP-policy.html</uri>
									<method>GET</method>
									<param>content-security-policy</param>
									<attack></attack>
									<evidence>form-action http://google.com; img-src http://*;</evidence>
									<otherinfo>The following directives either allow wildcard sources (or ancestors), are not defined, or are overly broadly defined: 
script-src, style-src, img-src, connect-src, frame-src, font-src, media-src, object-src, manifest-src, worker-src, prefetch-src</otherinfo>
								</instance>
							
						</instances>
						<count>1</count>
						<solution>&lt;p&gt;Ensure that your web server, application server, load balancer, etc. is properly configured to set the Content-Security-Policy header.&lt;/p&gt;</solution>
						<otherinfo>&lt;p&gt;The following directives either allow wildcard sources (or ancestors), are not defined, or are overly broadly defined: &lt;/p&gt;&lt;p&gt;script-src, style-src, img-src, connect-src, frame-src, font-src, media-src, object-src, manifest-src, worker-src, prefetch-src&lt;/p&gt;</otherinfo>
						<reference>&lt;p&gt;http://www.w3.org/TR/CSP2/&lt;/p&gt;&lt;p&gt;http://www.w3.org/TR/CSP/&lt;/p&gt;&lt;p&gt;http://caniuse.com/#search=content+security+policy&lt;/p&gt;&lt;p&gt;http://content-security-policy.com/&lt;/p&gt;&lt;p&gt;https://github.com/shapesecurity/salvation&lt;/p&gt;&lt;p&gt;https://developers.google.com/web/fundamentals/security/csp#policy_applies_to_a_wide_variety_of_resources&lt;/p&gt;</reference>
						<cweid>693</cweid>
						<wascid>15</wascid>
						<sourceid>858</sourceid>
					</alertitem>
				
				
					<alertitem>
						<pluginid>10055</pluginid>
						<alertRef>10055-5</alertRef>
						<alert>CSP: script-src unsafe-inline</alert>
						<name>CSP: script-src unsafe-inline</name>
						<riskcode>2</riskcode>
						<confidence>3</confidence>
						<riskdesc>Medium (High)</riskdesc>
						<confidencedesc>High</confidencedesc>
						<desc>&lt;p&gt;Content Security Policy (CSP) is an added layer of security that helps to detect and mitigate certain types of attacks. Including (but not limited to) Cross Site Scripting (XSS), and data injection attacks. These attacks are used for everything from data theft to site defacement or distribution of malware. CSP provides a set of standard HTTP headers that allow website owners to declare approved sources of content that browsers should be allowed to load on that page &#x2014; covered types are JavaScript, CSS, HTML frames, fonts, images and embeddable objects such as Java applets, ActiveX, audio and video files.&lt;/p&gt;</desc>
						<instances>
							
								<instance>
									<uri>http://lab.awh.zdresearch.com/chapter5/CSP-policy.html</uri>
									<method>GET</method>
									<param>Content-Security-Policy</param>
									<attack></attack>
									<evidence>form-action http://google.com; img-src http://*;</evidence>
									<otherinfo>script-src includes unsafe-inline.</otherinfo>
								</instance>
							
						</instances>
						<count>1</count>
						<solution>&lt;p&gt;Ensure that your web server, application server, load balancer, etc. is properly configured to set the Content-Security-Policy header.&lt;/p&gt;</solution>
						<otherinfo>&lt;p&gt;script-src includes unsafe-inline.&lt;/p&gt;</otherinfo>
						<reference>&lt;p&gt;http://www.w3.org/TR/CSP2/&lt;/p&gt;&lt;p&gt;http://www.w3.org/TR/CSP/&lt;/p&gt;&lt;p&gt;http://caniuse.com/#search=content+security+policy&lt;/p&gt;&lt;p&gt;http://content-security-policy.com/&lt;/p&gt;&lt;p&gt;https://github.com/shapesecurity/salvation&lt;/p&gt;&lt;p&gt;https://developers.google.com/web/fundamentals/security/csp#policy_applies_to_a_wide_variety_of_resources&lt;/p&gt;</reference>
						<cweid>693</cweid>
						<wascid>15</wascid>
						<sourceid>858</sourceid>
					</alertitem>
				
				
					<alertitem>
						<pluginid>10055</pluginid>
						<alertRef>10055-6</alertRef>
						<alert>CSP: style-src unsafe-inline</alert>
						<name>CSP: style-src unsafe-inline</name>
						<riskcode>2</riskcode>
						<confidence>3</confidence>
						<riskdesc>Medium (High)</riskdesc>
						<confidencedesc>High</confidencedesc>
						<desc>&lt;p&gt;Content Security Policy (CSP) is an added layer of security that helps to detect and mitigate certain types of attacks. Including (but not limited to) Cross Site Scripting (XSS), and data injection attacks. These attacks are used for everything from data theft to site defacement or distribution of malware. CSP provides a set of standard HTTP headers that allow website owners to declare approved sources of content that browsers should be allowed to load on that page &#x2014; covered types are JavaScript, CSS, HTML frames, fonts, images and embeddable objects such as Java applets, ActiveX, audio and video files.&lt;/p&gt;</desc>
						<instances>
							
								<instance>
									<uri>http://lab.awh.zdresearch.com/chapter5/CSP-policy.html</uri>
									<method>GET</method>
									<param>Content-Security-Policy</param>
									<attack></attack>
									<evidence>form-action http://google.com; img-src http://*;</evidence>
									<otherinfo>style-src includes unsafe-inline.</otherinfo>
								</instance>
							
						</instances>
						<count>1</count>
						<solution>&lt;p&gt;Ensure that your web server, application server, load balancer, etc. is properly configured to set the Content-Security-Policy header.&lt;/p&gt;</solution>
						<otherinfo>&lt;p&gt;style-src includes unsafe-inline.&lt;/p&gt;</otherinfo>
						<reference>&lt;p&gt;http://www.w3.org/TR/CSP2/&lt;/p&gt;&lt;p&gt;http://www.w3.org/TR/CSP/&lt;/p&gt;&lt;p&gt;http://caniuse.com/#search=content+security+policy&lt;/p&gt;&lt;p&gt;http://content-security-policy.com/&lt;/p&gt;&lt;p&gt;https://github.com/shapesecurity/salvation&lt;/p&gt;&lt;p&gt;https://developers.google.com/web/fundamentals/security/csp#policy_applies_to_a_wide_variety_of_resources&lt;/p&gt;</reference>
						<cweid>693</cweid>
						<wascid>15</wascid>
						<sourceid>858</sourceid>
					</alertitem>
				
				
					<alertitem>
						<pluginid>10038</pluginid>
						<alertRef>10038-1</alertRef>
						<alert>Content Security Policy (CSP) Header Not Set</alert>
						<name>Content Security Policy (CSP) Header Not Set</name>
						<riskcode>2</riskcode>
						<confidence>3</confidence>
						<riskdesc>Medium (High)</riskdesc>
						<confidencedesc>High</confidencedesc>
						<desc>&lt;p&gt;Content Security Policy (CSP) is an added layer of security that helps to detect and mitigate certain types of attacks, including Cross Site Scripting (XSS) and data injection attacks. These attacks are used for everything from data theft to site defacement or distribution of malware. CSP provides a set of standard HTTP headers that allow website owners to declare approved sources of content that browsers should be allowed to load on that page &#x2014; covered types are JavaScript, CSS, HTML frames, fonts, images and embeddable objects such as Java applets, ActiveX, audio and video files.&lt;/p&gt;</desc>
						<instances>
							
								<instance>
									<uri>http://lab.awh.zdresearch.com/</uri>
									<method>GET</method>
									<param></param>
									<attack></attack>
									<evidence></evidence>
									<otherinfo></otherinfo>
								</instance>
							
							
								<instance>
									<uri>http://lab.awh.zdresearch.com/chapter2/</uri>
									<method>GET</method>
									<param></param>
									<attack></attack>
									<evidence></evidence>
									<otherinfo></otherinfo>
								</instance>
							
							
								<instance>
									<uri>http://lab.awh.zdresearch.com/chapter2/bWAPP/</uri>
									<method>GET</method>
									<param></param>
									<attack></attack>
									<evidence></evidence>
									<otherinfo></otherinfo>
								</instance>
							
							
								<instance>
									<uri>http://lab.awh.zdresearch.com/chapter2/bWAPP/bWAPP/info.php</uri>
									<method>GET</method>
									<param></param>
									<attack></attack>
									<evidence></evidence>
									<otherinfo></otherinfo>
								</instance>
							
							
								<instance>
									<uri>http://lab.awh.zdresearch.com/chapter2/bWAPP/bWAPP/login.php</uri>
									<method>GET</method>
									<param></param>
									<attack></attack>
									<evidence></evidence>
									<otherinfo></otherinfo>
								</instance>
							
							
								<instance>
									<uri>http://lab.awh.zdresearch.com/robots.txt</uri>
									<method>GET</method>
									<param></param>
									<attack></attack>
									<evidence></evidence>
									<otherinfo></otherinfo>
								</instance>
							
							
								<instance>
									<uri>http://lab.awh.zdresearch.com/sitemap.xml</uri>
									<method>GET</method>
									<param></param>
									<attack></attack>
									<evidence></evidence>
									<otherinfo></otherinfo>
								</instance>
							
							
								<instance>
									<uri>http://lab.awh.zdresearch.com/WebGoat/attack</uri>
									<method>GET</method>
									<param></param>
									<attack></attack>
									<evidence></evidence>
									<otherinfo></otherinfo>
								</instance>
							
							
								<instance>
									<uri>http://lab.awh.zdresearch.com/WebGoat53/attack</uri>
									<method>GET</method>
									<param></param>
									<attack></attack>
									<evidence></evidence>
									<otherinfo></otherinfo>
								</instance>
							
							
								<instance>
									<uri>http://lab.awh.zdresearch.com/websheep</uri>
									<method>GET</method>
									<param></param>
									<attack></attack>
									<evidence></evidence>
									<otherinfo></otherinfo>
								</instance>
							
						</instances>
						<count>10</count>
						<solution>&lt;p&gt;Ensure that your web server, application server, load balancer, etc. is configured to set the Content-Security-Policy header.&lt;/p&gt;</solution>
						<otherinfo></otherinfo>
						<reference>&lt;p&gt;https://developer.mozilla.org/en-US/docs/Web/Security/CSP/Introducing_Content_Security_Policy&lt;/p&gt;&lt;p&gt;https://cheatsheetseries.owasp.org/cheatsheets/Content_Security_Policy_Cheat_Sheet.html&lt;/p&gt;&lt;p&gt;http://www.w3.org/TR/CSP/&lt;/p&gt;&lt;p&gt;http://w3c.github.io/webappsec/specs/content-security-policy/csp-specification.dev.html&lt;/p&gt;&lt;p&gt;http://www.html5rocks.com/en/tutorials/security/content-security-policy/&lt;/p&gt;&lt;p&gt;http://caniuse.com/#feat=contentsecuritypolicy&lt;/p&gt;&lt;p&gt;http://content-security-policy.com/&lt;/p&gt;</reference>
						<cweid>693</cweid>
						<wascid>15</wascid>
						<sourceid>15</sourceid>
					</alertitem>
				
				
					<alertitem>
						<pluginid>10098</pluginid>
						<alertRef>10098</alertRef>
						<alert>Cross-Domain Misconfiguration</alert>
						<name>Cross-Domain Misconfiguration</name>
						<riskcode>2</riskcode>
						<confidence>2</confidence>
						<riskdesc>Medium (Medium)</riskdesc>
						<confidencedesc>Medium</confidencedesc>
						<desc>&lt;p&gt;Web browser data loading may be possible, due to a Cross Origin Resource Sharing (CORS) misconfiguration on the web server&lt;/p&gt;</desc>
						<instances>
							
								<instance>
									<uri>http://lab.awh.zdresearch.com/websheep/csrf/v2</uri>
									<method>GET</method>
									<param></param>
									<attack></attack>
									<evidence>Access-Control-Allow-Origin: *</evidence>
									<otherinfo>The CORS misconfiguration on the web server permits cross-domain read requests from arbitrary third party domains, using unauthenticated APIs on this domain. Web browser implementations do not permit arbitrary third parties to read the response from authenticated APIs, however. This reduces the risk somewhat. This misconfiguration could be used by an attacker to access data that is available in an unauthenticated manner, but which uses some other form of security, such as IP address white-listing.</otherinfo>
								</instance>
							
						</instances>
						<count>1</count>
						<solution>&lt;p&gt;Ensure that sensitive data is not available in an unauthenticated manner (using IP address white-listing, for instance).&lt;/p&gt;&lt;p&gt;Configure the &quot;Access-Control-Allow-Origin&quot; HTTP header to a more restrictive set of domains, or remove all CORS headers entirely, to allow the web browser to enforce the Same Origin Policy (SOP) in a more restrictive manner.&lt;/p&gt;</solution>
						<otherinfo>&lt;p&gt;The CORS misconfiguration on the web server permits cross-domain read requests from arbitrary third party domains, using unauthenticated APIs on this domain. Web browser implementations do not permit arbitrary third parties to read the response from authenticated APIs, however. This reduces the risk somewhat. This misconfiguration could be used by an attacker to access data that is available in an unauthenticated manner, but which uses some other form of security, such as IP address white-listing.&lt;/p&gt;</otherinfo>
						<reference>&lt;p&gt;https://vulncat.fortify.com/en/detail?id=desc.config.dotnet.html5_overly_permissive_cors_policy&lt;/p&gt;</reference>
						<cweid>264</cweid>
						<wascid>14</wascid>
						<sourceid>1182</sourceid>
					</alertitem>
				
				
					<alertitem>
						<pluginid>10033</pluginid>
						<alertRef>10033</alertRef>
						<alert>Directory Browsing</alert>
						<name>Directory Browsing</name>
						<riskcode>2</riskcode>
						<confidence>2</confidence>
						<riskdesc>Medium (Medium)</riskdesc>
						<confidencedesc>Medium</confidencedesc>
						<desc>&lt;p&gt;It is possible to view a listing of the directory contents. Directory listings may reveal hidden scripts, include files, backup source files, etc., which can be accessed to reveal sensitive information.&lt;/p&gt;</desc>
						<instances>
							
								<instance>
									<uri>http://lab.awh.zdresearch.com/chapter1/</uri>
									<method>GET</method>
									<param></param>
									<attack></attack>
									<evidence>&lt;title&gt;Index of /chapter1&lt;/title&gt;</evidence>
									<otherinfo>Web server identified: Apache 2</otherinfo>
								</instance>
							
							
								<instance>
									<uri>http://lab.awh.zdresearch.com/chapter2/</uri>
									<method>GET</method>
									<param></param>
									<attack></attack>
									<evidence>&lt;title&gt;Index of /chapter2&lt;/title&gt;</evidence>
									<otherinfo>Web server identified: Apache 2</otherinfo>
								</instance>
							
							
								<instance>
									<uri>http://lab.awh.zdresearch.com/chapter2/?C=M;O=A</uri>
									<method>GET</method>
									<param></param>
									<attack></attack>
									<evidence>&lt;title&gt;Index of /chapter2&lt;/title&gt;</evidence>
									<otherinfo>Web server identified: Apache 2</otherinfo>
								</instance>
							
							
								<instance>
									<uri>http://lab.awh.zdresearch.com/chapter2/?C=N;O=D</uri>
									<method>GET</method>
									<param></param>
									<attack></attack>
									<evidence>&lt;title&gt;Index of /chapter2&lt;/title&gt;</evidence>
									<otherinfo>Web server identified: Apache 2</otherinfo>
								</instance>
							
							
								<instance>
									<uri>http://lab.awh.zdresearch.com/chapter2/bWAPP/</uri>
									<method>GET</method>
									<param></param>
									<attack></attack>
									<evidence>&lt;title&gt;Index of /chapter2/bWAPP&lt;/title&gt;</evidence>
									<otherinfo>Web server identified: Apache 2</otherinfo>
								</instance>
							
							
								<instance>
									<uri>http://lab.awh.zdresearch.com/chapter3/</uri>
									<method>GET</method>
									<param></param>
									<attack></attack>
									<evidence>&lt;title&gt;Index of /chapter3&lt;/title&gt;</evidence>
									<otherinfo>Web server identified: Apache 2</otherinfo>
								</instance>
							
							
								<instance>
									<uri>http://lab.awh.zdresearch.com/chapter4/</uri>
									<method>GET</method>
									<param></param>
									<attack></attack>
									<evidence>&lt;title&gt;Index of /chapter4&lt;/title&gt;</evidence>
									<otherinfo>Web server identified: Apache 2</otherinfo>
								</instance>
							
							
								<instance>
									<uri>http://lab.awh.zdresearch.com/chapter5/</uri>
									<method>GET</method>
									<param></param>
									<attack></attack>
									<evidence>&lt;title&gt;Index of /chapter5&lt;/title&gt;</evidence>
									<otherinfo>Web server identified: Apache 2</otherinfo>
								</instance>
							
							
								<instance>
									<uri>http://lab.awh.zdresearch.com/chapter6/</uri>
									<method>GET</method>
									<param></param>
									<attack></attack>
									<evidence>&lt;title&gt;Index of /chapter6&lt;/title&gt;</evidence>
									<otherinfo>Web server identified: Apache 2</otherinfo>
								</instance>
							
							
								<instance>
									<uri>http://lab.awh.zdresearch.com/chapter7/</uri>
									<method>GET</method>
									<param></param>
									<attack></attack>
									<evidence>&lt;title&gt;Index of /chapter7&lt;/title&gt;</evidence>
									<otherinfo>Web server identified: Apache 2</otherinfo>
								</instance>
							
							
								<instance>
									<uri>http://lab.awh.zdresearch.com/chapter8/</uri>
									<method>GET</method>
									<param></param>
									<attack></attack>
									<evidence>&lt;title&gt;Index of /chapter8&lt;/title&gt;</evidence>
									<otherinfo>Web server identified: Apache 2</otherinfo>
								</instance>
							
							
								<instance>
									<uri>http://lab.awh.zdresearch.com/chapter9/</uri>
									<method>GET</method>
									<param></param>
									<attack></attack>
									<evidence>&lt;title&gt;Index of /chapter9&lt;/title&gt;</evidence>
									<otherinfo>Web server identified: Apache 2</otherinfo>
								</instance>
							
						</instances>
						<count>12</count>
						<solution>&lt;p&gt;Configure the web server to disable directory browsing.&lt;/p&gt;</solution>
						<otherinfo>&lt;p&gt;Web server identified: Apache 2&lt;/p&gt;</otherinfo>
						<reference>&lt;p&gt;https://cwe.mitre.org/data/definitions/548.html&lt;/p&gt;</reference>
						<cweid>548</cweid>
						<wascid>16</wascid>
						<sourceid>128</sourceid>
					</alertitem>
				
				
					<alertitem>
						<pluginid>10041</pluginid>
						<alertRef>10041</alertRef>
						<alert>HTTP to HTTPS Insecure Transition in Form Post</alert>
						<name>HTTP to HTTPS Insecure Transition in Form Post</name>
						<riskcode>2</riskcode>
						<confidence>2</confidence>
						<riskdesc>Medium (Medium)</riskdesc>
						<confidencedesc>Medium</confidencedesc>
						<desc>&lt;p&gt;This check looks for insecure HTTP pages that host HTTPS forms. The issue is that an insecure HTTP page can easily be hijacked through MITM and the secure HTTPS form can be replaced or spoofed.&lt;/p&gt;</desc>
						<instances>
							
								<instance>
									<uri>http://lab.awh.zdresearch.com/chapter2/mutillidae/</uri>
									<method>GET</method>
									<param></param>
									<attack></attack>
									<evidence>https://www.paypal.com/cgi-bin/webscr</evidence>
									<otherinfo>The response to the following request over HTTP included an HTTPS form tag action attribute value:

http://lab.awh.zdresearch.com/chapter2/mutillidae/The context was:

&lt;form action=&quot;https://www.paypal.com/cgi-bin/webscr&quot; method=&quot;post&quot; target=&quot;_blank&quot;&gt;
					&lt;input type=&quot;hidden&quot; name=&quot;cmd&quot; value=&quot;_s-xclick&quot;&gt;
					&lt;input type=&quot;hidden&quot; name=&quot;hosted_button_id&quot; value=&quot;45R3YEXENU97S&quot;&gt;
					&lt;input type=&quot;image&quot; src=&quot;https://www.paypalobjects.com/en_US/i/btn/btn_donate_LG.gif&quot; border=&quot;0&quot; name=&quot;submit&quot; alt=&quot;PayPal - The safer, easier way to pay online!&quot;&gt;
					&lt;img alt=&quot;&quot; border=&quot;0&quot; src=&quot;https://www.paypalobjects.com/en_US/i/scr/pixel.gif&quot; width=&quot;1&quot; height=&quot;1&quot;&gt;
				&lt;/form&gt;</otherinfo>
								</instance>
							
							
								<instance>
									<uri>http://lab.awh.zdresearch.com/chapter2/mutillidae/index.php?page=home.php&amp;popUpNotificationCode=HPH0</uri>
									<method>GET</method>
									<param></param>
									<attack></attack>
									<evidence>https://www.paypal.com/cgi-bin/webscr</evidence>
									<otherinfo>The response to the following request over HTTP included an HTTPS form tag action attribute value:

http://lab.awh.zdresearch.com/chapter2/mutillidae/index.php?page=home.php&amp;popUpNotificationCode=HPH0The context was:

&lt;form action=&quot;https://www.paypal.com/cgi-bin/webscr&quot; method=&quot;post&quot; target=&quot;_blank&quot;&gt;
					&lt;input type=&quot;hidden&quot; name=&quot;cmd&quot; value=&quot;_s-xclick&quot;&gt;
					&lt;input type=&quot;hidden&quot; name=&quot;hosted_button_id&quot; value=&quot;45R3YEXENU97S&quot;&gt;
					&lt;input type=&quot;image&quot; src=&quot;https://www.paypalobjects.com/en_US/i/btn/btn_donate_LG.gif&quot; border=&quot;0&quot; name=&quot;submit&quot; alt=&quot;PayPal - The safer, easier way to pay online!&quot;&gt;
					&lt;img alt=&quot;&quot; border=&quot;0&quot; src=&quot;https://www.paypalobjects.com/en_US/i/scr/pixel.gif&quot; width=&quot;1&quot; height=&quot;1&quot;&gt;
				&lt;/form&gt;</otherinfo>
								</instance>
							
							
								<instance>
									<uri>http://lab.awh.zdresearch.com/chapter2/mutillidae/index.php?page=login.php</uri>
									<method>GET</method>
									<param></param>
									<attack></attack>
									<evidence>https://www.paypal.com/cgi-bin/webscr</evidence>
									<otherinfo>The response to the following request over HTTP included an HTTPS form tag action attribute value:

http://lab.awh.zdresearch.com/chapter2/mutillidae/index.php?page=login.phpThe context was:

&lt;form action=&quot;https://www.paypal.com/cgi-bin/webscr&quot; method=&quot;post&quot; target=&quot;_blank&quot;&gt;
					&lt;input type=&quot;hidden&quot; name=&quot;cmd&quot; value=&quot;_s-xclick&quot;&gt;
					&lt;input type=&quot;hidden&quot; name=&quot;hosted_button_id&quot; value=&quot;45R3YEXENU97S&quot;&gt;
					&lt;input type=&quot;image&quot; src=&quot;https://www.paypalobjects.com/en_US/i/btn/btn_donate_LG.gif&quot; border=&quot;0&quot; name=&quot;submit&quot; alt=&quot;PayPal - The safer, easier way to pay online!&quot;&gt;
					&lt;img alt=&quot;&quot; border=&quot;0&quot; src=&quot;https://www.paypalobjects.com/en_US/i/scr/pixel.gif&quot; width=&quot;1&quot; height=&quot;1&quot;&gt;
				&lt;/form&gt;</otherinfo>
								</instance>
							
						</instances>
						<count>3</count>
						<solution>&lt;p&gt;Use HTTPS for landing pages that host secure forms.&lt;/p&gt;</solution>
						<otherinfo>&lt;p&gt;The response to the following request over HTTP included an HTTPS form tag action attribute value:&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;http://lab.awh.zdresearch.com/chapter2/mutillidae/The context was:&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;form action=&quot;https://www.paypal.com/cgi-bin/webscr&quot; method=&quot;post&quot; target=&quot;_blank&quot;&gt;&lt;/p&gt;&lt;p&gt;					&lt;input type=&quot;hidden&quot; name=&quot;cmd&quot; value=&quot;_s-xclick&quot;&gt;&lt;/p&gt;&lt;p&gt;					&lt;input type=&quot;hidden&quot; name=&quot;hosted_button_id&quot; value=&quot;45R3YEXENU97S&quot;&gt;&lt;/p&gt;&lt;p&gt;					&lt;input type=&quot;image&quot; src=&quot;https://www.paypalobjects.com/en_US/i/btn/btn_donate_LG.gif&quot; border=&quot;0&quot; name=&quot;submit&quot; alt=&quot;PayPal - The safer, easier way to pay online!&quot;&gt;&lt;/p&gt;&lt;p&gt;					&lt;img alt=&quot;&quot; border=&quot;0&quot; src=&quot;https://www.paypalobjects.com/en_US/i/scr/pixel.gif&quot; width=&quot;1&quot; height=&quot;1&quot;&gt;&lt;/p&gt;&lt;p&gt;				&lt;/form&gt;&lt;/p&gt;</otherinfo>
						<reference></reference>
						<cweid>319</cweid>
						<wascid>15</wascid>
						<sourceid>275</sourceid>
					</alertitem>
				
				
					<alertitem>
						<pluginid>10020</pluginid>
						<alertRef>10020-1</alertRef>
						<alert>Missing Anti-clickjacking Header</alert>
						<name>Missing Anti-clickjacking Header</name>
						<riskcode>2</riskcode>
						<confidence>2</confidence>
						<riskdesc>Medium (Medium)</riskdesc>
						<confidencedesc>Medium</confidencedesc>
						<desc>&lt;p&gt;The response does not include either Content-Security-Policy with &apos;frame-ancestors&apos; directive or X-Frame-Options to protect against &apos;ClickJacking&apos; attacks.&lt;/p&gt;</desc>
						<instances>
							
								<instance>
									<uri>http://lab.awh.zdresearch.com/</uri>
									<method>GET</method>
									<param>x-frame-options</param>
									<attack></attack>
									<evidence></evidence>
									<otherinfo></otherinfo>
								</instance>
							
							
								<instance>
									<uri>http://lab.awh.zdresearch.com/chapter1/</uri>
									<method>GET</method>
									<param>x-frame-options</param>
									<attack></attack>
									<evidence></evidence>
									<otherinfo></otherinfo>
								</instance>
							
							
								<instance>
									<uri>http://lab.awh.zdresearch.com/chapter2/</uri>
									<method>GET</method>
									<param>x-frame-options</param>
									<attack></attack>
									<evidence></evidence>
									<otherinfo></otherinfo>
								</instance>
							
							
								<instance>
									<uri>http://lab.awh.zdresearch.com/chapter2/bWAPP/</uri>
									<method>GET</method>
									<param>x-frame-options</param>
									<attack></attack>
									<evidence></evidence>
									<otherinfo></otherinfo>
								</instance>
							
							
								<instance>
									<uri>http://lab.awh.zdresearch.com/chapter2/bWAPP/bWAPP/info.php</uri>
									<method>GET</method>
									<param>x-frame-options</param>
									<attack></attack>
									<evidence></evidence>
									<otherinfo></otherinfo>
								</instance>
							
							
								<instance>
									<uri>http://lab.awh.zdresearch.com/chapter2/bWAPP/bWAPP/login.php</uri>
									<method>GET</method>
									<param>x-frame-options</param>
									<attack></attack>
									<evidence></evidence>
									<otherinfo></otherinfo>
								</instance>
							
							
								<instance>
									<uri>http://lab.awh.zdresearch.com/chapter2/bWAPP/bWAPP/user_new.php</uri>
									<method>GET</method>
									<param>x-frame-options</param>
									<attack></attack>
									<evidence></evidence>
									<otherinfo></otherinfo>
								</instance>
							
							
								<instance>
									<uri>http://lab.awh.zdresearch.com/chapter2/xvwa/</uri>
									<method>GET</method>
									<param>x-frame-options</param>
									<attack></attack>
									<evidence></evidence>
									<otherinfo></otherinfo>
								</instance>
							
							
								<instance>
									<uri>http://lab.awh.zdresearch.com/chapter3/xss-labs/</uri>
									<method>GET</method>
									<param>x-frame-options</param>
									<attack></attack>
									<evidence></evidence>
									<otherinfo></otherinfo>
								</instance>
							
							
								<instance>
									<uri>http://lab.awh.zdresearch.com/websheep</uri>
									<method>GET</method>
									<param>x-frame-options</param>
									<attack></attack>
									<evidence></evidence>
									<otherinfo></otherinfo>
								</instance>
							
						</instances>
						<count>10</count>
						<solution>&lt;p&gt;Modern Web browsers support the Content-Security-Policy and X-Frame-Options HTTP headers. Ensure one of them is set on all web pages returned by your site/app.&lt;/p&gt;&lt;p&gt;If you expect the page to be framed only by pages on your server (e.g. it&apos;s part of a FRAMESET) then you&apos;ll want to use SAMEORIGIN, otherwise if you never expect the page to be framed, you should use DENY. Alternatively consider implementing Content Security Policy&apos;s &quot;frame-ancestors&quot; directive.&lt;/p&gt;</solution>
						<otherinfo></otherinfo>
						<reference>&lt;p&gt;https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/X-Frame-Options&lt;/p&gt;</reference>
						<cweid>1021</cweid>
						<wascid>15</wascid>
						<sourceid>15</sourceid>
					</alertitem>
				
				
					<alertitem>
						<pluginid>10099</pluginid>
						<alertRef>10099</alertRef>
						<alert>Source Code Disclosure - C</alert>
						<name>Source Code Disclosure - C</name>
						<riskcode>2</riskcode>
						<confidence>2</confidence>
						<riskdesc>Medium (Medium)</riskdesc>
						<confidencedesc>Medium</confidencedesc>
						<desc>&lt;p&gt;Application Source Code was disclosed by the web server - C&lt;/p&gt;</desc>
						<instances>
							
								<instance>
									<uri>http://lab.awh.zdresearch.com/chapter2/bWAPP/evil/cve-2009-1185.c</uri>
									<method>GET</method>
									<param></param>
									<attack></attack>
									<evidence>#include &lt;stdio.h&gt;</evidence>
									<otherinfo>#include &lt;stdio.h&gt;</otherinfo>
								</instance>
							
						</instances>
						<count>1</count>
						<solution>&lt;p&gt;Ensure that application Source Code is not available with alternative extensions, and ensure that source code is not present within other files or data deployed to the web server, or served by the web server. &lt;/p&gt;</solution>
						<otherinfo>&lt;p&gt;#include &lt;stdio.h&gt;&lt;/p&gt;</otherinfo>
						<reference>&lt;p&gt;http://blogs.wsj.com/cio/2013/10/08/adobe-source-code-leak-is-bad-news-for-u-s-government/&lt;/p&gt;</reference>
						<cweid>540</cweid>
						<wascid>13</wascid>
						<sourceid>1233</sourceid>
					</alertitem>
				
				
					<alertitem>
						<pluginid>10099</pluginid>
						<alertRef>10099</alertRef>
						<alert>Source Code Disclosure - PHP</alert>
						<name>Source Code Disclosure - PHP</name>
						<riskcode>2</riskcode>
						<confidence>2</confidence>
						<riskdesc>Medium (Medium)</riskdesc>
						<confidencedesc>Medium</confidencedesc>
						<desc>&lt;p&gt;Application Source Code was disclosed by the web server - PHP&lt;/p&gt;</desc>
						<instances>
							
								<instance>
									<uri>http://lab.awh.zdresearch.com/chapter2/bWAPP/evil/rfi.txt</uri>
									<method>GET</method>
									<param></param>
									<attack></attack>
									<evidence>&lt;?php

/*

bWAPP, or a buggy web application, is a free and open source deliberately insecure web application.
It helps security enthusiasts, developers and students to discover and to prevent web vulnerabilities.
bWAPP covers all major known web vulnerabilities, including all risks from the OWASP Top 10 project!
It is for educational purposes only.

Enjoy!

Malik Mesellem
Twitter: @MME_IT

&#xa9; 2013 MME BVBA. All rights reserved.

*/

echo &quot;&lt;script&gt;alert(\&quot;U 4r3 0wn3d by MME!!!\&quot;);</evidence>
									<otherinfo>&lt;?php

/*

bWAPP, or a buggy web application, is a free and open source deliberately insecure web application.
It helps security enthusiasts, developers and students to discover and to prevent web vulnerabilities.
bWAPP covers all major known web vulnerabilities, including all risks from the OWASP Top 10 project!
It is for educational purposes only.

Enjoy!

Malik Mesellem
Twitter: @MME_IT

&#xa9; 2013 MME BVBA. All rights reserved.

*/

echo &quot;&lt;script&gt;alert(\&quot;U 4r3 0wn3d by MME!!!\&quot;);</otherinfo>
								</instance>
							
							
								<instance>
									<uri>http://lab.awh.zdresearch.com/chapter2/code-injection/eval.php</uri>
									<method>GET</method>
									<param></param>
									<attack></attack>
									<evidence>$_GET[</evidence>
									<otherinfo>$_GET[</otherinfo>
								</instance>
							
							
								<instance>
									<uri>http://lab.awh.zdresearch.com/chapter2/code-injection/lfi_example.php</uri>
									<method>GET</method>
									<param></param>
									<attack></attack>
									<evidence>$_GET[</evidence>
									<otherinfo>$_GET[</otherinfo>
								</instance>
							
							
								<instance>
									<uri>http://lab.awh.zdresearch.com/chapter2/code-injection/reflection.php</uri>
									<method>GET</method>
									<param></param>
									<attack></attack>
									<evidence>$_GET[</evidence>
									<otherinfo>$_GET[</otherinfo>
								</instance>
							
							
								<instance>
									<uri>http://lab.awh.zdresearch.com/chapter2/filtering/directory_filtering.php</uri>
									<method>GET</method>
									<param></param>
									<attack></attack>
									<evidence>$_GET[</evidence>
									<otherinfo>$_GET[</otherinfo>
								</instance>
							
							
								<instance>
									<uri>http://lab.awh.zdresearch.com/chapter2/hakdatkiwi-strongpass.zip</uri>
									<method>GET</method>
									<param></param>
									<attack></attack>
									<evidence>&lt;?php
logout();</evidence>
									<otherinfo>&lt;?php
logout();</otherinfo>
								</instance>
							
							
								<instance>
									<uri>http://lab.awh.zdresearch.com/chapter2/tikiwiki-1.9.8.1.zip</uri>
									<method>GET</method>
									<param></param>
									<attack></attack>
									<evidence></evidence>
									<otherinfo></otherinfo>
								</instance>
							
						</instances>
						<count>9</count>
						<solution>&lt;p&gt;Ensure that application Source Code is not available with alternative extensions, and ensure that source code is not present within other files or data deployed to the web server, or served by the web server. &lt;/p&gt;</solution>
						<otherinfo>&lt;p&gt;&lt;?php&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;/*&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;bWAPP, or a buggy web application, is a free and open source deliberately insecure web application.&lt;/p&gt;&lt;p&gt;It helps security enthusiasts, developers and students to discover and to prevent web vulnerabilities.&lt;/p&gt;&lt;p&gt;bWAPP covers all major known web vulnerabilities, including all risks from the OWASP Top 10 project!&lt;/p&gt;&lt;p&gt;It is for educational purposes only.&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;Enjoy!&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;Malik Mesellem&lt;/p&gt;&lt;p&gt;Twitter: @MME_IT&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&#xa9; 2013 MME BVBA. All rights reserved.&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;*/&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;echo &quot;&lt;script&gt;alert(\&quot;U 4r3 0wn3d by MME!!!\&quot;);&lt;/p&gt;</otherinfo>
						<reference>&lt;p&gt;http://blogs.wsj.com/cio/2013/10/08/adobe-source-code-leak-is-bad-news-for-u-s-government/&lt;/p&gt;</reference>
						<cweid>540</cweid>
						<wascid>13</wascid>
						<sourceid>1240</sourceid>
					</alertitem>
				
				
					<alertitem>
						<pluginid>10099</pluginid>
						<alertRef>10099</alertRef>
						<alert>Source Code Disclosure - Perl</alert>
						<name>Source Code Disclosure - Perl</name>
						<riskcode>2</riskcode>
						<confidence>2</confidence>
						<riskdesc>Medium (Medium)</riskdesc>
						<confidencedesc>Medium</confidencedesc>
						<desc>&lt;p&gt;Application Source Code was disclosed by the web server - Perl&lt;/p&gt;</desc>
						<instances>
							
								<instance>
									<uri>http://lab.awh.zdresearch.com/chapter2/bWAPP.zip</uri>
									<method>GET</method>
									<param></param>
									<attack></attack>
									<evidence>$#htjl</evidence>
									<otherinfo>$#htjl</otherinfo>
								</instance>
							
						</instances>
						<count>1</count>
						<solution>&lt;p&gt;Ensure that application Source Code is not available with alternative extensions, and ensure that source code is not present within other files or data deployed to the web server, or served by the web server. &lt;/p&gt;</solution>
						<otherinfo>&lt;p&gt;$#htjl&lt;/p&gt;</otherinfo>
						<reference>&lt;p&gt;http://blogs.wsj.com/cio/2013/10/08/adobe-source-code-leak-is-bad-news-for-u-s-government/&lt;/p&gt;</reference>
						<cweid>540</cweid>
						<wascid>13</wascid>
						<sourceid>801</sourceid>
					</alertitem>
				
				
					<alertitem>
						<pluginid>10099</pluginid>
						<alertRef>10099</alertRef>
						<alert>Source Code Disclosure - SQL</alert>
						<name>Source Code Disclosure - SQL</name>
						<riskcode>2</riskcode>
						<confidence>2</confidence>
						<riskdesc>Medium (Medium)</riskdesc>
						<confidencedesc>Medium</confidencedesc>
						<desc>&lt;p&gt;Application Source Code was disclosed by the web server - SQL&lt;/p&gt;</desc>
						<instances>
							
								<instance>
									<uri>http://lab.awh.zdresearch.com/chapter2/bWAPP/evil/heartbleed.py</uri>
									<method>GET</method>
									<param></param>
									<attack></attack>
									<evidence>select
import re
from optparse import OptionParser</evidence>
									<otherinfo>select
import re
from optparse import OptionParser</otherinfo>
								</instance>
							
							
								<instance>
									<uri>http://lab.awh.zdresearch.com/chapter2/mutillidae/set-up-database.php</uri>
									<method>GET</method>
									<param></param>
									<attack></attack>
									<evidence>SELECT * FROM accounts</evidence>
									<otherinfo>SELECT * FROM accounts</otherinfo>
								</instance>
							
						</instances>
						<count>2</count>
						<solution>&lt;p&gt;Ensure that application Source Code is not available with alternative extensions, and ensure that source code is not present within other files or data deployed to the web server, or served by the web server. &lt;/p&gt;</solution>
						<otherinfo>&lt;p&gt;select&lt;/p&gt;&lt;p&gt;import re&lt;/p&gt;&lt;p&gt;from optparse import OptionParser&lt;/p&gt;</otherinfo>
						<reference>&lt;p&gt;http://blogs.wsj.com/cio/2013/10/08/adobe-source-code-leak-is-bad-news-for-u-s-government/&lt;/p&gt;</reference>
						<cweid>540</cweid>
						<wascid>13</wascid>
						<sourceid>1238</sourceid>
					</alertitem>
				
				
					<alertitem>
						<pluginid>90003</pluginid>
						<alertRef>90003</alertRef>
						<alert>Sub Resource Integrity Attribute Missing</alert>
						<name>Sub Resource Integrity Attribute Missing</name>
						<riskcode>2</riskcode>
						<confidence>3</confidence>
						<riskdesc>Medium (High)</riskdesc>
						<confidencedesc>High</confidencedesc>
						<desc>&lt;p&gt;The integrity attribute is missing on a script or link tag served by an external server. The integrity tag prevents an attacker who have gained access to this server from injecting a malicious content. &lt;/p&gt;</desc>
						<instances>
							
								<instance>
									<uri>http://lab.awh.zdresearch.com/chapter2/joomla3.0.2/</uri>
									<method>GET</method>
									<param></param>
									<attack></attack>
									<evidence>&lt;link href=&apos;http://fonts.googleapis.com/css?family=Open+Sans&apos; rel=&apos;stylesheet&apos; type=&apos;text/css&apos; /&gt;</evidence>
									<otherinfo></otherinfo>
								</instance>
							
							
								<instance>
									<uri>http://lab.awh.zdresearch.com/chapter2/phpmyfaq/</uri>
									<method>GET</method>
									<param></param>
									<attack></attack>
									<evidence>&lt;link rel=&quot;alternate&quot; title=&quot;Latest FAQ Records RSS Feed&quot; type=&quot;application/rss+xml&quot; href=&quot;http://lab.awh.exdemy.com/chapter2/phpmyfaq/feed/latest/rss.php&quot;&gt;</evidence>
									<otherinfo></otherinfo>
								</instance>
							
							
								<instance>
									<uri>http://lab.awh.zdresearch.com/chapter2/phpmyfaq/</uri>
									<method>GET</method>
									<param></param>
									<attack></attack>
									<evidence>&lt;link rel=&quot;alternate&quot; title=&quot;News RSS Feed&quot; type=&quot;application/rss+xml&quot; href=&quot;http://lab.awh.exdemy.com/chapter2/phpmyfaq/feed/news/rss.php&quot;&gt;</evidence>
									<otherinfo></otherinfo>
								</instance>
							
							
								<instance>
									<uri>http://lab.awh.zdresearch.com/chapter2/phpmyfaq/</uri>
									<method>GET</method>
									<param></param>
									<attack></attack>
									<evidence>&lt;link rel=&quot;alternate&quot; title=&quot;Open Questions RSS Feed&quot; type=&quot;application/rss+xml&quot; href=&quot;http://lab.awh.exdemy.com/chapter2/phpmyfaq/feed/openquestions/rss.php&quot;&gt;</evidence>
									<otherinfo></otherinfo>
								</instance>
							
							
								<instance>
									<uri>http://lab.awh.zdresearch.com/chapter2/phpmyfaq/</uri>
									<method>GET</method>
									<param></param>
									<attack></attack>
									<evidence>&lt;link rel=&quot;alternate&quot; title=&quot;TopTen RSS Feed&quot; type=&quot;application/rss+xml&quot; href=&quot;http://lab.awh.exdemy.com/chapter2/phpmyfaq/feed/topten/rss.php&quot;&gt;</evidence>
									<otherinfo></otherinfo>
								</instance>
							
							
								<instance>
									<uri>http://lab.awh.zdresearch.com/chapter2/phpmyfaq/</uri>
									<method>GET</method>
									<param></param>
									<attack></attack>
									<evidence>&lt;link rel=&quot;apple-touch-icon&quot; href=&quot;http://lab.awh.exdemy.com/chapter2/phpmyfaq/assets/template/default/apple-touch-icon.png&quot;&gt;</evidence>
									<otherinfo></otherinfo>
								</instance>
							
							
								<instance>
									<uri>http://lab.awh.zdresearch.com/chapter2/phpmyfaq/</uri>
									<method>GET</method>
									<param></param>
									<attack></attack>
									<evidence>&lt;link rel=&quot;search&quot; type=&quot;application/opensearchdescription+xml&quot; title=&quot;phpMyFAQ Codename Proteus -  powered by phpMyFAQ 2.9.9&quot; href=&quot;http://lab.awh.exdemy.com/chapter2/phpmyfaq/opensearch.php&quot;&gt;</evidence>
									<otherinfo></otherinfo>
								</instance>
							
							
								<instance>
									<uri>http://lab.awh.zdresearch.com/chapter2/phpmyfaq/</uri>
									<method>GET</method>
									<param></param>
									<attack></attack>
									<evidence>&lt;link rel=&quot;shortcut icon&quot; href=&quot;http://lab.awh.exdemy.com/chapter2/phpmyfaq/assets/template/default/favicon.ico&quot;&gt;</evidence>
									<otherinfo></otherinfo>
								</instance>
							
							
								<instance>
									<uri>http://lab.awh.zdresearch.com/chapter2/phpmyfaq/</uri>
									<method>GET</method>
									<param></param>
									<attack></attack>
									<evidence>&lt;link rel=&quot;stylesheet&quot; href=&quot;http://lab.awh.exdemy.com/chapter2/phpmyfaq/assets/template/default/css/style.min.css?v=1&quot;&gt;</evidence>
									<otherinfo></otherinfo>
								</instance>
							
							
								<instance>
									<uri>http://lab.awh.zdresearch.com/chapter2/phpmyfaq/</uri>
									<method>GET</method>
									<param></param>
									<attack></attack>
									<evidence>&lt;script src=&quot;http://lab.awh.exdemy.com/chapter2/phpmyfaq/assets/js/modernizr.min.js&quot;&gt;&lt;/script&gt;</evidence>
									<otherinfo></otherinfo>
								</instance>
							
							
								<instance>
									<uri>http://lab.awh.zdresearch.com/chapter2/phpmyfaq/</uri>
									<method>GET</method>
									<param></param>
									<attack></attack>
									<evidence>&lt;script src=&quot;http://lab.awh.exdemy.com/chapter2/phpmyfaq/assets/js/phpmyfaq.min.js&quot;&gt;&lt;/script&gt;</evidence>
									<otherinfo></otherinfo>
								</instance>
							
							
								<instance>
									<uri>http://lab.awh.zdresearch.com/chapter2/xvwa/</uri>
									<method>GET</method>
									<param></param>
									<attack></attack>
									<evidence>&lt;script src=&quot;https://oss.maxcdn.com/libs/html5shiv/3.7.0/html5shiv.js&quot;&gt;&lt;/script&gt;</evidence>
									<otherinfo></otherinfo>
								</instance>
							
							
								<instance>
									<uri>http://lab.awh.zdresearch.com/chapter2/xvwa/</uri>
									<method>GET</method>
									<param></param>
									<attack></attack>
									<evidence>&lt;script src=&quot;https://oss.maxcdn.com/libs/respond.js/1.4.2/respond.min.js&quot;&gt;&lt;/script&gt;</evidence>
									<otherinfo></otherinfo>
								</instance>
							
							
								<instance>
									<uri>http://lab.awh.zdresearch.com/chapter2/xvwa/instruction.php</uri>
									<method>GET</method>
									<param></param>
									<attack></attack>
									<evidence>&lt;script src=&quot;https://oss.maxcdn.com/libs/html5shiv/3.7.0/html5shiv.js&quot;&gt;&lt;/script&gt;</evidence>
									<otherinfo></otherinfo>
								</instance>
							
							
								<instance>
									<uri>http://lab.awh.zdresearch.com/chapter2/xvwa/instruction.php</uri>
									<method>GET</method>
									<param></param>
									<attack></attack>
									<evidence>&lt;script src=&quot;https://oss.maxcdn.com/libs/respond.js/1.4.2/respond.min.js&quot;&gt;&lt;/script&gt;</evidence>
									<otherinfo></otherinfo>
								</instance>
							
							
								<instance>
									<uri>http://lab.awh.zdresearch.com/chapter2/xvwa/setup/</uri>
									<method>GET</method>
									<param></param>
									<attack></attack>
									<evidence>&lt;script src=&quot;https://oss.maxcdn.com/libs/html5shiv/3.7.0/html5shiv.js&quot;&gt;&lt;/script&gt;</evidence>
									<otherinfo></otherinfo>
								</instance>
							
							
								<instance>
									<uri>http://lab.awh.zdresearch.com/chapter2/xvwa/setup/</uri>
									<method>GET</method>
									<param></param>
									<attack></attack>
									<evidence>&lt;script src=&quot;https://oss.maxcdn.com/libs/respond.js/1.4.2/respond.min.js&quot;&gt;&lt;/script&gt;</evidence>
									<otherinfo></otherinfo>
								</instance>
							
						</instances>
						<count>17</count>
						<solution>&lt;p&gt;Provide a valid integrity attribute to the tag.&lt;/p&gt;</solution>
						<otherinfo></otherinfo>
						<reference>&lt;p&gt;https://developer.mozilla.org/en/docs/Web/Security/Subresource_Integrity&lt;/p&gt;</reference>
						<cweid>345</cweid>
						<wascid>15</wascid>
						<sourceid>540</sourceid>
					</alertitem>
				
				
					<alertitem>
						<pluginid>10003</pluginid>
						<alertRef>10003</alertRef>
						<alert>Vulnerable JS Library</alert>
						<name>Vulnerable JS Library</name>
						<riskcode>2</riskcode>
						<confidence>2</confidence>
						<riskdesc>Medium (Medium)</riskdesc>
						<confidencedesc>Medium</confidencedesc>
						<desc>&lt;p&gt;The identified library jquery, version 1.8.1 is vulnerable.&lt;/p&gt;</desc>
						<instances>
							
								<instance>
									<uri>http://lab.awh.zdresearch.com/chapter2/joomla3.0.2/media/jui/js/jquery.min.js</uri>
									<method>GET</method>
									<param></param>
									<attack></attack>
									<evidence>,jquery:&quot;1.8.1&quot;</evidence>
									<otherinfo>CVE-2020-11023
CVE-2020-11022
CVE-2015-9251
CVE-2019-11358
CVE-2020-7656
CVE-2012-6708
</otherinfo>
								</instance>
							
							
								<instance>
									<uri>http://lab.awh.zdresearch.com/chapter2/mutillidae/javascript/ddsmoothmenu/jquery.min.js</uri>
									<method>GET</method>
									<param></param>
									<attack></attack>
									<evidence>* jQuery JavaScript Library v1.3.2</evidence>
									<otherinfo>CVE-2011-4969
CVE-2020-11023
CVE-2020-11022
CVE-2019-11358
CVE-2020-7656
CVE-2012-6708
</otherinfo>
								</instance>
							
							
								<instance>
									<uri>http://lab.awh.zdresearch.com/chapter2/mutillidae/javascript/jQuery/jquery.js</uri>
									<method>GET</method>
									<param></param>
									<attack></attack>
									<evidence>* jQuery JavaScript Library v1.8.3</evidence>
									<otherinfo>CVE-2020-11023
CVE-2020-11022
CVE-2015-9251
CVE-2019-11358
CVE-2020-7656
CVE-2012-6708
</otherinfo>
								</instance>
							
							
								<instance>
									<uri>http://lab.awh.zdresearch.com/chapter2/xvwa/js/bootstrap.min.js</uri>
									<method>GET</method>
									<param></param>
									<attack></attack>
									<evidence>* Bootstrap v3.3.4</evidence>
									<otherinfo>CVE-2019-8331
CVE-2018-14041
CVE-2018-20677
CVE-2018-20676
CVE-2018-14042
CVE-2016-10735
</otherinfo>
								</instance>
							
							
								<instance>
									<uri>http://lab.awh.zdresearch.com/chapter2/xvwa/js/jquery.js</uri>
									<method>GET</method>
									<param></param>
									<attack></attack>
									<evidence>/*! jQuery v1.11.1</evidence>
									<otherinfo>CVE-2020-11023
CVE-2020-11022
CVE-2015-9251
CVE-2019-11358
</otherinfo>
								</instance>
							
							
								<instance>
									<uri>http://lab.awh.zdresearch.com/chapter3/xss-labs/assets/js/bootstrap.js</uri>
									<method>GET</method>
									<param></param>
									<attack></attack>
									<evidence>* Bootstrap v3.3.1</evidence>
									<otherinfo>CVE-2019-8331
CVE-2018-14041
CVE-2018-20677
CVE-2018-20676
CVE-2018-14042
CVE-2016-10735
</otherinfo>
								</instance>
							
							
								<instance>
									<uri>http://lab.awh.zdresearch.com/chapter3/xss-labs/assets/js/jquery-1.11.1.js</uri>
									<method>GET</method>
									<param></param>
									<attack></attack>
									<evidence>jquery-1.11.1.js</evidence>
									<otherinfo>CVE-2020-11023
CVE-2020-11022
CVE-2015-9251
CVE-2019-11358
</otherinfo>
								</instance>
							
						</instances>
						<count>7</count>
						<solution>&lt;p&gt;Please upgrade to the latest version of jquery.&lt;/p&gt;</solution>
						<otherinfo>&lt;p&gt;CVE-2020-11023&lt;/p&gt;&lt;p&gt;CVE-2020-11022&lt;/p&gt;&lt;p&gt;CVE-2015-9251&lt;/p&gt;&lt;p&gt;CVE-2019-11358&lt;/p&gt;&lt;p&gt;CVE-2020-7656&lt;/p&gt;&lt;p&gt;CVE-2012-6708&lt;/p&gt;&lt;p&gt;&lt;/p&gt;</otherinfo>
						<reference>&lt;p&gt;https://nvd.nist.gov/vuln/detail/CVE-2012-6708&lt;/p&gt;&lt;p&gt;https://github.com/jquery/jquery/issues/2432&lt;/p&gt;&lt;p&gt;http://research.insecurelabs.org/jquery/test/&lt;/p&gt;&lt;p&gt;https://nvd.nist.gov/vuln/detail/CVE-2019-11358&lt;/p&gt;&lt;p&gt;https://bugs.jquery.com/ticket/11974&lt;/p&gt;&lt;p&gt;https://github.com/jquery/jquery.com/issues/162&lt;/p&gt;&lt;p&gt;https://nvd.nist.gov/vuln/detail/CVE-2020-7656&lt;/p&gt;&lt;p&gt;http://blog.jquery.com/2016/01/08/jquery-2-2-and-1-12-released/&lt;/p&gt;&lt;p&gt;http://bugs.jquery.com/ticket/11290&lt;/p&gt;&lt;p&gt;https://blog.jquery.com/2019/04/10/jquery-3-4-0-released/&lt;/p&gt;&lt;p&gt;https://nvd.nist.gov/vuln/detail/CVE-2015-9251&lt;/p&gt;&lt;p&gt;https://github.com/advisories/GHSA-q4m3-2j7h-f7xw&lt;/p&gt;&lt;p&gt;https://github.com/jquery/jquery/commit/753d591aea698e57d6db58c9f722cd0808619b1b&lt;/p&gt;&lt;p&gt;https://blog.jquery.com/2020/04/10/jquery-3-5-0-released/&lt;/p&gt;&lt;p&gt;&lt;/p&gt;</reference>
						<cweid>829</cweid>
						<wascid>-1</wascid>
						<sourceid>1334</sourceid>
					</alertitem>
				
				
					<alertitem>
						<pluginid>10105</pluginid>
						<alertRef>10105</alertRef>
						<alert>Weak Authentication Method</alert>
						<name>Weak Authentication Method</name>
						<riskcode>2</riskcode>
						<confidence>2</confidence>
						<riskdesc>Medium (Medium)</riskdesc>
						<confidencedesc>Medium</confidencedesc>
						<desc>&lt;p&gt;HTTP basic or digest authentication has been used over an unsecured connection. The credentials can be read and then reused by someone with access to the network.&lt;/p&gt;</desc>
						<instances>
							
								<instance>
									<uri>http://lab.awh.zdresearch.com/WebGoat/attack</uri>
									<method>GET</method>
									<param></param>
									<attack></attack>
									<evidence>www-authenticate: Basic realm=&quot;WebGoat Application&quot;</evidence>
									<otherinfo></otherinfo>
								</instance>
							
							
								<instance>
									<uri>http://lab.awh.zdresearch.com/WebGoat53/attack</uri>
									<method>GET</method>
									<param></param>
									<attack></attack>
									<evidence>www-authenticate: Basic realm=&quot;WebGoat Application&quot;</evidence>
									<otherinfo></otherinfo>
								</instance>
							
						</instances>
						<count>2</count>
						<solution>&lt;p&gt;Protect the connection using HTTPS or use a stronger authentication mechanism&lt;/p&gt;</solution>
						<otherinfo></otherinfo>
						<reference>&lt;p&gt;https://cheatsheetseries.owasp.org/cheatsheets/Authentication_Cheat_Sheet.html&lt;/p&gt;</reference>
						<cweid>326</cweid>
						<wascid>4</wascid>
						<sourceid>94</sourceid>
					</alertitem>
				
				
					<alertitem>
						<pluginid>10010</pluginid>
						<alertRef>10010</alertRef>
						<alert>Cookie No HttpOnly Flag</alert>
						<name>Cookie No HttpOnly Flag</name>
						<riskcode>1</riskcode>
						<confidence>2</confidence>
						<riskdesc>Low (Medium)</riskdesc>
						<confidencedesc>Medium</confidencedesc>
						<desc>&lt;p&gt;A cookie has been set without the HttpOnly flag, which means that the cookie can be accessed by JavaScript. If a malicious script can be run on this page then the cookie will be accessible and can be transmitted to another site. If this is a session cookie then session hijacking may be possible.&lt;/p&gt;</desc>
						<instances>
							
								<instance>
									<uri>http://lab.awh.zdresearch.com/chapter1/DVWA/</uri>
									<method>GET</method>
									<param>PHPSESSID</param>
									<attack></attack>
									<evidence>Set-Cookie: PHPSESSID</evidence>
									<otherinfo></otherinfo>
								</instance>
							
							
								<instance>
									<uri>http://lab.awh.zdresearch.com/chapter1/DVWA/</uri>
									<method>GET</method>
									<param>security</param>
									<attack></attack>
									<evidence>Set-Cookie: security</evidence>
									<otherinfo></otherinfo>
								</instance>
							
							
								<instance>
									<uri>http://lab.awh.zdresearch.com/chapter1/oscommerce-2.3.3.4/</uri>
									<method>GET</method>
									<param>osCsid</param>
									<attack></attack>
									<evidence>Set-Cookie: osCsid</evidence>
									<otherinfo></otherinfo>
								</instance>
							
							
								<instance>
									<uri>http://lab.awh.zdresearch.com/chapter2/bWAPP/bWAPP/login.php</uri>
									<method>GET</method>
									<param>PHPSESSID</param>
									<attack></attack>
									<evidence>Set-Cookie: PHPSESSID</evidence>
									<otherinfo></otherinfo>
								</instance>
							
							
								<instance>
									<uri>http://lab.awh.zdresearch.com/chapter2/mutillidae/</uri>
									<method>GET</method>
									<param>showhints</param>
									<attack></attack>
									<evidence>Set-Cookie: showhints</evidence>
									<otherinfo></otherinfo>
								</instance>
							
							
								<instance>
									<uri>http://lab.awh.zdresearch.com/chapter2/phpmyfaq/</uri>
									<method>GET</method>
									<param>pmf_sid</param>
									<attack></attack>
									<evidence>Set-Cookie: pmf_sid</evidence>
									<otherinfo></otherinfo>
								</instance>
							
							
								<instance>
									<uri>http://lab.awh.zdresearch.com/chapter4/DVWA/</uri>
									<method>GET</method>
									<param>PHPSESSID</param>
									<attack></attack>
									<evidence>Set-Cookie: PHPSESSID</evidence>
									<otherinfo></otherinfo>
								</instance>
							
							
								<instance>
									<uri>http://lab.awh.zdresearch.com/chapter4/DVWA/</uri>
									<method>GET</method>
									<param>security</param>
									<attack></attack>
									<evidence>Set-Cookie: security</evidence>
									<otherinfo></otherinfo>
								</instance>
							
							
								<instance>
									<uri>http://lab.awh.zdresearch.com/chapter8/DVWA/</uri>
									<method>GET</method>
									<param>PHPSESSID</param>
									<attack></attack>
									<evidence>Set-Cookie: PHPSESSID</evidence>
									<otherinfo></otherinfo>
								</instance>
							
							
								<instance>
									<uri>http://lab.awh.zdresearch.com/chapter8/DVWA/</uri>
									<method>GET</method>
									<param>security</param>
									<attack></attack>
									<evidence>Set-Cookie: security</evidence>
									<otherinfo></otherinfo>
								</instance>
							
							
								<instance>
									<uri>http://lab.awh.zdresearch.com/websheep/csrf</uri>
									<method>GET</method>
									<param>id_token</param>
									<attack></attack>
									<evidence>Set-Cookie: id_token</evidence>
									<otherinfo></otherinfo>
								</instance>
							
						</instances>
						<count>11</count>
						<solution>&lt;p&gt;Ensure that the HttpOnly flag is set for all cookies.&lt;/p&gt;</solution>
						<otherinfo></otherinfo>
						<reference>&lt;p&gt;https://owasp.org/www-community/HttpOnly&lt;/p&gt;</reference>
						<cweid>1004</cweid>
						<wascid>13</wascid>
						<sourceid>537</sourceid>
					</alertitem>
				
				
					<alertitem>
						<pluginid>10054</pluginid>
						<alertRef>10054</alertRef>
						<alert>Cookie without SameSite Attribute</alert>
						<name>Cookie without SameSite Attribute</name>
						<riskcode>1</riskcode>
						<confidence>2</confidence>
						<riskdesc>Low (Medium)</riskdesc>
						<confidencedesc>Medium</confidencedesc>
						<desc>&lt;p&gt;A cookie has been set without the SameSite attribute, which means that the cookie can be sent as a result of a &apos;cross-site&apos; request. The SameSite attribute is an effective counter measure to cross-site request forgery, cross-site script inclusion, and timing attacks.&lt;/p&gt;</desc>
						<instances>
							
								<instance>
									<uri>http://lab.awh.zdresearch.com/chapter1/DVWA/</uri>
									<method>GET</method>
									<param>PHPSESSID</param>
									<attack></attack>
									<evidence>Set-Cookie: PHPSESSID</evidence>
									<otherinfo></otherinfo>
								</instance>
							
							
								<instance>
									<uri>http://lab.awh.zdresearch.com/chapter1/DVWA/</uri>
									<method>GET</method>
									<param>security</param>
									<attack></attack>
									<evidence>Set-Cookie: security</evidence>
									<otherinfo></otherinfo>
								</instance>
							
							
								<instance>
									<uri>http://lab.awh.zdresearch.com/chapter2/bWAPP/bWAPP/login.php</uri>
									<method>GET</method>
									<param>PHPSESSID</param>
									<attack></attack>
									<evidence>Set-Cookie: PHPSESSID</evidence>
									<otherinfo></otherinfo>
								</instance>
							
							
								<instance>
									<uri>http://lab.awh.zdresearch.com/chapter2/DVWA/</uri>
									<method>GET</method>
									<param>PHPSESSID</param>
									<attack></attack>
									<evidence>Set-Cookie: PHPSESSID</evidence>
									<otherinfo></otherinfo>
								</instance>
							
							
								<instance>
									<uri>http://lab.awh.zdresearch.com/chapter2/DVWA/</uri>
									<method>GET</method>
									<param>security</param>
									<attack></attack>
									<evidence>Set-Cookie: security</evidence>
									<otherinfo></otherinfo>
								</instance>
							
							
								<instance>
									<uri>http://lab.awh.zdresearch.com/chapter2/joomla3.0.2/</uri>
									<method>GET</method>
									<param>d0024895f94de0a445c5843788fdff59</param>
									<attack></attack>
									<evidence>Set-Cookie: d0024895f94de0a445c5843788fdff59</evidence>
									<otherinfo></otherinfo>
								</instance>
							
							
								<instance>
									<uri>http://lab.awh.zdresearch.com/chapter2/mutillidae/</uri>
									<method>GET</method>
									<param>showhints</param>
									<attack></attack>
									<evidence>Set-Cookie: showhints</evidence>
									<otherinfo></otherinfo>
								</instance>
							
							
								<instance>
									<uri>http://lab.awh.zdresearch.com/chapter2/phpmyfaq/</uri>
									<method>GET</method>
									<param>pmf_sid</param>
									<attack></attack>
									<evidence>Set-Cookie: pmf_sid</evidence>
									<otherinfo></otherinfo>
								</instance>
							
							
								<instance>
									<uri>http://lab.awh.zdresearch.com/chapter3/DVWA/</uri>
									<method>GET</method>
									<param>PHPSESSID</param>
									<attack></attack>
									<evidence>Set-Cookie: PHPSESSID</evidence>
									<otherinfo></otherinfo>
								</instance>
							
							
								<instance>
									<uri>http://lab.awh.zdresearch.com/chapter3/DVWA/</uri>
									<method>GET</method>
									<param>security</param>
									<attack></attack>
									<evidence>Set-Cookie: security</evidence>
									<otherinfo></otherinfo>
								</instance>
							
							
								<instance>
									<uri>http://lab.awh.zdresearch.com/websheep/csrf</uri>
									<method>GET</method>
									<param>id_token</param>
									<attack></attack>
									<evidence>Set-Cookie: id_token</evidence>
									<otherinfo></otherinfo>
								</instance>
							
						</instances>
						<count>11</count>
						<solution>&lt;p&gt;Ensure that the SameSite attribute is set to either &apos;lax&apos; or ideally &apos;strict&apos; for all cookies.&lt;/p&gt;</solution>
						<otherinfo></otherinfo>
						<reference>&lt;p&gt;https://tools.ietf.org/html/draft-ietf-httpbis-cookie-same-site&lt;/p&gt;</reference>
						<cweid>1275</cweid>
						<wascid>13</wascid>
						<sourceid>537</sourceid>
					</alertitem>
				
				
					<alertitem>
						<pluginid>10017</pluginid>
						<alertRef>10017</alertRef>
						<alert>Cross-Domain JavaScript Source File Inclusion</alert>
						<name>Cross-Domain JavaScript Source File Inclusion</name>
						<riskcode>1</riskcode>
						<confidence>2</confidence>
						<riskdesc>Low (Medium)</riskdesc>
						<confidencedesc>Medium</confidencedesc>
						<desc>&lt;p&gt;The page includes one or more script files from a third-party domain.&lt;/p&gt;</desc>
						<instances>
							
								<instance>
									<uri>http://lab.awh.zdresearch.com/chapter2/phpmyfaq/</uri>
									<method>GET</method>
									<param>http://lab.awh.exdemy.com/chapter2/phpmyfaq/assets/js/modernizr.min.js</param>
									<attack></attack>
									<evidence>&lt;script src=&quot;http://lab.awh.exdemy.com/chapter2/phpmyfaq/assets/js/modernizr.min.js&quot;&gt;&lt;/script&gt;</evidence>
									<otherinfo></otherinfo>
								</instance>
							
							
								<instance>
									<uri>http://lab.awh.zdresearch.com/chapter2/phpmyfaq/</uri>
									<method>GET</method>
									<param>http://lab.awh.exdemy.com/chapter2/phpmyfaq/assets/js/phpmyfaq.min.js</param>
									<attack></attack>
									<evidence>&lt;script src=&quot;http://lab.awh.exdemy.com/chapter2/phpmyfaq/assets/js/phpmyfaq.min.js&quot;&gt;&lt;/script&gt;</evidence>
									<otherinfo></otherinfo>
								</instance>
							
							
								<instance>
									<uri>http://lab.awh.zdresearch.com/chapter2/xvwa/</uri>
									<method>GET</method>
									<param>https://oss.maxcdn.com/libs/html5shiv/3.7.0/html5shiv.js</param>
									<attack></attack>
									<evidence>&lt;script src=&quot;https://oss.maxcdn.com/libs/html5shiv/3.7.0/html5shiv.js&quot;&gt;&lt;/script&gt;</evidence>
									<otherinfo></otherinfo>
								</instance>
							
							
								<instance>
									<uri>http://lab.awh.zdresearch.com/chapter2/xvwa/</uri>
									<method>GET</method>
									<param>https://oss.maxcdn.com/libs/respond.js/1.4.2/respond.min.js</param>
									<attack></attack>
									<evidence>&lt;script src=&quot;https://oss.maxcdn.com/libs/respond.js/1.4.2/respond.min.js&quot;&gt;&lt;/script&gt;</evidence>
									<otherinfo></otherinfo>
								</instance>
							
							
								<instance>
									<uri>http://lab.awh.zdresearch.com/chapter2/xvwa/instruction.php</uri>
									<method>GET</method>
									<param>https://oss.maxcdn.com/libs/html5shiv/3.7.0/html5shiv.js</param>
									<attack></attack>
									<evidence>&lt;script src=&quot;https://oss.maxcdn.com/libs/html5shiv/3.7.0/html5shiv.js&quot;&gt;&lt;/script&gt;</evidence>
									<otherinfo></otherinfo>
								</instance>
							
							
								<instance>
									<uri>http://lab.awh.zdresearch.com/chapter2/xvwa/instruction.php</uri>
									<method>GET</method>
									<param>https://oss.maxcdn.com/libs/respond.js/1.4.2/respond.min.js</param>
									<attack></attack>
									<evidence>&lt;script src=&quot;https://oss.maxcdn.com/libs/respond.js/1.4.2/respond.min.js&quot;&gt;&lt;/script&gt;</evidence>
									<otherinfo></otherinfo>
								</instance>
							
							
								<instance>
									<uri>http://lab.awh.zdresearch.com/chapter2/xvwa/setup/</uri>
									<method>GET</method>
									<param>https://oss.maxcdn.com/libs/html5shiv/3.7.0/html5shiv.js</param>
									<attack></attack>
									<evidence>&lt;script src=&quot;https://oss.maxcdn.com/libs/html5shiv/3.7.0/html5shiv.js&quot;&gt;&lt;/script&gt;</evidence>
									<otherinfo></otherinfo>
								</instance>
							
							
								<instance>
									<uri>http://lab.awh.zdresearch.com/chapter2/xvwa/setup/</uri>
									<method>GET</method>
									<param>https://oss.maxcdn.com/libs/respond.js/1.4.2/respond.min.js</param>
									<attack></attack>
									<evidence>&lt;script src=&quot;https://oss.maxcdn.com/libs/respond.js/1.4.2/respond.min.js&quot;&gt;&lt;/script&gt;</evidence>
									<otherinfo></otherinfo>
								</instance>
							
							
								<instance>
									<uri>http://lab.awh.zdresearch.com/chapter2/xvwa/vulnerabilities/formula_injection/</uri>
									<method>GET</method>
									<param>https://oss.maxcdn.com/libs/html5shiv/3.7.0/html5shiv.js</param>
									<attack></attack>
									<evidence>&lt;script src=&quot;https://oss.maxcdn.com/libs/html5shiv/3.7.0/html5shiv.js&quot;&gt;&lt;/script&gt;</evidence>
									<otherinfo></otherinfo>
								</instance>
							
							
								<instance>
									<uri>http://lab.awh.zdresearch.com/chapter2/xvwa/vulnerabilities/formula_injection/</uri>
									<method>GET</method>
									<param>https://oss.maxcdn.com/libs/respond.js/1.4.2/respond.min.js</param>
									<attack></attack>
									<evidence>&lt;script src=&quot;https://oss.maxcdn.com/libs/respond.js/1.4.2/respond.min.js&quot;&gt;&lt;/script&gt;</evidence>
									<otherinfo></otherinfo>
								</instance>
							
							
								<instance>
									<uri>http://lab.awh.zdresearch.com/chapter2/xvwa/vulnerabilities/sqli/</uri>
									<method>GET</method>
									<param>https://oss.maxcdn.com/libs/html5shiv/3.7.0/html5shiv.js</param>
									<attack></attack>
									<evidence>&lt;script src=&quot;https://oss.maxcdn.com/libs/html5shiv/3.7.0/html5shiv.js&quot;&gt;&lt;/script&gt;</evidence>
									<otherinfo></otherinfo>
								</instance>
							
							
								<instance>
									<uri>http://lab.awh.zdresearch.com/chapter2/xvwa/vulnerabilities/sqli/</uri>
									<method>GET</method>
									<param>https://oss.maxcdn.com/libs/respond.js/1.4.2/respond.min.js</param>
									<attack></attack>
									<evidence>&lt;script src=&quot;https://oss.maxcdn.com/libs/respond.js/1.4.2/respond.min.js&quot;&gt;&lt;/script&gt;</evidence>
									<otherinfo></otherinfo>
								</instance>
							
							
								<instance>
									<uri>http://lab.awh.zdresearch.com/chapter3/AngularJS-mXSS/</uri>
									<method>GET</method>
									<param>https://ajax.googleapis.com/ajax/libs/angularjs/1.2.16/angular.min.js</param>
									<attack></attack>
									<evidence>&lt;script src=&quot;https://ajax.googleapis.com/ajax/libs/angularjs/1.2.16/angular.min.js&quot;&gt;&lt;/script&gt;</evidence>
									<otherinfo></otherinfo>
								</instance>
							
						</instances>
						<count>13</count>
						<solution>&lt;p&gt;Ensure JavaScript source files are loaded from only trusted sources, and the sources can&apos;t be controlled by end users of the application.&lt;/p&gt;</solution>
						<otherinfo></otherinfo>
						<reference></reference>
						<cweid>829</cweid>
						<wascid>15</wascid>
						<sourceid>566</sourceid>
					</alertitem>
				
				
					<alertitem>
						<pluginid>10110</pluginid>
						<alertRef>10110</alertRef>
						<alert>Dangerous JS Functions</alert>
						<name>Dangerous JS Functions</name>
						<riskcode>1</riskcode>
						<confidence>1</confidence>
						<riskdesc>Low (Low)</riskdesc>
						<confidencedesc>Low</confidencedesc>
						<desc>&lt;p&gt;A dangerous JS function seems to be in use that would leave the site vulnerable.&lt;/p&gt;</desc>
						<instances>
							
								<instance>
									<uri>http://lab.awh.zdresearch.com/chapter2/joomla3.0.2/media/jui/js/jquery.min.js</uri>
									<method>GET</method>
									<param></param>
									<attack></attack>
									<evidence>eval</evidence>
									<otherinfo></otherinfo>
								</instance>
							
							
								<instance>
									<uri>http://lab.awh.zdresearch.com/chapter2/joomla3.0.2/media/system/js/mootools-core.js</uri>
									<method>GET</method>
									<param></param>
									<attack></attack>
									<evidence>eval</evidence>
									<otherinfo></otherinfo>
								</instance>
							
							
								<instance>
									<uri>http://lab.awh.zdresearch.com/chapter2/mutillidae/javascript/ddsmoothmenu/jquery.min.js</uri>
									<method>GET</method>
									<param></param>
									<attack></attack>
									<evidence>eval</evidence>
									<otherinfo></otherinfo>
								</instance>
							
							
								<instance>
									<uri>http://lab.awh.zdresearch.com/chapter2/mutillidae/javascript/jQuery/jquery.js</uri>
									<method>GET</method>
									<param></param>
									<attack></attack>
									<evidence>eval</evidence>
									<otherinfo></otherinfo>
								</instance>
							
							
								<instance>
									<uri>http://lab.awh.zdresearch.com/chapter2/xvwa/js/jquery.js</uri>
									<method>GET</method>
									<param></param>
									<attack></attack>
									<evidence>eval</evidence>
									<otherinfo></otherinfo>
								</instance>
							
							
								<instance>
									<uri>http://lab.awh.zdresearch.com/chapter3/xss-labs/assets/js/jquery-1.11.1.js</uri>
									<method>GET</method>
									<param></param>
									<attack></attack>
									<evidence>eval</evidence>
									<otherinfo></otherinfo>
								</instance>
							
						</instances>
						<count>6</count>
						<solution>&lt;p&gt;See the references for security advice on the use of these functions.&lt;/p&gt;</solution>
						<otherinfo></otherinfo>
						<reference>&lt;p&gt;https://angular.io/guide/security&lt;/p&gt;</reference>
						<cweid>749</cweid>
						<wascid>-1</wascid>
						<sourceid>1334</sourceid>
					</alertitem>
				
				
					<alertitem>
						<pluginid>10009</pluginid>
						<alertRef>10009</alertRef>
						<alert>In Page Banner Information Leak</alert>
						<name>In Page Banner Information Leak</name>
						<riskcode>1</riskcode>
						<confidence>3</confidence>
						<riskdesc>Low (High)</riskdesc>
						<confidencedesc>High</confidencedesc>
						<desc>&lt;p&gt;The server returned a version banner string in the response content. Such information leaks may allow attackers to further target specific issues impacting the product and version in use.&lt;/p&gt;</desc>
						<instances>
							
								<instance>
									<uri>http://lab.awh.zdresearch.com/chapter1/chapter1</uri>
									<method>GET</method>
									<param></param>
									<attack></attack>
									<evidence>Apache/2.4.25</evidence>
									<otherinfo>There is a chance that the highlight in the finding is on a value in the headers, versus the actual matched string in the response body.</otherinfo>
								</instance>
							
							
								<instance>
									<uri>http://lab.awh.zdresearch.com/chapter2/xvwa/setup/instruction.php</uri>
									<method>GET</method>
									<param></param>
									<attack></attack>
									<evidence>Apache/2.4.25</evidence>
									<otherinfo>There is a chance that the highlight in the finding is on a value in the headers, versus the actual matched string in the response body.</otherinfo>
								</instance>
							
							
								<instance>
									<uri>http://lab.awh.zdresearch.com/chapter2/xvwa/setup/setup/</uri>
									<method>GET</method>
									<param></param>
									<attack></attack>
									<evidence>Apache/2.4.25</evidence>
									<otherinfo>There is a chance that the highlight in the finding is on a value in the headers, versus the actual matched string in the response body.</otherinfo>
								</instance>
							
							
								<instance>
									<uri>http://lab.awh.zdresearch.com/chapter2/xvwa/vulnerabilities/sqli/instruction.php</uri>
									<method>GET</method>
									<param></param>
									<attack></attack>
									<evidence>Apache/2.4.25</evidence>
									<otherinfo>There is a chance that the highlight in the finding is on a value in the headers, versus the actual matched string in the response body.</otherinfo>
								</instance>
							
							
								<instance>
									<uri>http://lab.awh.zdresearch.com/chapter2/xvwa/vulnerabilities/sqli/setup/</uri>
									<method>GET</method>
									<param></param>
									<attack></attack>
									<evidence>Apache/2.4.25</evidence>
									<otherinfo>There is a chance that the highlight in the finding is on a value in the headers, versus the actual matched string in the response body.</otherinfo>
								</instance>
							
							
								<instance>
									<uri>http://lab.awh.zdresearch.com/chapter3/xss-labs/types/mutation.php</uri>
									<method>GET</method>
									<param></param>
									<attack></attack>
									<evidence>Apache/2.4.25</evidence>
									<otherinfo>There is a chance that the highlight in the finding is on a value in the headers, versus the actual matched string in the response body.</otherinfo>
								</instance>
							
							
								<instance>
									<uri>http://lab.awh.zdresearch.com/chapter3/xss-labs/types/stored.php</uri>
									<method>GET</method>
									<param></param>
									<attack></attack>
									<evidence>Apache/2.4.25</evidence>
									<otherinfo>There is a chance that the highlight in the finding is on a value in the headers, versus the actual matched string in the response body.</otherinfo>
								</instance>
							
							
								<instance>
									<uri>http://lab.awh.zdresearch.com/documentation/mutillidae-test-scripts.txt</uri>
									<method>GET</method>
									<param></param>
									<attack></attack>
									<evidence>Apache/2.4.25</evidence>
									<otherinfo>There is a chance that the highlight in the finding is on a value in the headers, versus the actual matched string in the response body.</otherinfo>
								</instance>
							
							
								<instance>
									<uri>http://lab.awh.zdresearch.com/robots.txt</uri>
									<method>GET</method>
									<param></param>
									<attack></attack>
									<evidence>Apache/2.4.25</evidence>
									<otherinfo>There is a chance that the highlight in the finding is on a value in the headers, versus the actual matched string in the response body.</otherinfo>
								</instance>
							
							
								<instance>
									<uri>http://lab.awh.zdresearch.com/sitemap.xml</uri>
									<method>GET</method>
									<param></param>
									<attack></attack>
									<evidence>Apache/2.4.25</evidence>
									<otherinfo>There is a chance that the highlight in the finding is on a value in the headers, versus the actual matched string in the response body.</otherinfo>
								</instance>
							
							
								<instance>
									<uri>http://lab.awh.zdresearch.com/WebGoat/attack</uri>
									<method>GET</method>
									<param></param>
									<attack></attack>
									<evidence>Tomcat/5.5.4</evidence>
									<otherinfo>There is a chance that the highlight in the finding is on a value in the headers, versus the actual matched string in the response body.</otherinfo>
								</instance>
							
							
								<instance>
									<uri>http://lab.awh.zdresearch.com/WebGoat53/attack</uri>
									<method>GET</method>
									<param></param>
									<attack></attack>
									<evidence>Tomcat/5.5.28</evidence>
									<otherinfo>There is a chance that the highlight in the finding is on a value in the headers, versus the actual matched string in the response body.</otherinfo>
								</instance>
							
						</instances>
						<count>12</count>
						<solution>&lt;p&gt;Configure the server to prevent such information leaks. For example:&lt;/p&gt;&lt;p&gt;Under Tomcat this is done via the &quot;server&quot; directive and implementation of custom error pages.&lt;/p&gt;&lt;p&gt;Under Apache this is done via the &quot;ServerSignature&quot; and &quot;ServerTokens&quot; directives.&lt;/p&gt;</solution>
						<otherinfo>&lt;p&gt;There is a chance that the highlight in the finding is on a value in the headers, versus the actual matched string in the response body.&lt;/p&gt;</otherinfo>
						<reference>&lt;p&gt;https://owasp.org/www-project-web-security-testing-guide/v41/4-Web_Application_Security_Testing/08-Testing_for_Error_Handling/&lt;/p&gt;</reference>
						<cweid>200</cweid>
						<wascid>13</wascid>
						<sourceid>1341</sourceid>
					</alertitem>
				
				
					<alertitem>
						<pluginid>10023</pluginid>
						<alertRef>10023</alertRef>
						<alert>Information Disclosure - Debug Error Messages</alert>
						<name>Information Disclosure - Debug Error Messages</name>
						<riskcode>1</riskcode>
						<confidence>2</confidence>
						<riskdesc>Low (Medium)</riskdesc>
						<confidencedesc>Medium</confidencedesc>
						<desc>&lt;p&gt;The response appeared to contain common error messages returned by platforms such as ASP.NET, and Web-servers such as IIS and Apache. You can configure the list of common debug messages.&lt;/p&gt;</desc>
						<instances>
							
								<instance>
									<uri>http://lab.awh.zdresearch.com/chapter2/mutillidae/</uri>
									<method>GET</method>
									<param></param>
									<attack></attack>
									<evidence>PHP error</evidence>
									<otherinfo></otherinfo>
								</instance>
							
							
								<instance>
									<uri>http://lab.awh.zdresearch.com/chapter2/mutillidae/index.php?page=home.php&amp;popUpNotificationCode=HPH0</uri>
									<method>GET</method>
									<param></param>
									<attack></attack>
									<evidence>PHP error</evidence>
									<otherinfo></otherinfo>
								</instance>
							
							
								<instance>
									<uri>http://lab.awh.zdresearch.com/chapter2/xvwa/vulnerabilities/formula_injection/export.php</uri>
									<method>POST</method>
									<param></param>
									<attack></attack>
									<evidence>Access denied for user</evidence>
									<otherinfo></otherinfo>
								</instance>
							
						</instances>
						<count>3</count>
						<solution>&lt;p&gt;Disable debugging messages before pushing to production.&lt;/p&gt;</solution>
						<otherinfo></otherinfo>
						<reference></reference>
						<cweid>200</cweid>
						<wascid>13</wascid>
						<sourceid>275</sourceid>
					</alertitem>
				
				
					<alertitem>
						<pluginid>10063</pluginid>
						<alertRef>10063-1</alertRef>
						<alert>Permissions Policy Header Not Set</alert>
						<name>Permissions Policy Header Not Set</name>
						<riskcode>1</riskcode>
						<confidence>2</confidence>
						<riskdesc>Low (Medium)</riskdesc>
						<confidencedesc>Medium</confidencedesc>
						<desc>&lt;p&gt;Permissions Policy Header is an added layer of security that helps to restrict from unauthorized access or usage of browser/client features by web resources. This policy ensures the user privacy by limiting or specifying the features of the browsers can be used by the web resources. Permissions Policy provides a set of standard HTTP headers that allow website owners to limit which features of browsers can be used by the page such as camera, microphone, location, full screen etc.&lt;/p&gt;</desc>
						<instances>
							
								<instance>
									<uri>http://lab.awh.zdresearch.com/</uri>
									<method>GET</method>
									<param></param>
									<attack></attack>
									<evidence></evidence>
									<otherinfo></otherinfo>
								</instance>
							
							
								<instance>
									<uri>http://lab.awh.zdresearch.com/chapter2/</uri>
									<method>GET</method>
									<param></param>
									<attack></attack>
									<evidence></evidence>
									<otherinfo></otherinfo>
								</instance>
							
							
								<instance>
									<uri>http://lab.awh.zdresearch.com/chapter2/bWAPP/</uri>
									<method>GET</method>
									<param></param>
									<attack></attack>
									<evidence></evidence>
									<otherinfo></otherinfo>
								</instance>
							
							
								<instance>
									<uri>http://lab.awh.zdresearch.com/chapter2/bWAPP/bWAPP/login.php</uri>
									<method>GET</method>
									<param></param>
									<attack></attack>
									<evidence></evidence>
									<otherinfo></otherinfo>
								</instance>
							
							
								<instance>
									<uri>http://lab.awh.zdresearch.com/chapter2/bWAPP/bWAPP/user_new.php</uri>
									<method>GET</method>
									<param></param>
									<attack></attack>
									<evidence></evidence>
									<otherinfo></otherinfo>
								</instance>
							
							
								<instance>
									<uri>http://lab.awh.zdresearch.com/robots.txt</uri>
									<method>GET</method>
									<param></param>
									<attack></attack>
									<evidence></evidence>
									<otherinfo></otherinfo>
								</instance>
							
							
								<instance>
									<uri>http://lab.awh.zdresearch.com/sitemap.xml</uri>
									<method>GET</method>
									<param></param>
									<attack></attack>
									<evidence></evidence>
									<otherinfo></otherinfo>
								</instance>
							
							
								<instance>
									<uri>http://lab.awh.zdresearch.com/WebGoat/attack</uri>
									<method>GET</method>
									<param></param>
									<attack></attack>
									<evidence></evidence>
									<otherinfo></otherinfo>
								</instance>
							
							
								<instance>
									<uri>http://lab.awh.zdresearch.com/WebGoat53/attack</uri>
									<method>GET</method>
									<param></param>
									<attack></attack>
									<evidence></evidence>
									<otherinfo></otherinfo>
								</instance>
							
							
								<instance>
									<uri>http://lab.awh.zdresearch.com/websheep</uri>
									<method>GET</method>
									<param></param>
									<attack></attack>
									<evidence></evidence>
									<otherinfo></otherinfo>
								</instance>
							
						</instances>
						<count>10</count>
						<solution>&lt;p&gt;Ensure that your web server, application server, load balancer, etc. is configured to set the Permissions-Policy header.&lt;/p&gt;</solution>
						<otherinfo></otherinfo>
						<reference>&lt;p&gt;https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Feature-Policy&lt;/p&gt;&lt;p&gt;https://developers.google.com/web/updates/2018/06/feature-policy&lt;/p&gt;&lt;p&gt;https://scotthelme.co.uk/a-new-security-header-feature-policy/&lt;/p&gt;&lt;p&gt;https://w3c.github.io/webappsec-feature-policy/&lt;/p&gt;&lt;p&gt;https://www.smashingmagazine.com/2018/12/feature-policy/&lt;/p&gt;</reference>
						<cweid>693</cweid>
						<wascid>15</wascid>
						<sourceid>6</sourceid>
					</alertitem>
				
				
					<alertitem>
						<pluginid>10037</pluginid>
						<alertRef>10037</alertRef>
						<alert>Server Leaks Information via &quot;X-Powered-By&quot; HTTP Response Header Field(s)</alert>
						<name>Server Leaks Information via &quot;X-Powered-By&quot; HTTP Response Header Field(s)</name>
						<riskcode>1</riskcode>
						<confidence>2</confidence>
						<riskdesc>Low (Medium)</riskdesc>
						<confidencedesc>Medium</confidencedesc>
						<desc>&lt;p&gt;The web/application server is leaking information via one or more &quot;X-Powered-By&quot; HTTP response headers. Access to such information may facilitate attackers identifying other frameworks/components your web application is reliant upon and the vulnerabilities such components may be subject to.&lt;/p&gt;</desc>
						<instances>
							
								<instance>
									<uri>http://lab.awh.zdresearch.com/websheep</uri>
									<method>GET</method>
									<param></param>
									<attack></attack>
									<evidence>X-Powered-By: Express</evidence>
									<otherinfo></otherinfo>
								</instance>
							
							
								<instance>
									<uri>http://lab.awh.zdresearch.com/websheep/auth</uri>
									<method>GET</method>
									<param></param>
									<attack></attack>
									<evidence>X-Powered-By: Express</evidence>
									<otherinfo></otherinfo>
								</instance>
							
							
								<instance>
									<uri>http://lab.awh.zdresearch.com/websheep/auth/v1</uri>
									<method>GET</method>
									<param></param>
									<attack></attack>
									<evidence>X-Powered-By: Express</evidence>
									<otherinfo></otherinfo>
								</instance>
							
							
								<instance>
									<uri>http://lab.awh.zdresearch.com/websheep/auth/v2</uri>
									<method>GET</method>
									<param></param>
									<attack></attack>
									<evidence>X-Powered-By: Express</evidence>
									<otherinfo></otherinfo>
								</instance>
							
							
								<instance>
									<uri>http://lab.awh.zdresearch.com/websheep/code-injection</uri>
									<method>GET</method>
									<param></param>
									<attack></attack>
									<evidence>X-Powered-By: Express</evidence>
									<otherinfo></otherinfo>
								</instance>
							
							
								<instance>
									<uri>http://lab.awh.zdresearch.com/websheep/code-injection/solution</uri>
									<method>GET</method>
									<param></param>
									<attack></attack>
									<evidence>X-Powered-By: Express</evidence>
									<otherinfo></otherinfo>
								</instance>
							
							
								<instance>
									<uri>http://lab.awh.zdresearch.com/websheep/code-injection?formula=ZAP</uri>
									<method>GET</method>
									<param></param>
									<attack></attack>
									<evidence>X-Powered-By: Express</evidence>
									<otherinfo></otherinfo>
								</instance>
							
							
								<instance>
									<uri>http://lab.awh.zdresearch.com/websheep/csrf</uri>
									<method>GET</method>
									<param></param>
									<attack></attack>
									<evidence>X-Powered-By: Express</evidence>
									<otherinfo></otherinfo>
								</instance>
							
							
								<instance>
									<uri>http://lab.awh.zdresearch.com/websheep/csrf/v1</uri>
									<method>GET</method>
									<param></param>
									<attack></attack>
									<evidence>X-Powered-By: Express</evidence>
									<otherinfo></otherinfo>
								</instance>
							
							
								<instance>
									<uri>http://lab.awh.zdresearch.com/websheep/csrf/v2</uri>
									<method>GET</method>
									<param></param>
									<attack></attack>
									<evidence>X-Powered-By: Express</evidence>
									<otherinfo></otherinfo>
								</instance>
							
							
								<instance>
									<uri>http://lab.awh.zdresearch.com/websheep/csrf/v3</uri>
									<method>GET</method>
									<param></param>
									<attack></attack>
									<evidence>X-Powered-By: Express</evidence>
									<otherinfo></otherinfo>
								</instance>
							
							
								<instance>
									<uri>http://lab.awh.zdresearch.com/websheep/jwt</uri>
									<method>GET</method>
									<param></param>
									<attack></attack>
									<evidence>X-Powered-By: Express</evidence>
									<otherinfo></otherinfo>
								</instance>
							
							
								<instance>
									<uri>http://lab.awh.zdresearch.com/websheep/redos</uri>
									<method>GET</method>
									<param></param>
									<attack></attack>
									<evidence>X-Powered-By: Express</evidence>
									<otherinfo></otherinfo>
								</instance>
							
						</instances>
						<count>13</count>
						<solution>&lt;p&gt;Ensure that your web server, application server, load balancer, etc. is configured to suppress &quot;X-Powered-By&quot; headers.&lt;/p&gt;</solution>
						<otherinfo></otherinfo>
						<reference>&lt;p&gt;http://blogs.msdn.com/b/varunm/archive/2013/04/23/remove-unwanted-http-response-headers.aspx&lt;/p&gt;&lt;p&gt;http://www.troyhunt.com/2012/02/shhh-dont-let-your-response-headers.html&lt;/p&gt;</reference>
						<cweid>200</cweid>
						<wascid>13</wascid>
						<sourceid>75</sourceid>
					</alertitem>
				
				
					<alertitem>
						<pluginid>10036</pluginid>
						<alertRef>10036</alertRef>
						<alert>Server Leaks Version Information via &quot;Server&quot; HTTP Response Header Field</alert>
						<name>Server Leaks Version Information via &quot;Server&quot; HTTP Response Header Field</name>
						<riskcode>1</riskcode>
						<confidence>3</confidence>
						<riskdesc>Low (High)</riskdesc>
						<confidencedesc>High</confidencedesc>
						<desc>&lt;p&gt;The web/application server is leaking version information via the &quot;Server&quot; HTTP response header. Access to such information may facilitate attackers identifying other vulnerabilities your web/application server is subject to.&lt;/p&gt;</desc>
						<instances>
							
								<instance>
									<uri>http://lab.awh.zdresearch.com/</uri>
									<method>GET</method>
									<param></param>
									<attack></attack>
									<evidence>Apache/2.4.25 (Debian)</evidence>
									<otherinfo></otherinfo>
								</instance>
							
							
								<instance>
									<uri>http://lab.awh.zdresearch.com/chapter2</uri>
									<method>GET</method>
									<param></param>
									<attack></attack>
									<evidence>Apache/2.4.25 (Debian)</evidence>
									<otherinfo></otherinfo>
								</instance>
							
							
								<instance>
									<uri>http://lab.awh.zdresearch.com/chapter2/</uri>
									<method>GET</method>
									<param></param>
									<attack></attack>
									<evidence>Apache/2.4.25 (Debian)</evidence>
									<otherinfo></otherinfo>
								</instance>
							
							
								<instance>
									<uri>http://lab.awh.zdresearch.com/chapter2/bWAPP</uri>
									<method>GET</method>
									<param></param>
									<attack></attack>
									<evidence>Apache/2.4.25 (Debian)</evidence>
									<otherinfo></otherinfo>
								</instance>
							
							
								<instance>
									<uri>http://lab.awh.zdresearch.com/chapter2/bWAPP/</uri>
									<method>GET</method>
									<param></param>
									<attack></attack>
									<evidence>Apache/2.4.25 (Debian)</evidence>
									<otherinfo></otherinfo>
								</instance>
							
							
								<instance>
									<uri>http://lab.awh.zdresearch.com/chapter2/bWAPP/bWAPP</uri>
									<method>GET</method>
									<param></param>
									<attack></attack>
									<evidence>Apache/2.4.25 (Debian)</evidence>
									<otherinfo></otherinfo>
								</instance>
							
							
								<instance>
									<uri>http://lab.awh.zdresearch.com/chapter2/bWAPP/bWAPP/</uri>
									<method>GET</method>
									<param></param>
									<attack></attack>
									<evidence>Apache/2.4.25 (Debian)</evidence>
									<otherinfo></otherinfo>
								</instance>
							
							
								<instance>
									<uri>http://lab.awh.zdresearch.com/chapter2/bWAPP/bWAPP/login.php</uri>
									<method>GET</method>
									<param></param>
									<attack></attack>
									<evidence>Apache/2.4.25 (Debian)</evidence>
									<otherinfo></otherinfo>
								</instance>
							
							
								<instance>
									<uri>http://lab.awh.zdresearch.com/robots.txt</uri>
									<method>GET</method>
									<param></param>
									<attack></attack>
									<evidence>Apache/2.4.25 (Debian)</evidence>
									<otherinfo></otherinfo>
								</instance>
							
							
								<instance>
									<uri>http://lab.awh.zdresearch.com/sitemap.xml</uri>
									<method>GET</method>
									<param></param>
									<attack></attack>
									<evidence>Apache/2.4.25 (Debian)</evidence>
									<otherinfo></otherinfo>
								</instance>
							
						</instances>
						<count>10</count>
						<solution>&lt;p&gt;Ensure that your web server, application server, load balancer, etc. is configured to suppress the &quot;Server&quot; header or provide generic details.&lt;/p&gt;</solution>
						<otherinfo></otherinfo>
						<reference>&lt;p&gt;http://httpd.apache.org/docs/current/mod/core.html#servertokens&lt;/p&gt;&lt;p&gt;http://msdn.microsoft.com/en-us/library/ff648552.aspx#ht_urlscan_007&lt;/p&gt;&lt;p&gt;http://blogs.msdn.com/b/varunm/archive/2013/04/23/remove-unwanted-http-response-headers.aspx&lt;/p&gt;&lt;p&gt;http://www.troyhunt.com/2012/02/shhh-dont-let-your-response-headers.html&lt;/p&gt;</reference>
						<cweid>200</cweid>
						<wascid>13</wascid>
						<sourceid>15</sourceid>
					</alertitem>
				
				
					<alertitem>
						<pluginid>10096</pluginid>
						<alertRef>10096</alertRef>
						<alert>Timestamp Disclosure - Unix</alert>
						<name>Timestamp Disclosure - Unix</name>
						<riskcode>1</riskcode>
						<confidence>1</confidence>
						<riskdesc>Low (Low)</riskdesc>
						<confidencedesc>Low</confidencedesc>
						<desc>&lt;p&gt;A timestamp was disclosed by the application/web server - Unix&lt;/p&gt;</desc>
						<instances>
							
								<instance>
									<uri>http://lab.awh.zdresearch.com/chapter1/mybb-1.8.6/Upload/</uri>
									<method>GET</method>
									<param></param>
									<attack></attack>
									<evidence>1690181151</evidence>
									<otherinfo>1690181151, which evaluates to: 2023-07-24 06:45:51</otherinfo>
								</instance>
							
						</instances>
						<count>1</count>
						<solution>&lt;p&gt;Manually confirm that the timestamp data is not sensitive, and that the data cannot be aggregated to disclose exploitable patterns.&lt;/p&gt;</solution>
						<otherinfo>&lt;p&gt;1690181151, which evaluates to: 2023-07-24 06:45:51&lt;/p&gt;</otherinfo>
						<reference>&lt;p&gt;http://projects.webappsec.org/w/page/13246936/Information%20Leakage&lt;/p&gt;</reference>
						<cweid>200</cweid>
						<wascid>13</wascid>
						<sourceid>1463</sourceid>
					</alertitem>
				
				
					<alertitem>
						<pluginid>10021</pluginid>
						<alertRef>10021</alertRef>
						<alert>X-Content-Type-Options Header Missing</alert>
						<name>X-Content-Type-Options Header Missing</name>
						<riskcode>1</riskcode>
						<confidence>2</confidence>
						<riskdesc>Low (Medium)</riskdesc>
						<confidencedesc>Medium</confidencedesc>
						<desc>&lt;p&gt;The Anti-MIME-Sniffing header X-Content-Type-Options was not set to &apos;nosniff&apos;. This allows older versions of Internet Explorer and Chrome to perform MIME-sniffing on the response body, potentially causing the response body to be interpreted and displayed as a content type other than the declared content type. Current (early 2014) and legacy versions of Firefox will use the declared content type (if one is set), rather than performing MIME-sniffing.&lt;/p&gt;</desc>
						<instances>
							
								<instance>
									<uri>http://lab.awh.zdresearch.com/</uri>
									<method>GET</method>
									<param>x-content-type-options</param>
									<attack></attack>
									<evidence></evidence>
									<otherinfo>This issue still applies to error type pages (401, 403, 500, etc.) as those pages are often still affected by injection issues, in which case there is still concern for browsers sniffing pages away from their actual content type.
At &quot;High&quot; threshold this scan rule will not alert on client or server error responses.</otherinfo>
								</instance>
							
							
								<instance>
									<uri>http://lab.awh.zdresearch.com/chapter1/</uri>
									<method>GET</method>
									<param>x-content-type-options</param>
									<attack></attack>
									<evidence></evidence>
									<otherinfo>This issue still applies to error type pages (401, 403, 500, etc.) as those pages are often still affected by injection issues, in which case there is still concern for browsers sniffing pages away from their actual content type.
At &quot;High&quot; threshold this scan rule will not alert on client or server error responses.</otherinfo>
								</instance>
							
							
								<instance>
									<uri>http://lab.awh.zdresearch.com/chapter2/</uri>
									<method>GET</method>
									<param>x-content-type-options</param>
									<attack></attack>
									<evidence></evidence>
									<otherinfo>This issue still applies to error type pages (401, 403, 500, etc.) as those pages are often still affected by injection issues, in which case there is still concern for browsers sniffing pages away from their actual content type.
At &quot;High&quot; threshold this scan rule will not alert on client or server error responses.</otherinfo>
								</instance>
							
							
								<instance>
									<uri>http://lab.awh.zdresearch.com/chapter2/bWAPP/</uri>
									<method>GET</method>
									<param>x-content-type-options</param>
									<attack></attack>
									<evidence></evidence>
									<otherinfo>This issue still applies to error type pages (401, 403, 500, etc.) as those pages are often still affected by injection issues, in which case there is still concern for browsers sniffing pages away from their actual content type.
At &quot;High&quot; threshold this scan rule will not alert on client or server error responses.</otherinfo>
								</instance>
							
							
								<instance>
									<uri>http://lab.awh.zdresearch.com/chapter2/bWAPP/bWAPP/info.php</uri>
									<method>GET</method>
									<param>x-content-type-options</param>
									<attack></attack>
									<evidence></evidence>
									<otherinfo>This issue still applies to error type pages (401, 403, 500, etc.) as those pages are often still affected by injection issues, in which case there is still concern for browsers sniffing pages away from their actual content type.
At &quot;High&quot; threshold this scan rule will not alert on client or server error responses.</otherinfo>
								</instance>
							
							
								<instance>
									<uri>http://lab.awh.zdresearch.com/chapter2/bWAPP/bWAPP/login.php</uri>
									<method>GET</method>
									<param>x-content-type-options</param>
									<attack></attack>
									<evidence></evidence>
									<otherinfo>This issue still applies to error type pages (401, 403, 500, etc.) as those pages are often still affected by injection issues, in which case there is still concern for browsers sniffing pages away from their actual content type.
At &quot;High&quot; threshold this scan rule will not alert on client or server error responses.</otherinfo>
								</instance>
							
							
								<instance>
									<uri>http://lab.awh.zdresearch.com/chapter2/bWAPP/bWAPP/user_new.php</uri>
									<method>GET</method>
									<param>x-content-type-options</param>
									<attack></attack>
									<evidence></evidence>
									<otherinfo>This issue still applies to error type pages (401, 403, 500, etc.) as those pages are often still affected by injection issues, in which case there is still concern for browsers sniffing pages away from their actual content type.
At &quot;High&quot; threshold this scan rule will not alert on client or server error responses.</otherinfo>
								</instance>
							
							
								<instance>
									<uri>http://lab.awh.zdresearch.com/chapter2/xvwa/</uri>
									<method>GET</method>
									<param>x-content-type-options</param>
									<attack></attack>
									<evidence></evidence>
									<otherinfo>This issue still applies to error type pages (401, 403, 500, etc.) as those pages are often still affected by injection issues, in which case there is still concern for browsers sniffing pages away from their actual content type.
At &quot;High&quot; threshold this scan rule will not alert on client or server error responses.</otherinfo>
								</instance>
							
							
								<instance>
									<uri>http://lab.awh.zdresearch.com/chapter3/xss-labs/</uri>
									<method>GET</method>
									<param>x-content-type-options</param>
									<attack></attack>
									<evidence></evidence>
									<otherinfo>This issue still applies to error type pages (401, 403, 500, etc.) as those pages are often still affected by injection issues, in which case there is still concern for browsers sniffing pages away from their actual content type.
At &quot;High&quot; threshold this scan rule will not alert on client or server error responses.</otherinfo>
								</instance>
							
							
								<instance>
									<uri>http://lab.awh.zdresearch.com/websheep</uri>
									<method>GET</method>
									<param>x-content-type-options</param>
									<attack></attack>
									<evidence></evidence>
									<otherinfo>This issue still applies to error type pages (401, 403, 500, etc.) as those pages are often still affected by injection issues, in which case there is still concern for browsers sniffing pages away from their actual content type.
At &quot;High&quot; threshold this scan rule will not alert on client or server error responses.</otherinfo>
								</instance>
							
						</instances>
						<count>10</count>
						<solution>&lt;p&gt;Ensure that the application/web server sets the Content-Type header appropriately, and that it sets the X-Content-Type-Options header to &apos;nosniff&apos; for all web pages.&lt;/p&gt;&lt;p&gt;If possible, ensure that the end user uses a standards-compliant and modern web browser that does not perform MIME-sniffing at all, or that can be directed by the web application/web server to not perform MIME-sniffing.&lt;/p&gt;</solution>
						<otherinfo>&lt;p&gt;This issue still applies to error type pages (401, 403, 500, etc.) as those pages are often still affected by injection issues, in which case there is still concern for browsers sniffing pages away from their actual content type.&lt;/p&gt;&lt;p&gt;At &quot;High&quot; threshold this scan rule will not alert on client or server error responses.&lt;/p&gt;</otherinfo>
						<reference>&lt;p&gt;http://msdn.microsoft.com/en-us/library/ie/gg622941%28v=vs.85%29.aspx&lt;/p&gt;&lt;p&gt;https://owasp.org/www-community/Security_Headers&lt;/p&gt;</reference>
						<cweid>693</cweid>
						<wascid>15</wascid>
						<sourceid>6</sourceid>
					</alertitem>
				
				
					<alertitem>
						<pluginid>10111</pluginid>
						<alertRef>10111</alertRef>
						<alert>Authentication Request Identified</alert>
						<name>Authentication Request Identified</name>
						<riskcode>0</riskcode>
						<confidence>1</confidence>
						<riskdesc>Informational (Low)</riskdesc>
						<confidencedesc>Low</confidencedesc>
						<desc>&lt;p&gt;The given request has been identified as an authentication request. The &apos;Other Info&apos; field contains a set of key=value lines which identify any relevant fields. If the request is in a context which has an Authentication Method set to &quot;Auto-Detect&quot; then this rule will change the authentication to match the request identified.&lt;/p&gt;</desc>
						<instances>
							
								<instance>
									<uri>http://lab.awh.zdresearch.com/chapter2/bWAPP/bWAPP/user_new.php</uri>
									<method>POST</method>
									<param>email</param>
									<attack></attack>
									<evidence>password</evidence>
									<otherinfo>userParam=email
userValue=zaproxy@example.com
passwordParam=password
referer=http://lab.awh.zdresearch.com/chapter2/bWAPP/bWAPP/user_new.php</otherinfo>
								</instance>
							
							
								<instance>
									<uri>http://lab.awh.zdresearch.com/chapter2/joomla3.0.2/index.php</uri>
									<method>POST</method>
									<param>username</param>
									<attack></attack>
									<evidence>password</evidence>
									<otherinfo>userParam=username
userValue=ZAP
passwordParam=password
referer=http://lab.awh.zdresearch.com/chapter2/joomla3.0.2/</otherinfo>
								</instance>
							
							
								<instance>
									<uri>http://lab.awh.zdresearch.com/chapter1/simpledocument-1.31/login.php</uri>
									<method>POST</method>
									<param>username</param>
									<attack></attack>
									<evidence>password</evidence>
									<otherinfo>userParam=username
userValue=ZAP
passwordParam=password
referer=http://lab.awh.zdresearch.com/chapter1/simpledocument-1.31/</otherinfo>
								</instance>
							
							
								<instance>
									<uri>http://lab.awh.zdresearch.com/chapter2/bWAPP/bWAPP/login.php</uri>
									<method>POST</method>
									<param>login</param>
									<attack></attack>
									<evidence>password</evidence>
									<otherinfo>userParam=login
userValue=ZAP
passwordParam=password
referer=http://lab.awh.zdresearch.com/chapter2/bWAPP/bWAPP/login.php</otherinfo>
								</instance>
							
							
								<instance>
									<uri>http://lab.awh.zdresearch.com/chapter2/xvwa/login.php</uri>
									<method>POST</method>
									<param>username</param>
									<attack></attack>
									<evidence>password</evidence>
									<otherinfo>userParam=username
userValue=ZAP
passwordParam=password
referer=http://lab.awh.zdresearch.com/chapter2/xvwa/</otherinfo>
								</instance>
							
						</instances>
						<count>5</count>
						<solution>&lt;p&gt;This is an informational alert rather than a vulnerability and so there is nothing to fix.&lt;/p&gt;</solution>
						<otherinfo>&lt;p&gt;userParam=email&lt;/p&gt;&lt;p&gt;userValue=zaproxy@example.com&lt;/p&gt;&lt;p&gt;passwordParam=password&lt;/p&gt;&lt;p&gt;referer=http://lab.awh.zdresearch.com/chapter2/bWAPP/bWAPP/user_new.php&lt;/p&gt;</otherinfo>
						<reference>&lt;p&gt;https://www.zaproxy.org/docs/desktop/addons/authentication-helper/auth-req-id/&lt;/p&gt;</reference>
						<cweid>-1</cweid>
						<wascid>-1</wascid>
						<sourceid>571</sourceid>
					</alertitem>
				
				
					<alertitem>
						<pluginid>90011</pluginid>
						<alertRef>90011</alertRef>
						<alert>Charset Mismatch (Header Versus Meta Content-Type Charset)</alert>
						<name>Charset Mismatch (Header Versus Meta Content-Type Charset)</name>
						<riskcode>0</riskcode>
						<confidence>1</confidence>
						<riskdesc>Informational (Low)</riskdesc>
						<confidencedesc>Low</confidencedesc>
						<desc>&lt;p&gt;This check identifies responses where the HTTP Content-Type header declares a charset different from the charset defined by the body of the HTML or XML. When there&apos;s a charset mismatch between the HTTP header and content body Web browsers can be forced into an undesirable content-sniffing mode to determine the content&apos;s correct character set.&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;An attacker could manipulate content on the page to be interpreted in an encoding of their choice. For example, if an attacker can control content at the beginning of the page, they could inject script using UTF-7 encoded text and manipulate some browsers into interpreting that text.&lt;/p&gt;</desc>
						<instances>
							
								<instance>
									<uri>http://lab.awh.zdresearch.com/chapter1/Complain-Management-System/login.php</uri>
									<method>GET</method>
									<param></param>
									<attack></attack>
									<evidence></evidence>
									<otherinfo>There was a charset mismatch between the HTTP Header and the META content-type encoding declarations: [UTF-8] and [iso-8859-1] do not match.</otherinfo>
								</instance>
							
							
								<instance>
									<uri>http://lab.awh.zdresearch.com/chapter1/simpledocument-1.31/</uri>
									<method>GET</method>
									<param></param>
									<attack></attack>
									<evidence></evidence>
									<otherinfo>There was a charset mismatch between the HTTP Header and the META content-type encoding declarations: [UTF-8] and [iso-8859-1] do not match.</otherinfo>
								</instance>
							
							
								<instance>
									<uri>http://lab.awh.zdresearch.com/chapter2/mutillidae/hints-page-wrapper.php?level1HintIncludeFile=1</uri>
									<method>GET</method>
									<param></param>
									<attack></attack>
									<evidence></evidence>
									<otherinfo>There was a charset mismatch between the HTTP Header and the META content-type encoding declarations: [UTF-8] and [ISO-8859-1] do not match.</otherinfo>
								</instance>
							
							
								<instance>
									<uri>http://lab.awh.zdresearch.com/chapter2/mutillidae/hints-page-wrapper.php?level1HintIncludeFile=39</uri>
									<method>GET</method>
									<param></param>
									<attack></attack>
									<evidence></evidence>
									<otherinfo>There was a charset mismatch between the HTTP Header and the META content-type encoding declarations: [UTF-8] and [ISO-8859-1] do not match.</otherinfo>
								</instance>
							
							
								<instance>
									<uri>http://lab.awh.zdresearch.com/chapter2/mutillidae/hints-page-wrapper.php?level1HintIncludeFile=40</uri>
									<method>GET</method>
									<param></param>
									<attack></attack>
									<evidence></evidence>
									<otherinfo>There was a charset mismatch between the HTTP Header and the META content-type encoding declarations: [UTF-8] and [ISO-8859-1] do not match.</otherinfo>
								</instance>
							
							
								<instance>
									<uri>http://lab.awh.zdresearch.com/chapter2/mutillidae/hints-page-wrapper.php?level1HintIncludeFile=56</uri>
									<method>GET</method>
									<param></param>
									<attack></attack>
									<evidence></evidence>
									<otherinfo>There was a charset mismatch between the HTTP Header and the META content-type encoding declarations: [UTF-8] and [ISO-8859-1] do not match.</otherinfo>
								</instance>
							
							
								<instance>
									<uri>http://lab.awh.zdresearch.com/chapter2/mutillidae/hints-page-wrapper.php?level1HintIncludeFile=57</uri>
									<method>GET</method>
									<param></param>
									<attack></attack>
									<evidence></evidence>
									<otherinfo>There was a charset mismatch between the HTTP Header and the META content-type encoding declarations: [UTF-8] and [ISO-8859-1] do not match.</otherinfo>
								</instance>
							
							
								<instance>
									<uri>http://lab.awh.zdresearch.com/chapter2/mutillidae/hints-page-wrapper.php?level1HintIncludeFile=59</uri>
									<method>GET</method>
									<param></param>
									<attack></attack>
									<evidence></evidence>
									<otherinfo>There was a charset mismatch between the HTTP Header and the META content-type encoding declarations: [UTF-8] and [ISO-8859-1] do not match.</otherinfo>
								</instance>
							
							
								<instance>
									<uri>http://lab.awh.zdresearch.com/chapter2/mutillidae/hints-page-wrapper.php?level1HintIncludeFile=9</uri>
									<method>GET</method>
									<param></param>
									<attack></attack>
									<evidence></evidence>
									<otherinfo>There was a charset mismatch between the HTTP Header and the META content-type encoding declarations: [UTF-8] and [ISO-8859-1] do not match.</otherinfo>
								</instance>
							
						</instances>
						<count>9</count>
						<solution>&lt;p&gt;Force UTF-8 for all text content in both the HTTP header and meta tags in HTML or encoding declarations in XML.&lt;/p&gt;</solution>
						<otherinfo>&lt;p&gt;There was a charset mismatch between the HTTP Header and the META content-type encoding declarations: [UTF-8] and [iso-8859-1] do not match.&lt;/p&gt;</otherinfo>
						<reference>&lt;p&gt;http://code.google.com/p/browsersec/wiki/Part2#Character_set_handling_and_detection&lt;/p&gt;</reference>
						<cweid>436</cweid>
						<wascid>15</wascid>
						<sourceid>1428</sourceid>
					</alertitem>
				
				
					<alertitem>
						<pluginid>10019</pluginid>
						<alertRef>10019</alertRef>
						<alert>Content-Type Header Missing</alert>
						<name>Content-Type Header Missing</name>
						<riskcode>0</riskcode>
						<confidence>2</confidence>
						<riskdesc>Informational (Medium)</riskdesc>
						<confidencedesc>Medium</confidencedesc>
						<desc>&lt;p&gt;The Content-Type header was either missing or empty.&lt;/p&gt;</desc>
						<instances>
							
								<instance>
									<uri>http://lab.awh.zdresearch.com/chapter2/bWAPP/apache2/default</uri>
									<method>GET</method>
									<param></param>
									<attack></attack>
									<evidence></evidence>
									<otherinfo></otherinfo>
								</instance>
							
							
								<instance>
									<uri>http://lab.awh.zdresearch.com/chapter2/bWAPP/apache2/httpd.conf</uri>
									<method>GET</method>
									<param></param>
									<attack></attack>
									<evidence></evidence>
									<otherinfo></otherinfo>
								</instance>
							
							
								<instance>
									<uri>http://lab.awh.zdresearch.com/chapter2/bWAPP/evil/xdx.as</uri>
									<method>GET</method>
									<param></param>
									<attack></attack>
									<evidence></evidence>
									<otherinfo></otherinfo>
								</instance>
							
						</instances>
						<count>3</count>
						<solution>&lt;p&gt;Ensure each page is setting the specific and appropriate content-type value for the content being delivered.&lt;/p&gt;</solution>
						<otherinfo></otherinfo>
						<reference>&lt;p&gt;http://msdn.microsoft.com/en-us/library/ie/gg622941%28v=vs.85%29.aspx&lt;/p&gt;</reference>
						<cweid>345</cweid>
						<wascid>12</wascid>
						<sourceid>1207</sourceid>
					</alertitem>
				
				
					<alertitem>
						<pluginid>10024</pluginid>
						<alertRef>10024</alertRef>
						<alert>Information Disclosure - Sensitive Information in URL</alert>
						<name>Information Disclosure - Sensitive Information in URL</name>
						<riskcode>0</riskcode>
						<confidence>2</confidence>
						<riskdesc>Informational (Medium)</riskdesc>
						<confidencedesc>Medium</confidencedesc>
						<desc>&lt;p&gt;The request appeared to contain sensitive information leaked in the URL. This can violate PCI and most organizational compliance policies. You can configure the list of strings for this check to add or remove values specific to your environment.&lt;/p&gt;</desc>
						<instances>
							
								<instance>
									<uri>http://lab.awh.zdresearch.com/chapter2/mutillidae/index.php?page=password-generator.php&amp;username=anonymous</uri>
									<method>GET</method>
									<param>username</param>
									<attack></attack>
									<evidence>username</evidence>
									<otherinfo>The URL contains potentially sensitive information. The following string was found via the pattern: user
username</otherinfo>
								</instance>
							
						</instances>
						<count>1</count>
						<solution>&lt;p&gt;Do not pass sensitive information in URIs.&lt;/p&gt;</solution>
						<otherinfo>&lt;p&gt;The URL contains potentially sensitive information. The following string was found via the pattern: user&lt;/p&gt;&lt;p&gt;username&lt;/p&gt;</otherinfo>
						<reference></reference>
						<cweid>200</cweid>
						<wascid>13</wascid>
						<sourceid>1052</sourceid>
					</alertitem>
				
				
					<alertitem>
						<pluginid>10027</pluginid>
						<alertRef>10027</alertRef>
						<alert>Information Disclosure - Suspicious Comments</alert>
						<name>Information Disclosure - Suspicious Comments</name>
						<riskcode>0</riskcode>
						<confidence>1</confidence>
						<riskdesc>Informational (Low)</riskdesc>
						<confidencedesc>Low</confidencedesc>
						<desc>&lt;p&gt;The response appears to contain suspicious comments which may help an attacker. Note: Matches made within script blocks or files are against the entire content not only comments.&lt;/p&gt;</desc>
						<instances>
							
								<instance>
									<uri>http://lab.awh.zdresearch.com/chapter2/bWAPP/bWAPP/js/html5.js</uri>
									<method>GET</method>
									<param></param>
									<attack></attack>
									<evidence>select</evidence>
									<otherinfo>The following pattern was used: \bSELECT\b and was detected in the element starting with: &quot;(function(a,b){function h(a,b){var c=a.createElement(&quot;p&quot;),d=a.getElementsByTagName(&quot;head&quot;)[0]||a.documentElement;return c.innerH&quot;, see evidence field for the suspicious comment/snippet.</otherinfo>
								</instance>
							
							
								<instance>
									<uri>http://lab.awh.zdresearch.com/chapter2/mutillidae/</uri>
									<method>GET</method>
									<param></param>
									<attack></attack>
									<evidence>from</evidence>
									<otherinfo>The following pattern was used: \bFROM\b and was detected in the element starting with: &quot;&lt;script type=&quot;text/javascript&quot;&gt;
			try{
				//if(!window.localStorage.length){
					window.localStorage.setItem(&quot;SelfDestruct&quot;, see evidence field for the suspicious comment/snippet.</otherinfo>
								</instance>
							
							
								<instance>
									<uri>http://lab.awh.zdresearch.com/chapter2/xvwa/js/jquery.js</uri>
									<method>GET</method>
									<param></param>
									<attack></attack>
									<evidence>db</evidence>
									<otherinfo>The following pattern was used: \bDB\b and was detected 2 times, the first in the element starting with: &quot;!function(a,b){&quot;object&quot;==typeof module&amp;&amp;&quot;object&quot;==typeof module.exports?module.exports=a.document?b(a,!0):function(a){if(!a.docu&quot;, see evidence field for the suspicious comment/snippet.</otherinfo>
								</instance>
							
							
								<instance>
									<uri>http://lab.awh.zdresearch.com/chapter2/xvwa/js/jquery.js</uri>
									<method>GET</method>
									<param></param>
									<attack></attack>
									<evidence>username</evidence>
									<otherinfo>The following pattern was used: \bUSERNAME\b and was detected in the element starting with: &quot;},cur:function(){var a=Zb.propHooks[this.prop];return a&amp;&amp;a.get?a.get(this):Zb.propHooks._default.get(this)},run:function(a){var &quot;, see evidence field for the suspicious comment/snippet.</otherinfo>
								</instance>
							
							
								<instance>
									<uri>http://lab.awh.zdresearch.com/chapter3/xss-labs/assets/js/bootstrap.js</uri>
									<method>GET</method>
									<param></param>
									<attack></attack>
									<evidence>from</evidence>
									<otherinfo>The following pattern was used: \bFROM\b and was detected in the element starting with: &quot;      // detach from parent, fire event then clean up data&quot;, see evidence field for the suspicious comment/snippet.</otherinfo>
								</instance>
							
							
								<instance>
									<uri>http://lab.awh.zdresearch.com/chapter3/xss-labs/assets/js/jquery-1.11.1.js</uri>
									<method>GET</method>
									<param></param>
									<attack></attack>
									<evidence>bug</evidence>
									<otherinfo>The following pattern was used: \bBUG\b and was detected 9 times, the first in the element starting with: &quot;	// We allow this because of a bug in IE8/9 that throws an error&quot;, see evidence field for the suspicious comment/snippet.</otherinfo>
								</instance>
							
							
								<instance>
									<uri>http://lab.awh.zdresearch.com/chapter3/xss-labs/assets/js/jquery-1.11.1.js</uri>
									<method>GET</method>
									<param></param>
									<attack></attack>
									<evidence>bugs</evidence>
									<otherinfo>The following pattern was used: \bBUGS\b and was detected 4 times, the first in the element starting with: &quot;	// See http://bugs.jquery.com/ticket/13378&quot;, see evidence field for the suspicious comment/snippet.</otherinfo>
								</instance>
							
							
								<instance>
									<uri>http://lab.awh.zdresearch.com/chapter3/xss-labs/assets/js/jquery-1.11.1.js</uri>
									<method>GET</method>
									<param></param>
									<attack></attack>
									<evidence>from</evidence>
									<otherinfo>The following pattern was used: \bFROM\b and was detected 59 times, the first in the element starting with: &quot;			// Return just the one element from the set&quot;, see evidence field for the suspicious comment/snippet.</otherinfo>
								</instance>
							
							
								<instance>
									<uri>http://lab.awh.zdresearch.com/chapter3/xss-labs/assets/js/jquery-1.11.1.js</uri>
									<method>GET</method>
									<param></param>
									<attack></attack>
									<evidence>later</evidence>
									<otherinfo>The following pattern was used: \bLATER\b and was detected 9 times, the first in the element starting with: &quot;			// IE8 throws error here and will not see later tests&quot;, see evidence field for the suspicious comment/snippet.</otherinfo>
								</instance>
							
							
								<instance>
									<uri>http://lab.awh.zdresearch.com/chapter3/xss-labs/assets/js/jquery-1.11.1.js</uri>
									<method>GET</method>
									<param></param>
									<attack></attack>
									<evidence>query</evidence>
									<otherinfo>The following pattern was used: \bQUERY\b and was detected in the element starting with: &quot;// key/values into a query string&quot;, see evidence field for the suspicious comment/snippet.</otherinfo>
								</instance>
							
							
								<instance>
									<uri>http://lab.awh.zdresearch.com/chapter3/xss-labs/assets/js/jquery-1.11.1.js</uri>
									<method>GET</method>
									<param></param>
									<attack></attack>
									<evidence>select</evidence>
									<otherinfo>The following pattern was used: \bSELECT\b and was detected 21 times, the first in the element starting with: &quot;	select,&quot;, see evidence field for the suspicious comment/snippet.</otherinfo>
								</instance>
							
							
								<instance>
									<uri>http://lab.awh.zdresearch.com/chapter3/xss-labs/assets/js/jquery-1.11.1.js</uri>
									<method>GET</method>
									<param></param>
									<attack></attack>
									<evidence>user</evidence>
									<otherinfo>The following pattern was used: \bUSER\b and was detected 4 times, the first in the element starting with: &quot;	// Can be adjusted by the user&quot;, see evidence field for the suspicious comment/snippet.</otherinfo>
								</instance>
							
							
								<instance>
									<uri>http://lab.awh.zdresearch.com/chapter3/xss-labs/assets/js/jquery-1.11.1.js</uri>
									<method>GET</method>
									<param></param>
									<attack></attack>
									<evidence>username</evidence>
									<otherinfo>The following pattern was used: \bUSERNAME\b and was detected 2 times, the first in the element starting with: &quot;		username: null,&quot;, see evidence field for the suspicious comment/snippet.</otherinfo>
								</instance>
							
							
								<instance>
									<uri>http://lab.awh.zdresearch.com/chapter3/xss-labs/assets/js/jquery-1.11.1.js</uri>
									<method>GET</method>
									<param></param>
									<attack></attack>
									<evidence>where</evidence>
									<otherinfo>The following pattern was used: \bWHERE\b and was detected 10 times, the first in the element starting with: &quot;		// For CommonJS and CommonJS-like environments where a proper window is present,&quot;, see evidence field for the suspicious comment/snippet.</otherinfo>
								</instance>
							
							
								<instance>
									<uri>http://lab.awh.zdresearch.com/chapter2/mutillidae/</uri>
									<method>GET</method>
									<param></param>
									<attack></attack>
									<evidence>user</evidence>
									<otherinfo>The following pattern was used: \bUSER\b and was detected in the element starting with: &quot;&lt;!-- I think the database password is set to blank or perhaps samurai.
			It depends on whether you installed this web app from &quot;, see evidence field for the suspicious comment/snippet.</otherinfo>
								</instance>
							
						</instances>
						<count>15</count>
						<solution>&lt;p&gt;Remove all comments that return information that may help an attacker and fix any underlying problems they refer to.&lt;/p&gt;</solution>
						<otherinfo>&lt;p&gt;The following pattern was used: \bSELECT\b and was detected in the element starting with: &quot;(function(a,b){function h(a,b){var c=a.createElement(&quot;p&quot;),d=a.getElementsByTagName(&quot;head&quot;)[0]||a.documentElement;return c.innerH&quot;, see evidence field for the suspicious comment/snippet.&lt;/p&gt;</otherinfo>
						<reference></reference>
						<cweid>200</cweid>
						<wascid>13</wascid>
						<sourceid>215</sourceid>
					</alertitem>
				
				
					<alertitem>
						<pluginid>10109</pluginid>
						<alertRef>10109</alertRef>
						<alert>Modern Web Application</alert>
						<name>Modern Web Application</name>
						<riskcode>0</riskcode>
						<confidence>2</confidence>
						<riskdesc>Informational (Medium)</riskdesc>
						<confidencedesc>Medium</confidencedesc>
						<desc>&lt;p&gt;The application appears to be a modern web application. If you need to explore it automatically then the Ajax Spider may well be more effective than the standard one.&lt;/p&gt;</desc>
						<instances>
							
								<instance>
									<uri>http://lab.awh.zdresearch.com/chapter2/joomla3.0.2/</uri>
									<method>GET</method>
									<param></param>
									<attack></attack>
									<evidence>&lt;a class=&quot;btn dropdown-toggle&quot; data-toggle=&quot;dropdown&quot; href=&quot;#&quot;&gt; &lt;i class=&quot;icon-cog&quot;&gt;&lt;/i&gt;&lt;span class=&quot;caret&quot;&gt;&lt;/span&gt; &lt;/a&gt;</evidence>
									<otherinfo>Links have been found that do not have traditional href attributes, which is an indication that this is a modern web application.</otherinfo>
								</instance>
							
							
								<instance>
									<uri>http://lab.awh.zdresearch.com/chapter2/mutillidae/</uri>
									<method>GET</method>
									<param></param>
									<attack></attack>
									<evidence>&lt;a href=&quot;&quot;&gt;OWASP 2017&lt;/a&gt;</evidence>
									<otherinfo>Links have been found that do not have traditional href attributes, which is an indication that this is a modern web application.</otherinfo>
								</instance>
							
							
								<instance>
									<uri>http://lab.awh.zdresearch.com/chapter2/phpmyfaq/</uri>
									<method>GET</method>
									<param></param>
									<attack></attack>
									<evidence>&lt;a href=&quot;#&quot; data-toggle=&quot;collapse&quot; data-target=&quot;.pmf-nav .navbar-collapse&quot;&gt;
                    &lt;i aria-hidden=&quot;true&quot; class=&quot;fa fa-bars&quot;&gt;&lt;/i&gt;
                &lt;/a&gt;</evidence>
									<otherinfo>Links have been found that do not have traditional href attributes, which is an indication that this is a modern web application.</otherinfo>
								</instance>
							
							
								<instance>
									<uri>http://lab.awh.zdresearch.com/chapter2/xvwa/</uri>
									<method>GET</method>
									<param></param>
									<attack></attack>
									<evidence>&lt;a class=&apos;dropdown-toggle&apos; href=&apos;#&apos; data-toggle=&apos;dropdown&apos; id=&apos;navLogin&apos;&gt;Login&lt;/a&gt;</evidence>
									<otherinfo>Links have been found that do not have traditional href attributes, which is an indication that this is a modern web application.</otherinfo>
								</instance>
							
							
								<instance>
									<uri>http://lab.awh.zdresearch.com/chapter2/xvwa/instruction.php</uri>
									<method>GET</method>
									<param></param>
									<attack></attack>
									<evidence>&lt;a class=&apos;dropdown-toggle&apos; href=&apos;#&apos; data-toggle=&apos;dropdown&apos; id=&apos;navLogin&apos;&gt;Login&lt;/a&gt;</evidence>
									<otherinfo>Links have been found that do not have traditional href attributes, which is an indication that this is a modern web application.</otherinfo>
								</instance>
							
							
								<instance>
									<uri>http://lab.awh.zdresearch.com/chapter2/xvwa/setup/</uri>
									<method>GET</method>
									<param></param>
									<attack></attack>
									<evidence>&lt;a class=&apos;dropdown-toggle&apos; href=&apos;#&apos; data-toggle=&apos;dropdown&apos; id=&apos;navLogin&apos;&gt;Login&lt;/a&gt;</evidence>
									<otherinfo>Links have been found that do not have traditional href attributes, which is an indication that this is a modern web application.</otherinfo>
								</instance>
							
							
								<instance>
									<uri>http://lab.awh.zdresearch.com/chapter2/xvwa/vulnerabilities/sqli/</uri>
									<method>GET</method>
									<param></param>
									<attack></attack>
									<evidence>&lt;a class=&apos;dropdown-toggle&apos; href=&apos;#&apos; data-toggle=&apos;dropdown&apos; id=&apos;navLogin&apos;&gt;Login&lt;/a&gt;</evidence>
									<otherinfo>Links have been found that do not have traditional href attributes, which is an indication that this is a modern web application.</otherinfo>
								</instance>
							
							
								<instance>
									<uri>http://lab.awh.zdresearch.com/chapter3/AngularJS-mXSS/</uri>
									<method>GET</method>
									<param></param>
									<attack></attack>
									<evidence>&lt;script src=&quot;https://ajax.googleapis.com/ajax/libs/angularjs/1.2.16/angular.min.js&quot;&gt;&lt;/script&gt;</evidence>
									<otherinfo>No links have been found while there are scripts, which is an indication that this is a modern web application.</otherinfo>
								</instance>
							
							
								<instance>
									<uri>http://lab.awh.zdresearch.com/chapter3/xss-labs/</uri>
									<method>GET</method>
									<param></param>
									<attack></attack>
									<evidence>&lt;a class=&quot;navbar-brand&quot; href=&quot;#&quot;&gt;Xion Security&lt;/a&gt;</evidence>
									<otherinfo>Links have been found that do not have traditional href attributes, which is an indication that this is a modern web application.</otherinfo>
								</instance>
							
							
								<instance>
									<uri>http://lab.awh.zdresearch.com/chapter3/xss-labs/context/attribute-context.php</uri>
									<method>GET</method>
									<param></param>
									<attack></attack>
									<evidence>&lt;a class=&quot;navbar-brand&quot; href=&quot;#&quot;&gt;Xion Security&lt;/a&gt;</evidence>
									<otherinfo>Links have been found that do not have traditional href attributes, which is an indication that this is a modern web application.</otherinfo>
								</instance>
							
							
								<instance>
									<uri>http://lab.awh.zdresearch.com/chapter3/xss-labs/types/dom.php</uri>
									<method>GET</method>
									<param></param>
									<attack></attack>
									<evidence>&lt;a class=&quot;navbar-brand&quot; href=&quot;#&quot;&gt;Forbidden Security&lt;/a&gt;</evidence>
									<otherinfo>Links have been found that do not have traditional href attributes, which is an indication that this is a modern web application.</otherinfo>
								</instance>
							
							
								<instance>
									<uri>http://lab.awh.zdresearch.com/chapter3/xss-labs/types/reflected.php</uri>
									<method>GET</method>
									<param></param>
									<attack></attack>
									<evidence>&lt;a class=&quot;navbar-brand&quot; href=&quot;#&quot;&gt;Xion Security&lt;/a&gt;</evidence>
									<otherinfo>Links have been found that do not have traditional href attributes, which is an indication that this is a modern web application.</otherinfo>
								</instance>
							
						</instances>
						<count>12</count>
						<solution>&lt;p&gt;This is an informational alert and so no changes are required.&lt;/p&gt;</solution>
						<otherinfo>&lt;p&gt;Links have been found that do not have traditional href attributes, which is an indication that this is a modern web application.&lt;/p&gt;</otherinfo>
						<reference></reference>
						<cweid>-1</cweid>
						<wascid>-1</wascid>
						<sourceid>540</sourceid>
					</alertitem>
				
				
					<alertitem>
						<pluginid>10049</pluginid>
						<alertRef>10049</alertRef>
						<alert>Non-Storable Content</alert>
						<name>Non-Storable Content</name>
						<riskcode>0</riskcode>
						<confidence>2</confidence>
						<riskdesc>Informational (Medium)</riskdesc>
						<confidencedesc>Medium</confidencedesc>
						<desc>&lt;p&gt;The response contents are not storable by caching components such as proxy servers. If the response does not contain sensitive, personal or user-specific information, it may benefit from being stored and cached, to improve performance.&lt;/p&gt;</desc>
						<instances>
							
								<instance>
									<uri>http://lab.awh.zdresearch.com/chapter2/bWAPP/bWAPP/</uri>
									<method>GET</method>
									<param></param>
									<attack></attack>
									<evidence>302</evidence>
									<otherinfo></otherinfo>
								</instance>
							
							
								<instance>
									<uri>http://lab.awh.zdresearch.com/chapter2/bWAPP/bWAPP/login.php</uri>
									<method>GET</method>
									<param></param>
									<attack></attack>
									<evidence>no-store</evidence>
									<otherinfo></otherinfo>
								</instance>
							
						</instances>
						<count>2</count>
						<solution>&lt;p&gt;The content may be marked as storable by ensuring that the following conditions are satisfied:&lt;/p&gt;&lt;p&gt;The request method must be understood by the cache and defined as being cacheable (&quot;GET&quot;, &quot;HEAD&quot;, and &quot;POST&quot; are currently defined as cacheable)&lt;/p&gt;&lt;p&gt;The response status code must be understood by the cache (one of the 1XX, 2XX, 3XX, 4XX, or 5XX response classes are generally understood)&lt;/p&gt;&lt;p&gt;The &quot;no-store&quot; cache directive must not appear in the request or response header fields&lt;/p&gt;&lt;p&gt;For caching by &quot;shared&quot; caches such as &quot;proxy&quot; caches, the &quot;private&quot; response directive must not appear in the response&lt;/p&gt;&lt;p&gt;For caching by &quot;shared&quot; caches such as &quot;proxy&quot; caches, the &quot;Authorization&quot; header field must not appear in the request, unless the response explicitly allows it (using one of the &quot;must-revalidate&quot;, &quot;public&quot;, or &quot;s-maxage&quot; Cache-Control response directives)&lt;/p&gt;&lt;p&gt;In addition to the conditions above, at least one of the following conditions must also be satisfied by the response:&lt;/p&gt;&lt;p&gt;It must contain an &quot;Expires&quot; header field&lt;/p&gt;&lt;p&gt;It must contain a &quot;max-age&quot; response directive&lt;/p&gt;&lt;p&gt;For &quot;shared&quot; caches such as &quot;proxy&quot; caches, it must contain a &quot;s-maxage&quot; response directive&lt;/p&gt;&lt;p&gt;It must contain a &quot;Cache Control Extension&quot; that allows it to be cached&lt;/p&gt;&lt;p&gt;It must have a status code that is defined as cacheable by default (200, 203, 204, 206, 300, 301, 404, 405, 410, 414, 501).   &lt;/p&gt;</solution>
						<otherinfo></otherinfo>
						<reference>&lt;p&gt;https://tools.ietf.org/html/rfc7234&lt;/p&gt;&lt;p&gt;https://tools.ietf.org/html/rfc7231&lt;/p&gt;&lt;p&gt;http://www.w3.org/Protocols/rfc2616/rfc2616-sec13.html (obsoleted by rfc7234)&lt;/p&gt;</reference>
						<cweid>524</cweid>
						<wascid>13</wascid>
						<sourceid>73</sourceid>
					</alertitem>
				
				
					<alertitem>
						<pluginid>10112</pluginid>
						<alertRef>10112</alertRef>
						<alert>Session Management Response Identified</alert>
						<name>Session Management Response Identified</name>
						<riskcode>0</riskcode>
						<confidence>2</confidence>
						<riskdesc>Informational (Medium)</riskdesc>
						<confidencedesc>Medium</confidencedesc>
						<desc>&lt;p&gt;The given response has been identified as containing a session management token. The &apos;Other Info&apos; field contains a set of header tokens that can be used in the Header Based Session Management Method. If the request is in a context which has a Session Management Method set to &quot;Auto-Detect&quot; then this rule will change the session management to use the tokens identified.&lt;/p&gt;</desc>
						<instances>
							
								<instance>
									<uri>http://lab.awh.zdresearch.com/chapter2/bWAPP/bWAPP/login.php</uri>
									<method>GET</method>
									<param>PHPSESSID</param>
									<attack></attack>
									<evidence>k0sl7l1qotnlsfd0hp4j7qkf03</evidence>
									<otherinfo>
cookie:PHPSESSID</otherinfo>
								</instance>
							
							
								<instance>
									<uri>http://lab.awh.zdresearch.com/chapter2/bWAPP/bWAPP/login.php</uri>
									<method>GET</method>
									<param>PHPSESSID</param>
									<attack></attack>
									<evidence>qe0fb6ecvht2lh1lvunrdfhle7</evidence>
									<otherinfo>
cookie:PHPSESSID</otherinfo>
								</instance>
							
							
								<instance>
									<uri>http://lab.awh.zdresearch.com/chapter2/bWAPP/bWAPP/login.php</uri>
									<method>GET</method>
									<param>PHPSESSID</param>
									<attack></attack>
									<evidence>k0sl7l1qotnlsfd0hp4j7qkf03</evidence>
									<otherinfo>
cookie:PHPSESSID</otherinfo>
								</instance>
							
							
								<instance>
									<uri>http://lab.awh.zdresearch.com/chapter2/DVWA/</uri>
									<method>GET</method>
									<param>PHPSESSID</param>
									<attack></attack>
									<evidence>k0sl7l1qotnlsfd0hp4j7qkf03</evidence>
									<otherinfo>
cookie:PHPSESSID</otherinfo>
								</instance>
							
						</instances>
						<count>4</count>
						<solution>&lt;p&gt;This is an informational alert rather than a vulnerability and so there is nothing to fix.&lt;/p&gt;</solution>
						<otherinfo>&lt;p&gt;&lt;/p&gt;&lt;p&gt;cookie:PHPSESSID&lt;/p&gt;</otherinfo>
						<reference>&lt;p&gt;https://www.zaproxy.org/docs/desktop/addons/authentication-helper/session-mgmt-id&lt;/p&gt;</reference>
						<cweid>-1</cweid>
						<wascid>-1</wascid>
						<sourceid>27</sourceid>
					</alertitem>
				
				
					<alertitem>
						<pluginid>10049</pluginid>
						<alertRef>10049</alertRef>
						<alert>Storable and Cacheable Content</alert>
						<name>Storable and Cacheable Content</name>
						<riskcode>0</riskcode>
						<confidence>2</confidence>
						<riskdesc>Informational (Medium)</riskdesc>
						<confidencedesc>Medium</confidencedesc>
						<desc>&lt;p&gt;The response contents are storable by caching components such as proxy servers, and may be retrieved directly from the cache, rather than from the origin server by the caching servers, in response to similar requests from other users.  If the response data is sensitive, personal or user-specific, this may result in sensitive information being leaked. In some cases, this may even result in a user gaining complete control of the session of another user, depending on the configuration of the caching components in use in their environment. This is primarily an issue where &quot;shared&quot; caching servers such as &quot;proxy&quot; caches are configured on the local network. This configuration is typically found in corporate or educational environments, for instance.&lt;/p&gt;</desc>
						<instances>
							
								<instance>
									<uri>http://lab.awh.zdresearch.com/</uri>
									<method>GET</method>
									<param></param>
									<attack></attack>
									<evidence></evidence>
									<otherinfo>In the absence of an explicitly specified caching lifetime directive in the response, a liberal lifetime heuristic of 1 year was assumed. This is permitted by rfc7234.</otherinfo>
								</instance>
							
							
								<instance>
									<uri>http://lab.awh.zdresearch.com/chapter2</uri>
									<method>GET</method>
									<param></param>
									<attack></attack>
									<evidence></evidence>
									<otherinfo>In the absence of an explicitly specified caching lifetime directive in the response, a liberal lifetime heuristic of 1 year was assumed. This is permitted by rfc7234.</otherinfo>
								</instance>
							
							
								<instance>
									<uri>http://lab.awh.zdresearch.com/chapter2/</uri>
									<method>GET</method>
									<param></param>
									<attack></attack>
									<evidence></evidence>
									<otherinfo>In the absence of an explicitly specified caching lifetime directive in the response, a liberal lifetime heuristic of 1 year was assumed. This is permitted by rfc7234.</otherinfo>
								</instance>
							
							
								<instance>
									<uri>http://lab.awh.zdresearch.com/chapter2/bWAPP</uri>
									<method>GET</method>
									<param></param>
									<attack></attack>
									<evidence></evidence>
									<otherinfo>In the absence of an explicitly specified caching lifetime directive in the response, a liberal lifetime heuristic of 1 year was assumed. This is permitted by rfc7234.</otherinfo>
								</instance>
							
							
								<instance>
									<uri>http://lab.awh.zdresearch.com/chapter2/bWAPP/bWAPP</uri>
									<method>GET</method>
									<param></param>
									<attack></attack>
									<evidence></evidence>
									<otherinfo>In the absence of an explicitly specified caching lifetime directive in the response, a liberal lifetime heuristic of 1 year was assumed. This is permitted by rfc7234.</otherinfo>
								</instance>
							
							
								<instance>
									<uri>http://lab.awh.zdresearch.com/robots.txt</uri>
									<method>GET</method>
									<param></param>
									<attack></attack>
									<evidence></evidence>
									<otherinfo>In the absence of an explicitly specified caching lifetime directive in the response, a liberal lifetime heuristic of 1 year was assumed. This is permitted by rfc7234.</otherinfo>
								</instance>
							
							
								<instance>
									<uri>http://lab.awh.zdresearch.com/sitemap.xml</uri>
									<method>GET</method>
									<param></param>
									<attack></attack>
									<evidence></evidence>
									<otherinfo>In the absence of an explicitly specified caching lifetime directive in the response, a liberal lifetime heuristic of 1 year was assumed. This is permitted by rfc7234.</otherinfo>
								</instance>
							
						</instances>
						<count>7</count>
						<solution>&lt;p&gt;Validate that the response does not contain sensitive, personal or user-specific information.  If it does, consider the use of the following HTTP response headers, to limit, or prevent the content being stored and retrieved from the cache by another user:&lt;/p&gt;&lt;p&gt;Cache-Control: no-cache, no-store, must-revalidate, private&lt;/p&gt;&lt;p&gt;Pragma: no-cache&lt;/p&gt;&lt;p&gt;Expires: 0&lt;/p&gt;&lt;p&gt;This configuration directs both HTTP 1.0 and HTTP 1.1 compliant caching servers to not store the response, and to not retrieve the response (without validation) from the cache, in response to a similar request. &lt;/p&gt;</solution>
						<otherinfo>&lt;p&gt;In the absence of an explicitly specified caching lifetime directive in the response, a liberal lifetime heuristic of 1 year was assumed. This is permitted by rfc7234.&lt;/p&gt;</otherinfo>
						<reference>&lt;p&gt;https://tools.ietf.org/html/rfc7234&lt;/p&gt;&lt;p&gt;https://tools.ietf.org/html/rfc7231&lt;/p&gt;&lt;p&gt;http://www.w3.org/Protocols/rfc2616/rfc2616-sec13.html (obsoleted by rfc7234)&lt;/p&gt;</reference>
						<cweid>524</cweid>
						<wascid>13</wascid>
						<sourceid>6</sourceid>
					</alertitem>
				
				
					<alertitem>
						<pluginid>10049</pluginid>
						<alertRef>10049</alertRef>
						<alert>Storable but Non-Cacheable Content</alert>
						<name>Storable but Non-Cacheable Content</name>
						<riskcode>0</riskcode>
						<confidence>2</confidence>
						<riskdesc>Informational (Medium)</riskdesc>
						<confidencedesc>Medium</confidencedesc>
						<desc>&lt;p&gt;The response contents are storable by caching components such as proxy servers, but will not be retrieved directly from the cache, without validating the request upstream, in response to similar requests from other users. &lt;/p&gt;</desc>
						<instances>
							
								<instance>
									<uri>http://lab.awh.zdresearch.com/WebGoat/attack</uri>
									<method>GET</method>
									<param></param>
									<attack></attack>
									<evidence>no-cache</evidence>
									<otherinfo></otherinfo>
								</instance>
							
						</instances>
						<count>1</count>
						<solution></solution>
						<otherinfo></otherinfo>
						<reference>&lt;p&gt;https://tools.ietf.org/html/rfc7234&lt;/p&gt;&lt;p&gt;https://tools.ietf.org/html/rfc7231&lt;/p&gt;&lt;p&gt;http://www.w3.org/Protocols/rfc2616/rfc2616-sec13.html (obsoleted by rfc7234)&lt;/p&gt;</reference>
						<cweid>524</cweid>
						<wascid>13</wascid>
						<sourceid>94</sourceid>
					</alertitem>
				
				
					<alertitem>
						<pluginid>10031</pluginid>
						<alertRef>10031</alertRef>
						<alert>User Controllable HTML Element Attribute (Potential XSS)</alert>
						<name>User Controllable HTML Element Attribute (Potential XSS)</name>
						<riskcode>0</riskcode>
						<confidence>1</confidence>
						<riskdesc>Informational (Low)</riskdesc>
						<confidencedesc>Low</confidencedesc>
						<desc>&lt;p&gt;This check looks at user-supplied input in query string parameters and POST data to identify where certain HTML attribute values might be controlled. This provides hot-spot detection for XSS (cross-site scripting) that will require further review by a security analyst to determine exploitability.&lt;/p&gt;</desc>
						<instances>
							
								<instance>
									<uri>http://lab.awh.zdresearch.com/chapter2/joomla3.0.2/index.php/component/mailto/?link=7cbd8e8e52d4a9429665463f6fa8d3adac4d4a09&amp;template=protostar&amp;tmpl=component</uri>
									<method>GET</method>
									<param>link</param>
									<attack></attack>
									<evidence></evidence>
									<otherinfo>User-controlled HTML attribute values were found. Try injecting special characters to see if XSS might be possible. The page at the following URL:

http://lab.awh.zdresearch.com/chapter2/joomla3.0.2/index.php/component/mailto/?link=7cbd8e8e52d4a9429665463f6fa8d3adac4d4a09&amp;template=protostar&amp;tmpl=component

appears to include user input in: 

a(n) [input] tag [value] attribute 

The user input found was:
link=7cbd8e8e52d4a9429665463f6fa8d3adac4d4a09

The user-controlled value was:
7cbd8e8e52d4a9429665463f6fa8d3adac4d4a09</otherinfo>
								</instance>
							
							
								<instance>
									<uri>http://lab.awh.zdresearch.com/chapter2/joomla3.0.2/index.php/component/mailto/?link=7cbd8e8e52d4a9429665463f6fa8d3adac4d4a09&amp;template=protostar&amp;tmpl=component</uri>
									<method>GET</method>
									<param>tmpl</param>
									<attack></attack>
									<evidence></evidence>
									<otherinfo>User-controlled HTML attribute values were found. Try injecting special characters to see if XSS might be possible. The page at the following URL:

http://lab.awh.zdresearch.com/chapter2/joomla3.0.2/index.php/component/mailto/?link=7cbd8e8e52d4a9429665463f6fa8d3adac4d4a09&amp;template=protostar&amp;tmpl=component

appears to include user input in: 

a(n) [input] tag [value] attribute 

The user input found was:
tmpl=component

The user-controlled value was:
component</otherinfo>
								</instance>
							
							
								<instance>
									<uri>http://lab.awh.zdresearch.com/chapter2/joomla3.0.2/index.php/component/users/?view=registration</uri>
									<method>GET</method>
									<param>view</param>
									<attack></attack>
									<evidence></evidence>
									<otherinfo>User-controlled HTML attribute values were found. Try injecting special characters to see if XSS might be possible. The page at the following URL:

http://lab.awh.zdresearch.com/chapter2/joomla3.0.2/index.php/component/users/?view=registration

appears to include user input in: 

a(n) [div] tag [class] attribute 

The user input found was:
view=registration

The user-controlled value was:
registration</otherinfo>
								</instance>
							
							
								<instance>
									<uri>http://lab.awh.zdresearch.com/chapter2/joomla3.0.2/index.php/component/users/?view=registration</uri>
									<method>GET</method>
									<param>view</param>
									<attack></attack>
									<evidence></evidence>
									<otherinfo>User-controlled HTML attribute values were found. Try injecting special characters to see if XSS might be possible. The page at the following URL:

http://lab.awh.zdresearch.com/chapter2/joomla3.0.2/index.php/component/users/?view=registration

appears to include user input in: 

a(n) [input] tag [value] attribute 

The user input found was:
view=registration

The user-controlled value was:
registration.register</otherinfo>
								</instance>
							
							
								<instance>
									<uri>http://lab.awh.zdresearch.com/chapter2/joomla3.0.2/index.php/component/users/?view=remind</uri>
									<method>GET</method>
									<param>view</param>
									<attack></attack>
									<evidence></evidence>
									<otherinfo>User-controlled HTML attribute values were found. Try injecting special characters to see if XSS might be possible. The page at the following URL:

http://lab.awh.zdresearch.com/chapter2/joomla3.0.2/index.php/component/users/?view=remind

appears to include user input in: 

a(n) [div] tag [class] attribute 

The user input found was:
view=remind

The user-controlled value was:
remind </otherinfo>
								</instance>
							
							
								<instance>
									<uri>http://lab.awh.zdresearch.com/chapter2/joomla3.0.2/index.php/component/users/?view=reset</uri>
									<method>GET</method>
									<param>view</param>
									<attack></attack>
									<evidence></evidence>
									<otherinfo>User-controlled HTML attribute values were found. Try injecting special characters to see if XSS might be possible. The page at the following URL:

http://lab.awh.zdresearch.com/chapter2/joomla3.0.2/index.php/component/users/?view=reset

appears to include user input in: 

a(n) [div] tag [class] attribute 

The user input found was:
view=reset

The user-controlled value was:
reset </otherinfo>
								</instance>
							
							
								<instance>
									<uri>http://lab.awh.zdresearch.com/chapter2/xvwa/setup/?action=do</uri>
									<method>GET</method>
									<param>action</param>
									<attack></attack>
									<evidence></evidence>
									<otherinfo>User-controlled HTML attribute values were found. Try injecting special characters to see if XSS might be possible. The page at the following URL:

http://lab.awh.zdresearch.com/chapter2/xvwa/setup/?action=do

appears to include user input in: 

a(n) [button] tag [value] attribute 

The user input found was:
action=do

The user-controlled value was:
do</otherinfo>
								</instance>
							
							
								<instance>
									<uri>http://lab.awh.zdresearch.com/chapter2/bWAPP/bWAPP/login.php</uri>
									<method>POST</method>
									<param>form</param>
									<attack></attack>
									<evidence></evidence>
									<otherinfo>User-controlled HTML attribute values were found. Try injecting special characters to see if XSS might be possible. The page at the following URL:

http://lab.awh.zdresearch.com/chapter2/bWAPP/bWAPP/login.php

appears to include user input in: 

a(n) [button] tag [type] attribute 

The user input found was:
form=submit

The user-controlled value was:
submit</otherinfo>
								</instance>
							
							
								<instance>
									<uri>http://lab.awh.zdresearch.com/chapter2/bWAPP/bWAPP/login.php</uri>
									<method>POST</method>
									<param>form</param>
									<attack></attack>
									<evidence></evidence>
									<otherinfo>User-controlled HTML attribute values were found. Try injecting special characters to see if XSS might be possible. The page at the following URL:

http://lab.awh.zdresearch.com/chapter2/bWAPP/bWAPP/login.php

appears to include user input in: 

a(n) [button] tag [value] attribute 

The user input found was:
form=submit

The user-controlled value was:
submit</otherinfo>
								</instance>
							
							
								<instance>
									<uri>http://lab.awh.zdresearch.com/chapter2/bWAPP/bWAPP/user_new.php</uri>
									<method>POST</method>
									<param>action</param>
									<attack></attack>
									<evidence></evidence>
									<otherinfo>User-controlled HTML attribute values were found. Try injecting special characters to see if XSS might be possible. The page at the following URL:

http://lab.awh.zdresearch.com/chapter2/bWAPP/bWAPP/user_new.php

appears to include user input in: 

a(n) [button] tag [value] attribute 

The user input found was:
action=create

The user-controlled value was:
create</otherinfo>
								</instance>
							
							
								<instance>
									<uri>http://lab.awh.zdresearch.com/chapter2/xvwa/vulnerabilities/sqli/</uri>
									<method>POST</method>
									<param>item</param>
									<attack></attack>
									<evidence></evidence>
									<otherinfo>User-controlled HTML attribute values were found. Try injecting special characters to see if XSS might be possible. The page at the following URL:

http://lab.awh.zdresearch.com/chapter2/xvwa/vulnerabilities/sqli/

appears to include user input in: 

a(n) [meta] tag [content] attribute 

The user input found was:
item=1

The user-controlled value was:
width=device-width, initial-scale=1</otherinfo>
								</instance>
							
							
								<instance>
									<uri>http://lab.awh.zdresearch.com/chapter2/xvwa/vulnerabilities/sqli_blind/</uri>
									<method>POST</method>
									<param>item</param>
									<attack></attack>
									<evidence></evidence>
									<otherinfo>User-controlled HTML attribute values were found. Try injecting special characters to see if XSS might be possible. The page at the following URL:

http://lab.awh.zdresearch.com/chapter2/xvwa/vulnerabilities/sqli_blind/

appears to include user input in: 

a(n) [meta] tag [content] attribute 

The user input found was:
item=1

The user-controlled value was:
width=device-width, initial-scale=1</otherinfo>
								</instance>
							
						</instances>
						<count>12</count>
						<solution>&lt;p&gt;Validate all input and sanitize output it before writing to any HTML attributes.&lt;/p&gt;</solution>
						<otherinfo>&lt;p&gt;User-controlled HTML attribute values were found. Try injecting special characters to see if XSS might be possible. The page at the following URL:&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;http://lab.awh.zdresearch.com/chapter2/joomla3.0.2/index.php/component/mailto/?link=7cbd8e8e52d4a9429665463f6fa8d3adac4d4a09&amp;template=protostar&amp;tmpl=component&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;appears to include user input in: &lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;a(n) [input] tag [value] attribute &lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;The user input found was:&lt;/p&gt;&lt;p&gt;link=7cbd8e8e52d4a9429665463f6fa8d3adac4d4a09&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;The user-controlled value was:&lt;/p&gt;&lt;p&gt;7cbd8e8e52d4a9429665463f6fa8d3adac4d4a09&lt;/p&gt;</otherinfo>
						<reference>&lt;p&gt;http://websecuritytool.codeplex.com/wikipage?title=Checks#user-controlled-html-attribute&lt;/p&gt;</reference>
						<cweid>20</cweid>
						<wascid>20</wascid>
						<sourceid>1286</sourceid>
					</alertitem>
				
			</alerts>
		</site>
	
</OWASPZAPReport>